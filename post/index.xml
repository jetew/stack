<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Kitin's</title><link>/post/</link><description>Recent content in Posts on Kitin's</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Kitin</copyright><lastBuildDate>Fri, 01 Mar 2024 05:26:41 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 安装 XanMod 内核开启 BBR V3</title><link>/archives/xanmod/</link><pubDate>Fri, 01 Mar 2024 05:26:41 +0800</pubDate><guid>/archives/xanmod/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;h3 id="关于-xanmod-内核">关于 XanMod 内核&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://xanmod.org/" target="_blank" rel="noopener"
>XanMod 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>默认的 Linux 内核被设计为一种通用解决方案，能够在不同的系统和硬件配置上提供广泛的兼容性。它稳定、可靠且经过广泛测试，但并不总是针对特定用例提供最佳性能。&lt;/p>
&lt;p>自定义内核（例如 XanMod）则能满足这一需求。XanMod 内核是基于最新稳定版本的 Linux 内核，旨在通过低延迟提高系统的响应性能。它是由社区驱动的项目，结合了其他内核的最佳特性和独特的增强功能，更加专注于优化桌面、多媒体和游戏工作负载，以提供更具响应性和流畅性的 Linux 使用体验。&lt;/p>
&lt;h3 id="注意事项">注意事项&lt;/h3>
&lt;p>XanMod 内核目前仅支持 X86 结构的 CPU，且目前仅支持 Debian/Ubuntu&lt;/p>
&lt;h3 id="内核选择">内核选择&lt;/h3>
&lt;p>XanMod 项目提供多种不同的内核构建，每种构建都针对特定的用例和硬件配置。&lt;/p>
&lt;h4 id="xanmod-main-内核">XanMod MAIN 内核&lt;/h4>
&lt;p>MAIN 内核是标准的 XanMod，包括最新稳定版本的 Linux 内核，并针对桌面、多媒体和游戏工作负载进行了优化。MAIN 内核有四个版本可供选择：&lt;/p>
&lt;ul>
&lt;li>&lt;code>linux-xanmod-x64v1&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-x64v2&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-x64v3&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-x64v4&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="xanmod-edge-内核">XanMod EDGE 内核&lt;/h4>
&lt;p>EDGE 内核专为想要最新功能和增强的用户而设计，它们包括最近版本的 Linux 内核，并针对高性能工作负载进行了优化。EDGE 内核有三个版本可供选择：&lt;/p>
&lt;ul>
&lt;li>&lt;code>linux-xanmod-edge-x64v2&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-edge-x64v3&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-edge-x64v4&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="xanmod-lts-内核">XanMod LTS 内核&lt;/h4>
&lt;p>LTS（长期支持）内核是为将稳定性和可靠性放在优先考虑的用户而设计，它们包括较旧但经过更多测试的 Linux 内核版本，并针对通用工作负载进行了优化。LTS 内核有四个版本可供选择：&lt;/p>
&lt;ul>
&lt;li>&lt;code>linux-xanmod-lts-x64v1&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-lts-x64v2&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-lts-x64v3&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-lts-x64v4&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="xanmod-rt-内核">XanMod RT 内核&lt;/h4>
&lt;p>RT（实时）内核是为关键应用场景设计的，例如 Linux 游戏服务器、流媒体、直播制作和超低延迟需求的用户，它们包括 PREEMPT_RT 实时补丁，可降低系统的延迟并提高响应性。RT 内核有三个版本可供选择：&lt;/p>
&lt;ul>
&lt;li>&lt;code>linux-xanmod-rt-x64v2&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-rt-x64v3&lt;/code>&lt;/li>
&lt;li>&lt;code>linux-xanmod-rt-x64v4&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>这些特定的 XanMod 内核构建被设计用于特定的硬件配置，涵盖从较旧的 x86-64 系统到最新的 AMD 和 Intel 处理器。您可以在 &lt;a class="link" href="https://xanmod.org" target="_blank" rel="noopener"
>XanMod 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 上找到不同内核构建硬件兼容性的更详细信息。&lt;/p>
&lt;hr>
&lt;h2 id="安装步骤">安装步骤&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;h4 id="安装必要组件">安装必要组件&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y gnupg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="检测-cpu-支持版本">检测 CPU 支持版本&lt;/h4>
&lt;p>XanMod 有各种版本，需依据 CPU ISA（指令集架构）而选择合适的版本，我们可以通过官方提供的脚本来确认：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">awk -f &amp;lt;&lt;span class="o">(&lt;/span>wget -qO- https://dl.xanmod.org/check_x86-64_psabi.sh&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">CPU supports x86-64-v4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里可以看到我的 CPU 是支持 v4 版本的，安装时可以按照此结果进行选择。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：一定要选择符合的版本进行安装，否则将导致无法正常启动！&lt;/p>
&lt;h4 id="安装-xanmod">安装 XanMod&lt;/h4>
&lt;p>注册 PGP 密钥：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -qO - https://dl.xanmod.org/archive.key &lt;span class="p">|&lt;/span> gpg --dearmor -o /usr/share/keyrings/xanmod-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加存储库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;deb [signed-by=/usr/share/keyrings/xanmod-archive-keyring.gpg] http://deb.xanmod.org releases main&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> tee /etc/apt/sources.list.d/xanmod-release.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更新 APT 软件包：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装 XanMod 内核，这里我以 XanMod MAIN x64 v4 内核为例，你可以根据自己的需求进行安装 MAIN、EDGE、LTS 或 RT 内核：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install -y linux-xanmod-x64v4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后可通过 &lt;code>reboot&lt;/code> 进行重启使内核生效，如果遇到通过命令重启不生效的情况，可以去云服务商后台进行重启操作。&lt;/p>
&lt;h4 id="检测内核">检测内核&lt;/h4>
&lt;p>在终端执行 &lt;code>uname -r&lt;/code> 查看内核，输出结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">6.7.6-x64v4-xanmod1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这说明已经成功安装并切换至 XanMod 内核了。&lt;/p>
&lt;h4 id="bbr3-状态与队列算法">BBR3 状态与队列算法&lt;/h4>
&lt;p>在终端执行以下命令开启 BBR3 并设置队列算法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /etc/sysctl.conf &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_congestion_control=bbr
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.default_qdisc=fq_pie
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行 &lt;code>sysctl -p&lt;/code> 看到以下内容则说明开启成功：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_congestion_control &lt;span class="o">=&lt;/span> bbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.default_qdisc &lt;span class="o">=&lt;/span> fq_pie
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行 &lt;code>reboot&lt;/code> 重启生效。&lt;/p>
&lt;p>下面是我抄来的内核参数配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /etc/sysctl.conf &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">vm.swappiness = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_congestion_control = bbr
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.default_qdisc = fq_pie
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.file-max = 1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">fs.inotify.max_user_instances = 8192
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_syncookies = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_fin_timeout = 30
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_tw_reuse = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.ip_local_port_range = 1024 65000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_max_syn_backlog = 16384
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_max_tw_buckets = 6000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.route.gc_timeout = 100
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_syn_retries = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_synack_retries = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.somaxconn = 32768
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.core.netdev_max_backlog = 32768
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_timestamps = 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.ipv4.tcp_max_orphans = 32768
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在终端执行以下命令检查 BBR3 状态：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">modinfo tcp_bbr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">name: tcp_bbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filename: &lt;span class="o">(&lt;/span>&lt;span class="nb">builtin&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">version: &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description: TCP BBR &lt;span class="o">(&lt;/span>Bottleneck Bandwidth and RTT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">license: Dual BSD/GPL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">file: net/ipv4/tcp_bbr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: David Morley &amp;lt;morleyd@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Arjun Roy &amp;lt;arjunroy@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Kevin Yang &amp;lt;yyd@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Yousuk Seung &amp;lt;ysseung@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Priyaranjan Jha &amp;lt;priyarjha@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Soheil Hassas Yeganeh &amp;lt;soheil@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Yuchung Cheng &amp;lt;ycheng@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Neal Cardwell &amp;lt;ncardwell@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: Van Jacobson &amp;lt;vanj@google.com&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到已成功开启 BBR3，如果报错可以先执行 &lt;code>depmod&lt;/code>&lt;/p>
&lt;p>执行以下命令查看队列算法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sysctl net.core.default_qdisc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">net.core.default_qdisc &lt;span class="o">=&lt;/span> fq_pie
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CentOS7 编译安装 Node</title><link>/archives/make_node/</link><pubDate>Sun, 25 Feb 2024 23:37:17 +0800</pubDate><guid>/archives/make_node/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在之前的文章 &lt;a class="link" href="/archives/waline_deploy/" >《Waline 服务端独立部署方案》
&lt;/a> 中有讲到过进行源码编译安装 Node ，但只是带过一下。其实我在使用 Debian 时直接进行编译安装是没有问题的，但是在 CentOS7 下，遇到许多问题；于是便在此记录一下方便日后进行查阅。&lt;/p>
&lt;hr>
&lt;h2 id="安装步骤">安装步骤&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;ol>
&lt;li>软件依赖&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;code>gcc&lt;/code> &lt;code>g++&lt;/code> ≥ 10.1&lt;/li>
&lt;li>GNU Make ≥ 3.81&lt;/li>
&lt;li>Python&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>安装依赖&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install -y python3 make python3-pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>gcc&lt;/code> 和 &lt;code>gcc-c++&lt;/code> 由于 &lt;strong>yum&lt;/strong> 源版本过低，需要另外进行编译安装，参考 &lt;a class="link" href="/archives/make_gcc/" >《CentOS 7 编译安装 gcc》
&lt;/a>&lt;/p>
&lt;ol start="3">
&lt;li>下载源码&lt;/li>
&lt;/ol>
&lt;p>从 &lt;a class="link" href="https://nodejs.org/" target="_blank" rel="noopener"
>Nodejs官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 下载源码并进行解压&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://nodejs.org/dist/v20.11.1/node-v20.11.1.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf node-v20.11.1.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编译安装">编译安装&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> node-v20.11.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">……
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO: configure completed successfully
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建窗口，防止网络问题断开终端导致安装中止&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">screen -S node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里可以通过 &lt;code>make -j&lt;/code> 设置线程数来提升编译速度，如果不清楚该设置多少，可以通过 &lt;code>make -j$(nproc)&lt;/code> 自动计算线程数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>为软件设置环境变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在最后添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/node/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/node/include:&lt;span class="nv">$CPATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/node/lib:&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>刷新变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成后可通过 &lt;code>node -v&lt;/code> 、 &lt;code>npm version&lt;/code> 、 &lt;code>npx -v&lt;/code> 进行验证，返回版本号则表示成功。&lt;/p>
&lt;ul>
&lt;li>可能出现的问题&lt;/li>
&lt;/ul>
&lt;p>安装过程中可能会出现 &lt;code>…… : Error: no such instruction: ……&lt;/code> 若遇到此问题则需要通过编译安装新版 &lt;code>binutils&lt;/code>&lt;/p>
&lt;h4 id="编译安装-binutils">编译安装 binutils&lt;/h4>
&lt;p>可通过 &lt;a class="link" href="https://ftp.gnu.org/gnu/binutils/" target="_blank" rel="noopener"
>GNU官方镜像
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 下载新版源码，国内服务器可使用 &lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/gnu/binutils/" target="_blank" rel="noopener"
>清华大学镜像
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 国内服务器可更换为清华大学镜像下载地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://ftp.gnu.org/gnu/binutils/binutils-2.42.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf binutils-2.42.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> binutils-2.42
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/binutils
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">…………
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">…………
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">configure: creating ./config.status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">config.status: creating Makefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>卸载旧版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum remove -y binutils
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置环境变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在最后添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/binutils/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/binutils/include:&lt;span class="nv">$CPATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/binutils/lib:&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>刷新变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后编辑 &lt;code>/etc/yum.conf&lt;/code> 为 &lt;code>node&lt;/code> 和 &lt;code>binutils&lt;/code> 添加忽略：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/yum.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在末尾添加上：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">exclude&lt;/span>&lt;span class="o">=&lt;/span>node*,binutils*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/nodejs/node/blob/main/BUILDING.md#building-nodejs-on-supported-platforms" target="_blank" rel="noopener"
>Building Node.js from source on supported platforms
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://sourceware.org/binutils/binutils-porting-guide.txt" target="_blank" rel="noopener"
>guide to porting the binutils
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>VPS 一键重装系统工具</title><link>/archives/installnet/</link><pubDate>Sat, 03 Feb 2024 10:21:02 +0800</pubDate><guid>/archives/installnet/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在使用 VPS 时，可能会碰到主机商并没有提供我们所需要的系统，或者有些主机商的操作系统会带一些 “无关” 进程；这个时候我们就可以通过一键重装工具来安装一款我们需要的，干净的操作系统。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/leitbogioro/Tools" target="_blank" rel="noopener"
>Github项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="使用说明">使用说明&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>下载脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate -qO InstallNET.sh &lt;span class="s1">&amp;#39;https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod a+x InstallNET.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>国内主机使用以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate -qO InstallNET.sh &lt;span class="s1">&amp;#39;https://gitee.com/mb9e8j2/Tools/raw/master/Linux_reinstall/InstallNET.sh&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod a+x InstallNET.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果报错，则需要安装 &lt;code>wget&lt;/code>&lt;/p>
&lt;p>Debian 系：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>RedHat 7：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install -y wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Redhat 8(8+)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dnf install wget -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alpine Linux：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apk update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apk add bash wget
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s/root:\/bin\/ash/root:\/bin\/bash/g&amp;#39;&lt;/span> /etc/passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="脚本参数">脚本参数&lt;/h3>
&lt;p>使用脚本时，需要自己添加参数；基本参数如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash InstallNET.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>系统选择：&lt;/p>
&lt;ol>
&lt;li>Debian&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-debian&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>7-12 如安装 Debian 12 则参数为 &lt;code>-debian 12&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>CentOS&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-centos&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>7、8/9-stream 如安装 CentOS7 则参数为 &lt;code>-centos 7&lt;/code> CentOS 9 为&lt;code>-centos 9-stream&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>Ubuntu&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-ubuntu&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>18.04/20.04/22.04 ， 如 &lt;code>-ubuntu 22.04&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>Kali&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-kali&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>rolling/dev/experimental 分别对应 Kali Rolling, Development 和 Experimental ， 如 &lt;code>-kali rolling&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="5">
&lt;li>Alpine&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-alpine&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>3.16-3.18/edge ， 如 &lt;code>-alpine dege&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="6">
&lt;li>AlmaLinux&lt;/li>
&lt;/ol>
&lt;p>&lt;code>almalinux&lt;/code> 或 &lt;code>alma&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>8/9 ， 如 &lt;code>-alma 9&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="7">
&lt;li>RockyLinux&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-rockylinux&lt;/code> 或 &lt;code>-rocky&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>8/9 ， 如 &lt;code>-rocky 9&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="8">
&lt;li>Fedora&lt;/li>
&lt;/ol>
&lt;p>&lt;code>-fedora&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>38/39 ， 如 &lt;code>-fedora 39&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="9">
&lt;li>Windows&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>10/11/2012/2016/2019/2022 ， 如 &lt;code>-windows 2022&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>可选发行版列表：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Windows 10 Enterprise LTSC 22H2 for simplified Chinese and Japanese, 23H2 for English&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Windows 11 Pro for Workstation 22H2 for simplified Chinese and Japanese, 23H2 for English&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Windows Server 2012 R2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Windows Server 2016&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Windows Server 2019&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Windows Server 2022&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>其他基本参数：&lt;/p>
&lt;p>&lt;code>-lang/-language &amp;quot;cn&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>此选项为 Windows 镜像设置语言， 如 &lt;code>-lang &amp;quot;en&amp;quot;&lt;/code> &lt;code>&amp;quot;cn&amp;quot;&lt;/code> 为简体中文， &lt;code>&amp;quot;en&amp;quot;&lt;/code> 为英文， &lt;code>&amp;quot;jp&amp;quot;&lt;/code>为日文。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>-port &amp;quot;22&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>此选项为 Linux SSH 端口，默认为 22 可选 1~65535；该参数不可用于 Windows&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>-pwd/-password &amp;quot;yourpassword&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>此选项可为系统设置密码&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>-hostname &amp;quot;yourhostname&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>此选项可设置主机名&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>-mirror &amp;quot;mirror url&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>通过镜像下载安装，可设置与服务器实际位置接近的镜像地址以加快下载速度&lt;/p>
&lt;/blockquote>
&lt;p>如国内主机，可通过中科大源：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://mirrors.ustc.edu.cn/debian/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>或清华源：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://mirrors.tuna.tsinghua.edu.cn/debian/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>更多镜像地址如下：&lt;/p>
&lt;p>Debian：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://www.debian.org/mirror/list.html&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>CentOS7/8-stream：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://www.centos.org/download/mirrors&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>CentOS 9-stream/+：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://admin.fedoraproject.org/mirrormanager/mirrors/CentOS&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Ubuntu：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://launchpad.net/ubuntu/+cdmirrors&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Kali：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://http.kali.org/README.mirrorlist&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Alpine Linux：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://mirrors.alpinelinux.org/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>RockyLinux：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://mirrors.rockylinux.org/mirrormanager/mirrors&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Fedora：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://admin.fedoraproject.org/mirrormanager/mirrors/Fedora&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>-timezone &amp;quot;Asia/Shanghai&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>手动设置时区，若输入的时区参数有误，则自动设置为 &amp;ldquo;Asia/Tokyo&amp;rdquo;；若未设置该参数，则按照访客 IP 地理位置分配，该选项不可用于 Windows 系统&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>-swap/-virtualmemory/-virtualram &amp;quot;4096&amp;quot;&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>指定磁盘空间为 Linux 添加交换分区，单位为 MB， 如添加 2GB Swap， 参数为 &lt;code>-swap &amp;quot;2048&amp;quot;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用参考">使用参考：&lt;/h3>
&lt;p>例如国内服务器从清华大学源下载 Debian12 镜像安装，设置时区为 Asia/Shanghai，并设置主机名、SSH 端口、密码、交换分区：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash InstallNET.sh -debian &lt;span class="m">12&lt;/span> -mirror &lt;span class="s2">&amp;#34;https://mirrors.tuna.tsinghua.edu.cn/debian/&amp;#34;&lt;/span> -hostname &lt;span class="s2">&amp;#34;Debian&amp;#34;&lt;/span> -port &lt;span class="s2">&amp;#34;1234&amp;#34;&lt;/span> -pwd &lt;span class="s2">&amp;#34;debian123&amp;#34;&lt;/span> -timezone &lt;span class="s2">&amp;#34;Asia/Shanghai&amp;#34;&lt;/span> -swap &lt;span class="s2">&amp;#34;2048&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者直接一步到位：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">bash &amp;lt;&lt;span class="o">(&lt;/span>wget --no-check-certificate -qO- &lt;span class="s1">&amp;#39;https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> -debian &lt;span class="m">12&lt;/span> -mirror &lt;span class="s2">&amp;#34;mirror link&amp;#34;&lt;/span> -hostname &lt;span class="s2">&amp;#34;hostname&amp;#34;&lt;/span> -port &lt;span class="s2">&amp;#34;prot&amp;#34;&lt;/span> -pwd &lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span> -timezone &lt;span class="s2">&amp;#34;Asia/Shanghai&amp;#34;&lt;/span> -swap &lt;span class="s2">&amp;#34;2048&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>回车后等待脚本运行，运行完成后检查配置一致性（网络配置和自定义配置是否正确）：&lt;/p>
&lt;p>&lt;img src="/archives/installnet/1.png"
width="1020"
height="680"
srcset="/archives/installnet/1_hu4e3402bd222e5fffc6b7d34a851af765_67190_480x0_resize_box_3.png 480w, /archives/installnet/1_hu4e3402bd222e5fffc6b7d34a851af765_67190_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="配置完成"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;/p>
&lt;p>&lt;img src="/archives/installnet/2.png"
width="1020"
height="515"
srcset="/archives/installnet/2_hu0d6ddffccafa4878324c3a885fe085ad_46646_480x0_resize_box_3.png 480w, /archives/installnet/2_hu0d6ddffccafa4878324c3a885fe085ad_46646_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="配置完成"
class="gallery-image"
data-flex-grow="198"
data-flex-basis="475px"
>&lt;/p>
&lt;p>确定后即可输入 &lt;code>reboot&lt;/code> 重启 VPS 等待重新安装了，此时可通过主机商提供的 VNC 连接查看安装过程。&lt;/p>
&lt;p>详细使用说明请查看 &lt;a class="link" href="https://github.com/leitbogioro/Tools/blob/master/README.md" target="_blank" rel="noopener"
>Linux reinstall useage
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/leitbogioro/Tools" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/leitbogioro/Tools/blob/master/README.md" target="_blank" rel="noopener"
>Linux reinstall useage
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Debian 下手动安装 LCMP 环境</title><link>/archives/install_lcmp/</link><pubDate>Fri, 20 Oct 2023 22:24:35 +0800</pubDate><guid>/archives/install_lcmp/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>继 &lt;a class="link" href="https://mp.weixin.qq.com/s/OT7C1l5rjBNCawFXRIUJOQ" target="_blank" rel="noopener"
>LNMP 供应链投毒事件
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 后，知名 LNMP 部署工具 Oneinstack 也被发现挂码，参考 Oneinstack 项目 &lt;a class="link" href="https://github.com/oneinstack/oneinstack/issues/487" target="_blank" rel="noopener"
>Issues #487
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 和 &lt;a class="link" href="https://github.com/oneinstack/oneinstack/issues/511" target="_blank" rel="noopener"
>Issues #511
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;p>此事在 Github 和 V2EX 上已有帖子在讨论；而始作俑者 &lt;strong>金华市矜贵网络科技有限公司&lt;/strong> 至今陆续拥有了 &lt;strong>WDCP&lt;/strong>、&lt;strong>LNMP 一建包&lt;/strong> 和 &lt;strong>Oneinstack&lt;/strong>；鉴于金华矜贵还试图收购秋水逸冰大佬的 &lt;strong>LAMP 一键安装包&lt;/strong> (但被秋大拒绝了)，他们后续可能还会盯上其他部署工具；所以建议大家最近有使用过上述工具的直接重装系统。&lt;/p>
&lt;p>而对 LNMP 一建包和 Oneinstack 有使用需求的人不在少数，所以我们必须寻找替代品，如上文提到的秋水逸冰大佬的 LAMP/LCMP 一键包或者学着自己进行搭建与配置。&lt;/p>
&lt;hr>
&lt;h3 id="脚本推荐">脚本推荐&lt;/h3>
&lt;h4 id="lamp-一键包">LAMP 一键包&lt;/h4>
&lt;p>LAMP 一键安装包是一个用 Linux Shell 编写的可以为 Amazon Linux 2/CentOS/Debian/Ubuntu 系统的 VPS 或服务器安装 LAMP(Linux + Apache + MySQL/MariaDB + PHP) 生产环境的 Shell 脚本。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://lamp.sh" target="_blank" rel="noopener"
>LAMP 一键包官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/teddysun/lamp" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="lcmp-一键包">LCMP 一键包&lt;/h4>
&lt;p>LCMP 一键包 (Linux + Caddy2 + MySQL/MariaDB + PHP) 是一个强大的 Bash 脚本，用于安装 Caddy2 + MariaDB + PHP；可以通过 &lt;code>yum&lt;/code> 或 &lt;code>apt-get&lt;/code> 命令在内存较小的 VPS 中安装 Caddy2 + MariaDB + PHP，只需在安装前输入数字选择要安装的内容即可；同为秋水逸冰大佬制作&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/teddysun/lamp" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>接下来看下如何手动安装及配置。&lt;/p>
&lt;hr>
&lt;h2 id="安装与配置">安装与配置&lt;/h2>
&lt;h3 id="安装必要软件和依赖">安装必要软件和依赖&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y debian-keyring debian-archive-keyring build-essential gcc g++ make cmake autoconf libjpeg62-turbo-dev libjpeg-dev libpng-dev libwebp7 libwebp-dev libfreetype6 libfreetype6-dev libssh2-1-dev libmhash2 libpcre3 libpcre3-dev gzip libbz2-1.0 libbz2-dev libgd-dev libxml2 libxml2-dev libsodium-dev argon2 libargon2-1 libargon2-dev libiconv-hook-dev zlib1g zlib1g-dev libc6 libc6-dev libc-client2007e-dev libglib2.0-0 libglib2.0-dev bzip2 libzip-dev libbz2-1.0 libncurses5 libncurses5-dev libaio1 libaio-dev numactl libreadline-dev curl libcurl3-gnutls libcurl4-openssl-dev e2fsprogs libkrb5-3 libkrb5-dev libltdl-dev libidn11-dev openssl net-tools libssl-dev libtool libevent-dev bison re2c libsasl2-dev libxslt1-dev libicu-dev locales patch vim zip unzip tmux htop bc dc expect libexpat1-dev libonig-dev libtirpc-dev rsync git lsof lrzsz rsyslog cron logrotate chrony libsqlite3-dev psmisc wget sysv-rc apt-transport-https ca-certificates software-properties-common gnupg screen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译和安装软件之前可以通过执行 &lt;code>screen -S lcmp&lt;/code> 创建窗口，防止网络不稳定等不确定因素断连导致安装或编译中断
若要恢复窗口，执行 &lt;code>screen -r lcmp&lt;/code> 即可&lt;/p>
&lt;h3 id="安装-caddy">安装 Caddy&lt;/h3>
&lt;p>可以使用 &lt;code>apt&lt;/code> 命令通过 Caddy 官方存储库进行安装，参考 &lt;a class="link" href="/archives/lcmp" >这一篇
&lt;/a> 我这里主要讲手动安装&lt;/p>
&lt;p>创建必要文件夹、用户与组&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p /etc/caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /var/log/caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">groupadd caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">useradd -g caddy -m -d /var/lib/caddy -s /usr/sbin/nologin caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载二进制文件、解压、移动至安装文件夹并赋予可执行权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/caddyserver/caddy/releases/download/v2.7.6/caddy_2.7.6_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf caddy_2.7.6_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv caddy /usr/bin/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x /usr/bin/caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="配置-caddy">配置 Caddy&lt;/h4>
&lt;p>首先为 Caddy 创建网站目录和 SSL 存放目录，网站目录我设置为 &lt;strong>/data/www&lt;/strong>，自有证书存放目录在 &lt;strong>/var/lib/caddy/ssl&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p /data/www/default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /var/lib/caddy/ssl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加 &lt;code>Systemd&lt;/code> 脚本，并设置开机启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/lib/systemd/system/caddy.service &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Description=Caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">After=network.target network-online.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Requires=network-online.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Type=notify
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">User=caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Group=caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStart=/usr/bin/caddy run --environ --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile --force
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">TimeoutStopSec=5s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitNOFILE=1048576
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">PrivateTmp=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ProtectSystem=full
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">WantedBy=multi-user.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编辑 Caddyfile 配置文件，并进行重写，位于 &lt;strong>/etc/caddy/Caddyfile&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /etc/caddy/Caddyfile &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> admin off
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> log {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> output file /var/log/caddy/access.log {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> roll_size 100mb
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> roll_keep_for 15d
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> email jettwan@outlook.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> acme_ca https://acme.zerossl.com/v2/DV90
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">:80 {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> root * /data/www/default
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> header {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> Strict-Transport-Security &amp;#34;max-age=31536000; preload&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> X-Content-Type-Options nosniff
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> X-Frame-Options SAMEORIGIN
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> encode gzip
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> # php_fastcgi unix//dev/shm/php-cgi.sock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> file_server browse
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">caddy fmt --overwrite /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>为相应文件夹赋予权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chown -R caddy:caddy /etc/caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R caddy:caddy /var/lib/caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R caddy:caddy /var/log/caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R caddy:caddy /data/www
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="安装-mariadb">安装 MariaDB&lt;/h3>
&lt;p>可以使用预编译的二进制包安装或者源码编译进行安装，自行选择即可；我推荐使用二进制包进行安装。&lt;/p>
&lt;h4 id="安装前的准备">安装前的准备&lt;/h4>
&lt;p>为 MariaDB 创建用户组，创建安装目录并设置权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">groupadd mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">useradd -g mysql -M -s /usr/sbin/nologin mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /usr/local/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /data/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R mysql:mysql /usr/local/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R mysql:mysql /data/mariadb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译安装 Jemalloc 为 MariaDB 提供内存分配管理&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/jemalloc/jemalloc/archive/5.3.0.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf 5.3.0.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> jemalloc-5.3.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">autoconf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>链接动态库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s /usr/local/lib/libjemalloc.so.2 /usr/lib/libjemalloc.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;/usr/local/lib&amp;#39;&lt;/span> &amp;gt; /etc/ld.so.conf.d/jemalloc.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="二进制安装">二进制安装&lt;/h4>
&lt;p>下载二进制包&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://archive.mariadb.org/mariadb-10.11.7/bintar-linux-systemd-x86_64/mariadb-10.11.7-linux-systemd-x86_64.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>国内主机可以使用清华源地址：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://mirrors.tuna.tsinghua.edu.cn/mariadb/mariadb-10.11.7/bintar-linux-systemd-x86_64/mariadb-10.11.7-linux-systemd-x86_64.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只需要将下载好的预编译二进制文件解压到安装位置，然后更改相关文件的配置即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf mariadb-10.11.7-linux-systemd-x86_64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv /usr/local/src/mariadb-10.11.7-linux-systemd-x86_64/* /usr/local/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 为 MariaDB 开启 Jemalloc 支持&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/local/lib/libjemalloc.so@&amp;#39;&lt;/span> /usr/local/mariadb/bin/mysqld_safe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更改相关文件中 MariaDB 安装位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@/usr/local/mysql@/usr/local/mariadb@g&amp;#34;&lt;/span> /usr/local/mariadb/bin/mysqld_safe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="配置-mariadb">配置 MariaDB&lt;/h4>
&lt;p>首先设置 Service 脚本，方便进行管理；这里主要设置一下安装路径和数据路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp /usr/local/mariadb/support-files/mysql.server /etc/init.d/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更改 MariaDB安装位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@^basedir=.*@basedir=/usr/local/mariadb@&amp;#34;&lt;/span> /etc/init.d/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更改 MariaDB 数据位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@^datadir=.*@datadir=/data/mariadb@&amp;#34;&lt;/span> /etc/init.d/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x /etc/init.d/mysql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着来配置下 &lt;code>my.cnf&lt;/code> 文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /etc/my.cnf &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[client]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">port = 3306
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">socket = /tmp/mysql.sock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">default-character-set = utf8mb4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[mysqld]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">port = 3306
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">socket = /tmp/mysql.sock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">basedir = /usr/local/mariadb
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">datadir = /data/mariadb
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pid-file = /data/mariadb/mysql.pid
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">user = mysql
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">bind-address = 0.0.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">server-id = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">init-connect = &amp;#39;SET NAMES utf8mb4&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">character-set-server = utf8mb4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">skip-name-resolve
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">#skip-networking
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">back_log = 300
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">max_connections = 1000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">max_connect_errors = 6000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">open_files_limit = 65535
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">table_open_cache = 128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">max_allowed_packet = 500M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">binlog_cache_size = 1M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">max_heap_table_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">tmp_table_size = 16M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">read_buffer_size = 2M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">read_rnd_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">sort_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">join_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">key_buffer_size = 4M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">thread_cache_size = 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">query_cache_type = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">query_cache_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">query_cache_limit = 2M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ft_min_word_len = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">log_bin = mysql-bin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">binlog_format = mixed
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">expire_logs_days = 7
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">log_error = /data/mariadb/mysql-error.log
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">slow_query_log = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">long_query_time = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">slow_query_log_file = /data/mariadb/mysql-slow.log
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">performance_schema = 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">#lower_case_table_names = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">skip-external-locking
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">default_storage_engine = InnoDB
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_file_per_table = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_open_files = 500
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_buffer_pool_size = 64M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_write_io_threads = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_read_io_threads = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_purge_threads = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_flush_log_at_trx_commit = 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_log_buffer_size = 2M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_log_file_size = 32M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_max_dirty_pages_pct = 90
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">innodb_lock_wait_timeout = 120
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">bulk_insert_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">myisam_sort_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">myisam_max_sort_file_size = 10G
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">interactive_timeout = 28800
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">wait_timeout = 28800
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[mysqldump]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">quick
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">max_allowed_packet = 500M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[myisamchk]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">key_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">sort_buffer_size = 8M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">read_buffer = 4M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">write_buffer = 4M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后进行如下修改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最大连接数，改为内存（单位：M）/3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">max_connections&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存 1500M - 2500M 改成如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">thread_cache_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">query_cache_size&lt;/span> &lt;span class="o">=&lt;/span> 16M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">myisam_sort_buffer_size&lt;/span> &lt;span class="o">=&lt;/span> 16M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">key_buffer_size&lt;/span> &lt;span class="o">=&lt;/span> 16M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">innodb_buffer_pool_size&lt;/span> &lt;span class="o">=&lt;/span> 128M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">tmp_table_size&lt;/span> &lt;span class="o">=&lt;/span> 32M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">table_open_cache&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">256&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存 2500M - 3500M 改成如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">thread_cache_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">query_cache_size&lt;/span> &lt;span class="o">=&lt;/span> 32M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">myisam_sort_buffer_size&lt;/span> &lt;span class="o">=&lt;/span> 32M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">key_buffer_size&lt;/span> &lt;span class="o">=&lt;/span> 64M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">innodb_buffer_pool_size&lt;/span> &lt;span class="o">=&lt;/span> 512M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">tmp_table_size&lt;/span> &lt;span class="o">=&lt;/span> 64M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">table_open_cache&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">512&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存大于 3500M 改成如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">thread_cache_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">query_cache_size&lt;/span> &lt;span class="o">=&lt;/span> 64M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">myisam_sort_buffer_size&lt;/span> &lt;span class="o">=&lt;/span> 64M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">key_buffer_size&lt;/span> &lt;span class="o">=&lt;/span> 256M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">innodb_buffer_pool_size&lt;/span> &lt;span class="o">=&lt;/span> 1024M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">tmp_table_size&lt;/span> &lt;span class="o">=&lt;/span> 128M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">table_open_cache&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1024&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建必要文件、文件夹，并赋予权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">touch /tmp/mysql.sock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown mysql:mysql /tmp/mysql.sock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /data/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">touch /data/mariadb/&lt;span class="o">{&lt;/span>mysql.pid,mysql-error.log,mysql-slow.log&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R mysql:mysql /data/mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">664&lt;/span> /tmp/mysql.sock /data/mariadb/*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R mysql:mysql /usr/local/mariadb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加环境变量&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=/usr/local/mariadb/bin:$PATH&amp;#39;&lt;/span> &amp;gt; /etc/profile.d/mysql.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> /etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来使用自带的脚本进行数据导入及初始化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/scripts/mysql_install_db --user&lt;span class="o">=&lt;/span>mysql --basedir&lt;span class="o">=&lt;/span>/usr/local/mariadb/ --datadir&lt;span class="o">=&lt;/span>/data/mariadb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/install_lcmp/1.png"
width="805"
height="470"
srcset="/archives/install_lcmp/1_hu5e0c1d4a3bced10ccd0956b80e01422d_73048_480x0_resize_box_3.png 480w, /archives/install_lcmp/1_hu5e0c1d4a3bced10ccd0956b80e01422d_73048_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="初始化数据"
class="gallery-image"
data-flex-grow="171"
data-flex-basis="411px"
>&lt;/p>
&lt;p>完成之后，赋予 my.cnf 对应的权限并启动 MariaDB&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> /etc/my.cnf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">service mysql start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行下面命令进行安全设置，&lt;code>dbrootpwd=&lt;/code> 设置为你要设置的密码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -e &lt;span class="s2">&amp;#34;grant all privileges on *.* to root@&amp;#39;127.0.0.1&amp;#39; identified by \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34; with grant option;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -e &lt;span class="s2">&amp;#34;grant all privileges on *.* to root@&amp;#39;localhost&amp;#39; identified by \&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\&amp;#34; with grant option;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -uroot -p&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span> -e &lt;span class="s2">&amp;#34;delete from mysql.user where Password=&amp;#39;&amp;#39; and User not like &amp;#39;mariadb.%&amp;#39;;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -uroot -p&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span> -e &lt;span class="s2">&amp;#34;delete from mysql.db where User=&amp;#39;&amp;#39;;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -uroot -p&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span> -e &lt;span class="s2">&amp;#34;delete from mysql.proxies_priv where Host!=&amp;#39;localhost&amp;#39;;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -uroot -p&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span> -e &lt;span class="s2">&amp;#34;drop database test;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/mariadb/bin/mysql -uroot -p&lt;span class="si">${&lt;/span>&lt;span class="nv">dbrootpwd&lt;/span>&lt;span class="si">}&lt;/span> -e &lt;span class="s2">&amp;#34;reset master;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成安全设置后为 MariaDB 链接动态库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;/usr/local/mariadb/lib&amp;#34;&lt;/span> &amp;gt; /etc/ld.so.conf.d/mariadb.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="安装-php">安装 PHP&lt;/h3>
&lt;h4 id="准备工作">准备工作&lt;/h4>
&lt;p>在安装 PHP 之前，需要编译安装 libiconv&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://ftp.gnu.org/gnu/libiconv/libiconv-1.17.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf libiconv-1.17.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> libiconv-1.17
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>链接动态库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;/usr/local/lib&amp;#39;&lt;/span> &amp;gt; /etc/ld.so.conf.d/libc.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="源码编译安装">源码编译安装&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://secure.php.net/distributions/php-8.2.16.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf php-8.2.16.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> php-8.2.16
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir build-php &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build-php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">../configure --prefix&lt;span class="o">=&lt;/span>/usr/local/php &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-config-file-path&lt;span class="o">=&lt;/span>/usr/local/php/etc &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-config-file-scan-dir&lt;span class="o">=&lt;/span>/usr/local/php/etc/php.d &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-fpm-user&lt;span class="o">=&lt;/span>caddy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-fpm-group&lt;span class="o">=&lt;/span>caddy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-mysqli&lt;span class="o">=&lt;/span>mysqlnd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-pdo-mysql&lt;span class="o">=&lt;/span>mysqlnd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-iconv&lt;span class="o">=&lt;/span>/usr/local/ &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-freetype &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-jpeg &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-zlib &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-password-argon2 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-sodium &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-curl &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-openssl &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-mhash &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-xsl &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-gettext &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-zip &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-fpm &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-opcache &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-mysqlnd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-xml &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-bcmath &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-shmop &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-exif &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-sysvsem &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-mbregex &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-mbstring &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-gd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-pcntl &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-sockets &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-ftp &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-intl &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-soap &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--disable-fileinfo &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--disable-rpath &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--disable-debug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">ZEND_EXTRA_LIBS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;-liconv&amp;#39;&lt;/span> -j &lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>为 PHP 添加环境变量&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;export PATH=/usr/local/php/bin:\$PATH&amp;#34;&lt;/span> &amp;gt; /etc/profile.d/php.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> /etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>复制 php.ini 配置并进行修改&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp /usr/local/src/php-8.2.16/php.ini-production /usr/local/php/etc/php.ini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 修改以下部分&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">output_buffering&lt;/span> &lt;span class="o">=&lt;/span> On
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">short_open_tag&lt;/span> &lt;span class="o">=&lt;/span> On
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">expose_php&lt;/span> &lt;span class="o">=&lt;/span> Off
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">equest_order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;CGP&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date.timezone &lt;span class="o">=&lt;/span> Asia/Shanghai
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">post_max_size&lt;/span> &lt;span class="o">=&lt;/span> 100M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">upload_max_filesize&lt;/span> &lt;span class="o">=&lt;/span> 50M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">max_execution_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">600&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">realpath_cache_size&lt;/span> &lt;span class="o">=&lt;/span> 2M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">disable_functions&lt;/span> &lt;span class="o">=&lt;/span> passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,readlink,symlink,popepassthru,stream_socket_server,fsocket,popen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>memory_limit&lt;/code> 项参数如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存小于 640M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 640M - 1280M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 1280M - 2500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">192&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 2500M - 3500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">256&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 3500M - 4500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">320&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 4500M - 8000M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">384&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#内存大于 8000M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">memory_limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">448&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来为 PHP 开启 OPcache 缓存并进行配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/local/php/etc/php.d/opcache.ini &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[opcache]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">zend_extension=opcache.so
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.enable=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.enable_cli=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.memory_consumption=
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.interned_strings_buffer=8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.max_accelerated_files=100000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.max_wasted_percentage=5
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.use_cwd=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.validate_timestamps=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.revalidate_freq=60
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;opcache.save_comments=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">opcache.consistency_checks=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;opcache.optimization_level=0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>opcache.memory_consumption=&lt;/code> 项，与上文 &lt;strong>php.ini&lt;/strong> 中 &lt;code>memory_limit&lt;/code> 一致&lt;/p>
&lt;p>添加 php-fpm 启动脚本，并设置开机自启&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/lib/systemd/system/php-fpm.service &lt;span class="s">&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Description=The PHP FastCGI Process Manager
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Documentation=http://php.net/docs.php
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Type=simple
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">PIDFile=/usr/local/php/var/run/php-fpm.pid
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStart=/usr/local/php/sbin/php-fpm --nodaemonize --fpm-config usr/local/php/etc/php-fpm.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecReload=/bin/kill -USR2 $MAINPID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitNOFILE=1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitNPROC=1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitCORE=1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">WantedBy=multi-user.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> php-fpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着还需要添加 php-fpm 配置文件，并进行配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/local/php/etc/php-fpm.conf &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;;;;;;;;;;;;;;;;;;;;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">; FPM Configuration ;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;;;;;;;;;;;;;;;;;;;;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;;;;;;;;;;;;;;;;;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">; Global Options ;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;;;;;;;;;;;;;;;;;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[global]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pid = run/php-fpm.pid
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">error_log = log/php-fpm.log
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">log_level = warning
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">emergency_restart_threshold = 30
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">emergency_restart_interval = 60s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">process_control_timeout = 5s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">daemonize = yes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;;;;;;;;;;;;;;;;;;;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">; Pool Definitions ;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;;;;;;;;;;;;;;;;;;;;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[caddy]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">listen = /dev/shm/php-cgi.sock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">listen.backlog = -1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">listen.allowed_clients = 127.0.0.1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">listen.owner = caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">listen.group = caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">listen.mode = 0666
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">user = caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">group = caddy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm = dynamic
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.max_children = 12
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.start_servers = 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.min_spare_servers = 6
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.max_spare_servers = 12
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.max_requests = 2048
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.process_idle_timeout = 10s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">request_terminate_timeout = 120
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">request_slowlog_timeout = 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">pm.status_path = /php-fpm_status
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">slowlog = var/log/slow.log
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">rlimit_files = 51200
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">rlimit_core = 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">catch_workers_output = yes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">;env[HOSTNAME] = $HOSTNAME
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">env[PATH] = /usr/local/bin:/usr/bin:/bin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">env[TMP] = /tmp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">env[TMPDIR] = /tmp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">env[TEMP] = /tmp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>进行如下修改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存小于 3000M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_children &lt;span class="o">=&lt;/span> 内存（单位：M） /3/20
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.start_servers &lt;span class="o">=&lt;/span> 内存（单位：M） /3/30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.min_spare_servers &lt;span class="o">=&lt;/span> 内存（单位：M） /3/40
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_spare_servers &lt;span class="o">=&lt;/span> 内存（单位：M） /3/20
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 3000M - 4500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_children &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.start_servers &lt;span class="o">=&lt;/span> &lt;span class="m">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.min_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 4500M - 6500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_children &lt;span class="o">=&lt;/span> &lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.start_servers &lt;span class="o">=&lt;/span> &lt;span class="m">40&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.min_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存为 6500M - 8500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_children &lt;span class="o">=&lt;/span> &lt;span class="m">70&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.start_servers &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.min_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">40&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">70&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内存大于 8500M&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_children &lt;span class="o">=&lt;/span> &lt;span class="m">80&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.start_servers &lt;span class="o">=&lt;/span> &lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.min_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">80&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="安装php-扩展">安装PHP 扩展&lt;/h3>
&lt;h4 id="redis-扩展">Redis 扩展&lt;/h4>
&lt;p>下载 Redis Server 和 PECL Redis&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/redis/redis/archive/7.2.4.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://pecl.php.net/get/redis-6.0.2.tgz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译安装 Redis Srever&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p /usr/local/redis/&lt;span class="o">{&lt;/span>etc,var&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf 7.2.4.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> redis-7.2.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="nv">PREFIX&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/redis install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将 bin 目录下可执行文件进行链接并配置 redis&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s /usr/local/redis/bin/* /usr/local/bin/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp /usr/local/src/redis-7.2.4/redis.conf /usr/local/redis/etc/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim /usr/local/redis/etc/redis.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 改成如下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pidfile /var/run/redis/redis.pid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logfile /usr/local/redis/var/redis.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir /usr/local/redis/var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">daemonize yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">bind&lt;/span> 127.0.0.1 ::1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># maxmemory 计算方法：内存（单位：M）/8*1000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">maxmemory &lt;span class="m">512000000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加用户、组 并设置文件夹权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">groupadd redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">useradd -g redis -M -s /usr/sbin/nologin redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R redis:redis /usr/local/redis/&lt;span class="o">{&lt;/span>var,etc&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加 Redis Server 启动脚本，并设置开机自启&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/lib/systemd/system/redis-server.service &lt;span class="s">&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Description=Redis In-Memory Data Store
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Type=forking
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">PIDFile=/var/run/redis/redis.pid
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">User=redis
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Group=redis
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Environment=statedir=/var/run/redis
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">PermissionsStartOnly=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStartPre=/bin/mkdir -p ${statedir}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStartPre=/bin/chown -R redis:redis ${statedir}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStop=/bin/kill -s TERM $MAINPID
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Restart=always
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitNOFILE=1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitNPROC=1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">LimitCORE=1000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">WantedBy=multi-user.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> redis-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start redis-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着安装 PECL Redis 并为 PHP 开启 PECL Redis 扩展&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf redis-6.0.2.tgz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> redis-6.0.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/php/bin/phpize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --with-php-config&lt;span class="o">=&lt;/span>/usr/local/php/bin/php-config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;extension=redis.so&amp;#39;&lt;/span> &amp;gt; /usr/local/php/etc/php.d/redis.ini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="memcached-扩展">Memcached 扩展&lt;/h4>
&lt;p>首先需要下载 Memcached、libMemcached 和 PECL Memcached&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://memcached.org/files/memcached-1.6.24.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://pecl.php.net/get/memcached-3.2.0.tgz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开始编译安装 Memcached&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加用户、组&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">groupadd memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">useradd -g memcached -M -s /usr/sbin/nologin memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf memcached-1.6.24.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> memcached-1.6.24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 链接可执行文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/memcached/bin/memcached /usr/bin/memcached
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加 Memcached 启动脚本，并设置开机自启&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/lib/systemd/system/memcached.service &lt;span class="s">&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Description=memcached daemon
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Environment=PORT=11211
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Environment=USER=memcached
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Environment=MAXCONN=1024
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Environment=CACHESIZE=256
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Environment=&amp;#34;OPTIONS=-l 127.0.0.1&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ExecStart=/usr/bin/memcached -p ${PORT} -u ${USER} -m ${CACHESIZE} -c ${MAXCONN} $OPTIONS
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">PrivateTmp=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">ProtectSystem=full
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">NoNewPrivileges=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">PrivateDevices=true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">CapabilityBoundingSet=CAP_SETGID CAP_SETUID CAP_SYS_RESOURCE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">WantedBy=multi-user.target
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start memcached
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在编译安装之前先给 libMencached 打个补丁&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf libmemcached-1.0.18.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; libmemcached-build.patch &lt;span class="s">&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">diff -up ./clients/memflush.cc.old ./clients/memflush.cc
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">--- ./clients/memflush.cc.old 2017-02-12 10:12:59.615209225 +0100
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">+++ ./clients/memflush.cc 2017-02-12 10:13:39.998382783 +0100
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">@@ -39,7 +39,7 @@ int main(int argc, char *argv[])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> options_parse(argc, argv);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">- if (opt_servers == false)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">+ if (!opt_servers)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> char *temp;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">@@ -48,7 +48,7 @@ int main(int argc, char *argv[])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> opt_servers= strdup(temp);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">- if (opt_servers == false)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">+ if (!opt_servers)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> std::cerr &amp;lt;&amp;lt; &amp;#34;No Servers provided&amp;#34; &amp;lt;&amp;lt; std::endl;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> exit(EXIT_FAILURE);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">patch -d libmemcached-1.0.18 -p0 &amp;lt; libmemcached-build.patch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后编译安装 libMencached&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> libmemcached-1.0.18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s2">&amp;#34;s@lthread -pthread -pthreads@lthread -lpthread -pthreads@&amp;#34;&lt;/span> ./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --with-memcached&lt;span class="o">=&lt;/span>/usr/local/memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来编译安装 PECL Memcached 并为 PHP 开启 Memcached 扩展&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf memcached-3.2.0.tgz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> memcached-3.2.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/php/bin/phpize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --with-php-config&lt;span class="o">=&lt;/span>/usr/local/php/bin/php-config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; /usr/local/php/etc/php.d/memcached.ini &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">extension=memcached.so
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">memcached.use_sasl=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="imagick-扩展">Imagick 扩展&lt;/h4>
&lt;p>下载 Imagemagick 和 PECL Imagick&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://imagemagick.org/archive/ImageMagick.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://pecl.php.net/get/imagick-3.7.0.tgz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译安装 Imagemagick&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf ImageMagick.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ImageMagick-7.1.1-29
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/imagemagick &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-shared &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--enable-static
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译安装 PECL Imagick 并为 PHP 开启 Imagick 扩展&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf imagick-3.7.0.tgz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> imagick-3.7.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/php/bin/phpize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --with-php-config&lt;span class="o">=&lt;/span>/usr/local/php/bin/php-config &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--with-imagick&lt;span class="o">=&lt;/span>/usr/local/imagemagick
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;extension=imagick.so&amp;#39;&lt;/span> &amp;gt; /usr/local/php/etc/php.d/imagick.ini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>至此 Caddy2 + MariaDB + PHP 安装完成&lt;/p>
&lt;p>另外需要注意网站根目录权限，网站根目录权限应遵循：
文件 644 文件夹 755 权限用户和用户组 caddy ，其余文档 777 权限是不正常的
如出现文件权限问题时，请执行下面 3 条命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chown -R caddy:caddy /data/www/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find /data/www/ -type d -exec chmod &lt;span class="m">755&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="se">\;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find /data/www/ -type f -exec chmod &lt;span class="m">644&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="se">\;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用 Cloudreve 搭建文件管理</title><link>/archives/cloudreve/</link><pubDate>Mon, 02 Jan 2023 13:21:30 +0800</pubDate><guid>/archives/cloudreve/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。&lt;/p>
&lt;h2 id="安装配置">安装配置&lt;/h2>
&lt;h3 id="获取-cloudreve">获取 Cloudreve&lt;/h3>
&lt;ul>
&lt;li>项目地址：&lt;a class="link" href="https://github.com/cloudreve/Cloudreve" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>你可以在 &lt;a class="link" href="https://github.com/cloudreve/Cloudreve/releases" target="_blank" rel="noopener"
>GitHub Release
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 页面获取已经构建打包完成的主程序。其中每个版本都提供了常见系统架构下可用的主程序，命名规则为cloudreve_版本号_操作系统_CPU架构.tar.gz 。比如，普通 64 位 Linux 系统上部署 3.0.0 版本，则应该下载cloudreve_3.0.0_linux_amd64.tar.gz。&lt;/p>
&lt;h3 id="安装启动">安装启动&lt;/h3>
&lt;p>通过上一步获取 Cloudreve 下载地址后，即可下载至本地并启动(我这里最新版本是3.6.2)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#创建文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /usr/local/cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#下载程序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/cloudreve/Cloudreve/releases/download/3.6.2/cloudreve_3.6.2_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#解压程序&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf cloudreve_3.6.2_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#赋予执行权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x ./cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#启动 Cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./cloudreve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。如果您忘记初始管理员密码，需要删除同级目录下的 cloudreve.db，重新启动主程序以初始化新的管理员账户。&lt;/p>
&lt;p>Cloudreve 默认会监听 5212 端口。你可以在浏览器中访问 http://IP:5212 进入 Cloudreve。&lt;/p>
&lt;p>以上步骤操作完后，最简单的部署就完成了。你可能需要一些更为具体的配置，才能让 Cloudreve 更好的工作，具体流程请参考下面的配置流程。&lt;/p>
&lt;h3 id="反向代理">反向代理&lt;/h3>
&lt;p>在自用或者小规模使用的场景下，你完全可以使用 Cloudreve 内置的 Web 服务器。但是如果你需要使用 HTTPS，亦或是需要与服务器上其他 Web 服务共存时，你可能需要使用主流 Web 服务器反向代理 Cloudreve ，以获得更丰富的扩展功能。&lt;/p>
&lt;p>你需要在 Web 服务器中新建一个虚拟主机，完成所需的各项配置（如启用 HTTPS），然后在网站配置文件中加入反代规则：&lt;/p>
&lt;h4 id="nginx-配置">Nginx 配置&lt;/h4>
&lt;p>在网站的 server 字段中加入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:5212&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="nv">$scheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_redirect&lt;/span> &lt;span class="no">off&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 如果您要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1"># client_max_body_size 20000m;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="apache-配置">Apache 配置&lt;/h4>
&lt;p>在 VirtualHost 字段下加入反代配置项 ProxyPass，比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-apache" data-lang="apache">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:80&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> myapp.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerAdmin&lt;/span> webmaster@example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">DocumentRoot&lt;/span> &lt;span class="sx">/www/myapp/public&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># 以下为关键部分&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">AllowEncodedSlashes&lt;/span> NoDecode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ProxyPass&lt;/span> &lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:5212/&amp;#34;&lt;/span> nocanon
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="caddy-配置">Caddy 配置&lt;/h4>
&lt;p>在网站配置中加入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5212&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="se">{host}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="s">https&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="后台运行">后台运行&lt;/h3>
&lt;p>这里依旧使用 Systemd 大法：&lt;/p>
&lt;p>创建编辑配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /usr/lib/systemd/system/cloudreve.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将下面的 &lt;code>PATH_TO_CLOUDREVE&lt;/code> 换成程序所在目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-systemd" data-lang="systemd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysqld.service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/cloudreve/cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on-abnormal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">RestartSec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">5s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">KillMode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mixed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardOutput&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardError&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>管理命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置开机启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 停止服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl stop cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重启服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart cloudreve
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl status cloudreve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="扩展配置">扩展配置&lt;/h2>
&lt;p>默认情况下，Cloudreve 会使用内置的 SQLite 数据库，并在同级目录创建数据库文件cloudreve.db，如果您想要使用 MySQL，可以按照以下步骤配置，并重启 Cloudreve。注意，Cloudreve 只支持大于或等于 5.7 版本的 MySQL 。&lt;/p>
&lt;h3 id="创建配置文件">创建配置文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /usr/local/cloudreve/conf.ini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加入如下配置，并进行修改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[System]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行模式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Mode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">master&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Listen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">:5212&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 是否开启 Debug&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Debug&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Session 密钥, 一般在首次启动时自动生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">SessionSecret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">23333&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hash 加盐, 一般在首次启动时自动生成&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">HashIDSalt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">something really hard to guss&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库相关&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Database]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库类型，目前支持 sqlite/mysql/mssql/postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># MySQL 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">User&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据库名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 数据表前缀&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">TablePrefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">cd_&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 字符集&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Charset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">utf8mb4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进程退出前安全关闭数据库连接的缓冲时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">GracePeriod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">30&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置完成后将 Systemd 文件修改如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-systemd" data-lang="systemd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mysqld.service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/cloudreve&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/cloudreve/cloudreve -c /path/to/conf.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">on-abnormal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">RestartSec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">5s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">KillMode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mixed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardOutput&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">StandardError&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">syslog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>/path/to/conf.ini&lt;/code> 为配置文件所在位置，&lt;code>path/to/cloudreve&lt;/code> 为 Cloudreve 程序所在目录&lt;/p>
&lt;p>我这里是 &lt;code>/usr/local/cloudreve/conf.ini&lt;/code> 和 &lt;code>usr/local/cloudreve&lt;/code>&lt;/p>
&lt;p>然后更新配置并启动服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start cloudreve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用 Aria2 + AriaNG 搭建离线下载站</title><link>/archives/aria/</link><pubDate>Sat, 24 Dec 2022 10:58:22 +0800</pubDate><guid>/archives/aria/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;h3 id="介绍">介绍&lt;/h3>
&lt;p>Aria2 是目前最强大的全能型下载工具，它支持 BT、磁力、HTTP、FTP 等下载协议，常用做离线下载的服务端。&lt;/p>
&lt;p>AriaNg 是一个让 Aria2 更容易使用的现代 Web 前端。 AriaNg 使用纯 html &amp;amp; javascript 开发，所以其不需要任何编译器或运行环境.。您只要将 AriaNg 放在您的 Web 服务器里并在浏览器中打开即可使用；AriaNg 使用响应式布局，支持各种计算机或移动设备。&lt;/p>
&lt;h3 id="特性">特性&lt;/h3>
&lt;h4 id="aria2">Aria2&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>BT 下载率高、速度快&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重启后不丢失任务进度、不重复下载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除正在下载的任务自动删除未完成的文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载错误自动删除未完成的文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成自动删除控制文件(.aria2后缀名文件)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成自动删除种子文件(.torrent后缀名文件)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成自动删除空目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>BT 下载完成自动清除垃圾文件(文件类型过滤功能)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>BT 下载完成自动清除小文件(文件大小过滤功能)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>有一定的防版权投诉、防迅雷吸血效果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更好的 PT 下载支持&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="ariang">AriaNG&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>纯 Html &amp;amp; Javascript 实现, 不依赖任何运行时&lt;/p>
&lt;/li>
&lt;li>
&lt;p>响应式布局设计, 兼容计算机与移动设备&lt;/p>
&lt;/li>
&lt;li>
&lt;p>友好的界面交互&lt;/p>
&lt;ul>
&lt;li>
&lt;p>任务排序 (按文件名, 文件大小, 进度, 剩余时间, 下载速度等.), 文件排序, Bittorrent 连接节点排序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>任务搜索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>任务重试&lt;/p>
&lt;/li>
&lt;li>
&lt;p>拖拽调整任务顺序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更详细的任务信息 (健康度, 连接节点客户端信息等.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据特定文件类型或文件扩展名筛选文件 (视频, 音频, 图片, 文档, 应用程序, 存档文件等.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多目录任务支持树形结构显示&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Aria2 及单个任务的下载/上传速度图表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>完整支持 Aria2 设置选项&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>深色主题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持网页地址命令行 API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载完成消息通知&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多语言支持&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持配置多个 aria2 RPC&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持导出和导入设置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节省带宽, 仅请求增量数据&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="安装配置">安装配置&lt;/h2>
&lt;h3 id="aria2-安装配置">Aria2 安装配置&lt;/h3>
&lt;p>这里使用的一键安装管理脚本增强版；&lt;a class="link" href="https://github.com/P3TERX/aria2.sh" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;p>输入命令进行下载、运行脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -N git.io/aria2.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod +x aria2.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./aria2.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行脚本后，会进入管理面板：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Aria2 一键安装管理脚本 增强版 &lt;span class="o">[&lt;/span>v2.7.4&lt;span class="o">]&lt;/span> by P3TERX.COM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0. 升级脚本
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">——————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 安装 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 更新 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 卸载 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">——————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 启动 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 停止 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. 重启 Aria2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">——————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. 修改 配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8. 查看 配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9. 查看 日志
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10. 清空 日志
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">——————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">11. 手动更新 BT-Tracker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">12. 自动更新 BT-Tracker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">——————————————————————
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Aria2 状态: 已安装 &lt;span class="p">|&lt;/span> 已启动
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">自动更新 BT-Tracker: 已开启
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请输入数字 &lt;span class="o">[&lt;/span>0-12&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输入 &lt;code>1&lt;/code> 进行安装，安装完成之后会跳出配置信息：&lt;/p>
&lt;p>&lt;img src="/archives/aria/1.png"
width="820"
height="160"
srcset="/archives/aria/1_hud81c9af1d88a3fdc1287431bc8338f83_11431_480x0_resize_box_3.png 480w, /archives/aria/1_hud81c9af1d88a3fdc1287431bc8338f83_11431_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="配置信息"
class="gallery-image"
data-flex-grow="512"
data-flex-basis="1230px"
>&lt;/p>
&lt;p>你可以通过执行 &lt;code>./aria2.sh&lt;/code> 然后输入 &lt;code>7&lt;/code> 回车修改配置；记录下配置信息，然后继续进行下一步。&lt;/p>
&lt;hr>
&lt;h3 id="ariang-安装配置">AriaNG 安装配置&lt;/h3>
&lt;ul>
&lt;li>项目地址：&lt;a class="link" href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>首先创建一个网站，可以参考 &lt;a class="link" href="/archives/oneinstack/#%e5%88%9b%e5%bb%ba%e8%99%9a%e6%8b%9f%e4%b8%bb%e6%9c%ba" >Oneinstack 创建虚拟主机
&lt;/a> 或 &lt;a class="link" href="/archives/caddy/" >Caddy 创建站点
&lt;/a>&lt;/p>
&lt;p>然后打开 &lt;a class="link" href="https://github.com/mayswind/AriaNg/releases/" target="_blank" rel="noopener"
>下载版本
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 页面，将 AriaNG-x.x.x.zip 文件下载上传至网站根目录，并解压。&lt;/p>
&lt;p>访问该网站域名，首次访问会跳出认证错误提示，关闭掉然后进行设置：&lt;/p>
&lt;p>&lt;img src="/archives/aria/2.png"
width="1900"
height="600"
srcset="/archives/aria/2_hu5142c564a6758a06f3b7b47434899b92_66193_480x0_resize_box_3.png 480w, /archives/aria/2_hu5142c564a6758a06f3b7b47434899b92_66193_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="配置过程"
class="gallery-image"
data-flex-grow="316"
data-flex-basis="760px"
>&lt;/p>
&lt;p>点击 &lt;code>AriaNG设置&lt;/code> - &lt;code>RPC&lt;/code> 然后将之前记录好的 Aria 配置信息中的 &lt;code>IPV4 地址、端口&lt;/code> 填入 &lt;code>Aria2 RPC 地址&lt;/code> 然后填入 &lt;code>Aria2 RPC 密钥&lt;/code>；并点击 &lt;code>重新加载 AriaNG&lt;/code>&lt;/p>
&lt;p>配置完成重载后即可进行离线下载。&lt;/p>
&lt;hr>
&lt;h3 id="扩展设置">扩展设置&lt;/h3>
&lt;p>如果你不想通过 http://127.0.0.1:6800 进行连接 Aria2，那么可以进行反代，通过域名连接：&lt;/p>
&lt;p>修改 AriaNG 网站配置，添加下面的配置：&lt;/p>
&lt;ul>
&lt;li>Nginx&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">/jsonrpc&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:6800&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="nv">$scheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Caddy&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="nd">/jsonrpc&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6800&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="se">{host}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="s">https&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后在 AriaNG 中修改 Aria2 RPC 地址为：&lt;code>https://domian.com:443/jsonrpc&lt;/code>&lt;/p></description></item><item><title>File Browser 在线文件管理</title><link>/archives/filebrowser/</link><pubDate>Fri, 16 Dec 2022 20:09:22 +0800</pubDate><guid>/archives/filebrowser/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>File Browser 是一款使用 Golang 开发的文件管理器，跨平台，免费开源，功能强大。它是一个能独立运行的可执行二进制文件，可以与 Docker 或 Caddy 一起使用。这篇文章分享 Debian 11 下安装 File Browser 的过程。&lt;/p>
&lt;h2 id="安装配置">安装配置&lt;/h2>
&lt;h3 id="安装-file-browser">安装 File Browser&lt;/h3>
&lt;ul>
&lt;li>项目地址： &lt;a class="link" href="https://github.com/filebrowser/filebrowser/" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>通过以下命令进行安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh &lt;span class="p">|&lt;/span> bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装位置： &lt;code>/usr/local/bin/filebrowser&lt;/code>&lt;/p>
&lt;h3 id="配置-file-browser">配置 File Browser&lt;/h3>
&lt;p>首先创建目录用于放置配置数据：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /usr/local/lib/filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建配置数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置监听地址：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -a 0.0.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置监听端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -p &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置根目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -r /var/filebrowser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置日志位置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> --log /var/log/filebrowser.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置语言环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> --locale zh-cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加用户：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db users add user password --perm.admin --locale zh-cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中的 &lt;code>user&lt;/code> 与 &lt;code>password&lt;/code> 为用户名和密码&lt;/p>
&lt;p>或者直接一步到位：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -a 0.0.0.0 -p &lt;span class="m">8080&lt;/span> -r /var/filebrowser --log /var/log/filebrowser.log --locale zh-cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>试运行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后即可通过 &lt;code>http://ip:8080&lt;/code> 进行访问&lt;/p>
&lt;hr>
&lt;h2 id="后台运行及反向代理">后台运行及反向代理&lt;/h2>
&lt;h3 id="后台运行">后台运行&lt;/h3>
&lt;p>后台运行可通过 Systemd 大法：&lt;/p>
&lt;p>创建 &lt;code>filebrowser.service&lt;/code> 然后进行编辑：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /usr/lib/systemd/system/filebrowser.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>复制下面文件并粘贴：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-systemd" data-lang="systemd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">File Browser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/filebrowser -d /path/to/filebrowser.db&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>/path/to/filebrowser&lt;/code> 为 filebrowser 安装位置，可通过 &lt;code>which filebrowser&lt;/code> 查询；&lt;code>/path/to/filebrowser.db&lt;/code> 为 filebrowser 配置数据库位置。&lt;/p>
&lt;p>管理命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置开机启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 停止服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl stop filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重启服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart filebrowser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl status filebrowser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="反代设置">反代设置&lt;/h3>
&lt;p>如果不想通过 IP 地址访问，可以设置反向代理通过网址访问：&lt;/p>
&lt;ul>
&lt;li>Nginx 设置：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="s">^~&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="nv">$scheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_redirect&lt;/span> &lt;span class="no">off&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">client_max_body_size&lt;/span> &lt;span class="mi">10240m&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Caddy 设置：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">log&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">output&lt;/span> &lt;span class="s">file&lt;/span> &lt;span class="s">/var/log/caddy/filebrowser.log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">level&lt;/span> &lt;span class="s">error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/filebrowser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Strict-Transport-Security&lt;/span> &lt;span class="s">max-age=31536000;preload&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">X-Content-Type-Options&lt;/span> &lt;span class="s">nosniff&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">X-Frame-Options&lt;/span> &lt;span class="s">SAMEORIGIN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8080&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="se">{host}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="s">https&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">user@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置完成后即可通过域名进行访问。&lt;/p>
&lt;h4 id="扩展设置">扩展设置&lt;/h4>
&lt;p>如果你想要通过 &lt;code>https://domian.com/pan&lt;/code> 进行访问，那么需要设置 &lt;code>baseurl&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">filebrowser -d /usr/local/lib/filebrowser/filebrowser.db config &lt;span class="nb">set&lt;/span> -b /pan
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后进行反代：&lt;/p>
&lt;ul>
&lt;li>Ngxin：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="p">~&lt;/span>&lt;span class="sr">*&lt;/span> &lt;span class="s">/pan&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$http_host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="nv">$scheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-NginX-Proxy&lt;/span> &lt;span class="s">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_redirect&lt;/span> &lt;span class="no">off&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">client_max_body_size&lt;/span> &lt;span class="mi">10240m&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Caddy:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="nd">/pan/*&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8080&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="se">{host}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="s">https&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CentOS 7 编译安装 gcc</title><link>/archives/make_gcc/</link><pubDate>Sat, 10 Dec 2022 15:43:06 +0800</pubDate><guid>/archives/make_gcc/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前两天折腾手上的 CentOS7 服务器，在编译安装软件时发现编译失败；查看了下日志和文档发现是因为 gcc 和 g++ 版本过低了。而通过 yum 查找发现只有 4.8 版本，于是决定通过编译安装新版本，历经了重重困难后终于是安装完毕，并在此进行记录。&lt;/p>
&lt;hr>
&lt;h2 id="安装步骤">安装步骤&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;ol>
&lt;li>首先安装任意版本 gcc 和一些需要的软件：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install -y gcc gcc-c++ m4 bzip2 screen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>下载 gcc 源码&lt;/li>
&lt;/ol>
&lt;p>通过 &lt;a class="link" href="https://gcc.gnu.org/pub/gcc/releases" target="_blank" rel="noopener"
>官方仓库
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 下载或 &lt;a class="link" href="https://gcc.gnu.org/mirrors.html" target="_blank" rel="noopener"
>镜像地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 寻找服务器就近地址；找到需要安装的版本下载并解压，我这里选的 9.5.0：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir /opt/gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /opt/gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://gcc.gnu.org/pub/gcc/releases/gcc-9.5.0/gcc-9.5.0.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf gcc-9.5.0.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>下载依赖库&lt;/li>
&lt;/ol>
&lt;p>gcc 官网提供了依赖库下载地址，但是一个个下载比较麻烦，可以通过 gcc 源码自带的 &lt;code>download_prerequisites&lt;/code> 文件；它可以自动下载关联的依赖库并且放置到 gcc 目录下，与 gcc 一起编译：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> gcc-9.5.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./contrib/download_prerequisites
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行后会自动下载依赖库并解压至当前目录下。&lt;/p>
&lt;h3 id="编译安装">编译安装&lt;/h3>
&lt;p>完成上述操作后即可开始编译安装 gcc 了，首先进行 configure 配置与检查：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">../configure --prefix&lt;span class="o">=&lt;/span>/usr/local/gcc --enable-threads&lt;span class="o">=&lt;/span>posix --disable-checking --disable-multilib --enable-languages&lt;span class="o">=&lt;/span>c,c++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">configure: creating ./config.status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">config.status: creating Makefile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>检查完毕生成 MakeFile 文件后，就可以进行编译安装了，时间比较长；为了防止网络等因素导致断连，可以创建一个窗口然后进行编译安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">screen -S gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里可以通过 &lt;code>make -j&lt;/code> 设置线程数来提升编译速度，如果不清楚该设置多少，可以通过 &lt;code>make -j$(nproc)&lt;/code> 自动计算线程数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make -j&lt;span class="k">$(&lt;/span>nproc&lt;span class="k">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="版本替换">版本替换&lt;/h3>
&lt;ol>
&lt;li>卸载旧版本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum remove -y gcc gcc-c++
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>链接新版本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/c++ /usr/bin/c++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/gcc /usr/bin/cc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/g++ /usr/bin/g++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/gcc/bin/gcc /usr/bin/gcc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>添加环境变量、更新动态库&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 &lt;code>~/.bashrc&lt;/code> 文件，在最后添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/gcc/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/gcc/include:&lt;span class="nv">$CPATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/gcc/lib:/usr/local/gcc/lib64:&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>/usr/local/gcc&lt;/code> 为 &lt;code>gcc&lt;/code> 安装目录&lt;/p>
&lt;p>然后刷新一下变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加完毕，接下来更新动态库，首先查找一下动态库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">find / -name &lt;span class="s2">&amp;#34;libstdc++.so*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">/usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/lib64/libstdc++.so.6.0.19
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.19-gdb.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.19-gdb.pyc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.19-gdb.pyo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/src/gcc-9.5.0/build/x86_64-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.28
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/src/gcc-9.5.0/build/x86_64-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/src/gcc-9.5.0/build/prev-x86_64-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.28
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/src/gcc-9.5.0/build/prev-x86_64-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/src/gcc-9.5.0/build/stage1-x86_64-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.28
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/src/gcc-9.5.0/build/stage1-x86_64-pc-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so.6.0.28
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/gcc/lib64/libstdc++.so.6.0.28-gdb.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到现在老版本是 &lt;code>6.0.19&lt;/code> 而 &lt;code>libstdc++.so.6&lt;/code> 则是 &lt;code>libstdc++.so.6.0.19&lt;/code> 的软链接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ls -l /usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">30&lt;/span> Dec &lt;span class="m">10&lt;/span> 06:50 /usr/lib64/libstdc++.so.6 -&amp;gt; /usr/lib64/libstdc++.so.6.0.19
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后将 &lt;code>gcc&lt;/code> 中的动态库复制过去，删除旧版本链接并重新链接新版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp /usr/local/gcc/lib64/libstdc++.so.6.0.28 /usr/lib64/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -f /usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/lib64/libstdc++.so.6.0.28 /usr/lib64/libstdc++.so.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更新完毕，接下来就可以正常使用了。&lt;/p>
&lt;hr>
&lt;h3 id="添加忽略可选">添加忽略（可选）&lt;/h3>
&lt;p>为防止误操作或运行自动化脚本情况导致被覆盖，可以将 cmake 添加忽略，编辑 &lt;code>/etc/yum.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/yum.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在末尾添加上：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">exclude&lt;/span>&lt;span class="o">=&lt;/span>gcc*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外需要注意运行自动化脚本前查看一下是否会对配置文件进行编辑，若存在则需要修改脚本。&lt;/p></description></item><item><title>一键 DD 自动重装脚本</title><link>/archives/reinstall/</link><pubDate>Thu, 01 Dec 2022 10:53:36 +0800</pubDate><guid>/archives/reinstall/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>VPS 主机一键自动重装系统脚本优化版，DD 过程简单，傻瓜式安装。 脚本支持原版自定义密码安装，可选 Linux 和 Windows 系统，而且脚本支持 Oracle 甲骨文免费云主机使用支持 UEFI 的镜像包安装。&lt;/p>
&lt;p>一键 DD 脚本，支持性好，更智能更全面，支持国内外各种 VPS 重装，特别是对国内各种访问国外资源慢的 VPS 安装有奇效。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/fcurrk/reinstall" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="安装过程">安装过程&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>为防止异常，先执行以下命令：&lt;/p>
&lt;ul>
&lt;li>Debian/Ubuntu:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt dist-upgrade -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>RedHat/CentOS:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum makecache &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> yum update -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装重装系统的前提组件:&lt;/p>
&lt;ul>
&lt;li>Debian/Ubuntu:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get install -y xz-utils openssl gawk file wget screen &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> screen -S os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>RedHat/CentOS:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install -y xz openssl gawk file glibc-common wget screen &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> screen -S os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="一键-dd">一键 DD&lt;/h3>
&lt;p>执行命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate -O NewReinstall.sh https://git.io/newbetags &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod a+x NewReinstall.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> bash NewReinstall.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如为CN主机(部分主机商已不能使用)，可能出现报错或不能下载脚本的问题，可执行以下命令开始安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate -O NewReinstall.sh https://cdn.jsdelivr.net/gh/fcurrk/reinstall@master/NewReinstall.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod a+x NewReinstall.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> bash NewReinstall.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行后，会获取公网 IP、网关和子网掩码，确认一致后，按下 &lt;code>Y&lt;/code> 回车下一步：&lt;/p>
&lt;blockquote>
&lt;p>公网 IP 、网关及子网掩码可在 VPS 控制面板进行查看，若不一致，可输入 &lt;code>N&lt;/code> 进行自定义&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="/archives/reinstall/1.png"
width="700"
height="400"
srcset="/archives/reinstall/1_hu8eecd73445506abac9ee4a2934803dae_143707_480x0_resize_box_3.png 480w, /archives/reinstall/1_hu8eecd73445506abac9ee4a2934803dae_143707_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 网络确认"
class="gallery-image"
data-flex-grow="175"
data-flex-basis="420px"
>&lt;/p>
&lt;p>然后进行系统选择，41合1的系统一键 DD 选择界面，输入 &lt;code>99&lt;/code> 则使用自定义镜像：&lt;/p>
&lt;p>&lt;img src="/archives/reinstall/2.png"
width="700"
height="720"
srcset="/archives/reinstall/2_hu21f5d0e9e5cf82f6ab7f93c5c8b682bf_255218_480x0_resize_box_3.png 480w, /archives/reinstall/2_hu21f5d0e9e5cf82f6ab7f93c5c8b682bf_255218_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 系统选择"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="233px"
>&lt;/p>
&lt;p>若输入 &lt;code>9-16&lt;/code> 安装原版系统，可自定义密码，密码要求8-16位，以英文字母或数字开头，可以是大小写英文字母、数字及7个特殊字符.!$@#&amp;amp;%的任意组合，然后设置端口确认信息后，即可进行安装：&lt;/p>
&lt;p>&lt;img src="/archives/reinstall/3.png"
width="700"
height="360"
srcset="/archives/reinstall/3_hu68c416604472933cf2bc0e1c84c573bc_11747_480x0_resize_box_3.png 480w, /archives/reinstall/3_hu68c416604472933cf2bc0e1c84c573bc_11747_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 自定义设置"
class="gallery-image"
data-flex-grow="194"
data-flex-basis="466px"
>&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>谷歌云原版系统基础上 DD 会出现自动获取的子网掩码为255.255.255.255，如出现这种情况需要手工输入改正为正确的如255.255.255.0，否则会安装完成主机可能会离线。&lt;/p>
&lt;p>阿里云因使用了特殊的驱动，DD 安装 Windows 系统选择阿里云专用版。&lt;/p>
&lt;p>Oracle Cloud（甲骨文云）可选择支持 UEFI 的镜像，注意基础系统最好选择 Ubuntu，如原系统是 CentOS 可能无法成功，注意如是 ARM 机器注意选择同时支持 ARM64 和 UEFI 的镜像。&lt;/p>
&lt;/blockquote>
&lt;p>41合一系统密码：&lt;/p>
&lt;pre tabindex="0">&lt;code>1、CentOS 7.7 (已关闭防火墙及 SELinux，默认密码 Pwd@CentOS)
2、CentOS 7 (默认密码 cxthhhhh.com)
3、CentOS 7 (支持 ARM64、UEFI，默认密码 cxthhhhh.com)
4、CentOS 8 (默认密码 cxthhhhh.com)
5、Rocky 8 (默认密码 cxthhhhh.com)
6、Rocky 8 (支持 UEFI，默认密码 cxthhhhh.com)
7、Rocky 8 (支持 ARM64、UEFI，默认密码 cxthhhhh.com)
8、CentOS 9 (默认密码 cxthhhhh.com)
9、CentOS 6 (官方源原版，默认密码 Minijer.com)
10、Debian 11 (官方源原版，默认密码 Minijer.com)
11、Debian 10 (官方源原版，默认密码 Minijer.com)
12、Debian 9 (官方源原版，默认密码 Minijer.com)
13、Debian 8 (官方源原版，默认密码 Minijer.com)
14、Ubuntu 20.04 (官方源原版，默认密码 Minijer.com)
15、Ubuntu 18.04 (官方源原版，默认密码 Minijer.com)
16、Ubuntu 16.04 (官方源原版，默认密码 Minijer.com)
17、Windows Server 2022 (默认密码 cxthhhhh.com)
18、Windows Server 2022 (支持 UEFI，默认密码 cxthhhhh.com)
19、Windows Server 2019 (默认密码 cxthhhhh.com)
20、Windows Server 2016 (默认密码 cxthhhhh.com)
21、Windows Server 2012 (默认密码 cxthhhhh.com)
22、Windows Server 2008 (默认密码 cxthhhhh.com)
23、Windows Server 2003 (默认密码 cxthhhhh.com)
24、Windows 10 LTSC (默认密码 Teddysun.com)
25、Windows 10 LTSC (支持 UEFI，默认密码 Teddysun.com)
26、Windows 7 x86 Lite (默认密码 nat.ee)
27、Windows 7 x86 Lite (阿里云专用，默认密码 nat.ee)
28、Windows 7 x64 Lite (默认密码 nat.ee)
29、Windows 7 x64 Lite (支持 UEFI，默认密码 nat.ee)
30、Windows 10 LTSC Lite (默认密码 nat.ee)
31、Windows 10 LTSC Lite (阿里云专用，默认密码 nat.ee)
32、Windows 10 LTSC Lite (支持 UEFI，默认密码 nat.ee)
33、Windows Server 2003 Lite (C 盘默认10G，默认密码 WinSrv2003x86-Chinese)
34、Windows Server 2008 Lite (默认密码 nat.ee)
35、Windows Server 2008 Lite (支持 UEFI，默认密码 nat.ee)
36、Windows Server 2012 Lite (默认密码 nat.ee)
37、Windows Server 2012 Lite (支持 UEFI，默认密码nat.ee)
38、Windows Server 2016 Lite (默认密码 nat.ee)
39、Windows Server 2016 Lite (支持 UEFI，默认密码 nat.ee)
40、Windows Server 2022 Lite (默认密码 nat.ee)
41、Windows Server 2022 Lite (支持 UEFI，默认密码 nat.ee)
99、自定义镜像
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;p>系统名称后带 Lite 的均为精简版，没有的是完整版&lt;/p>
&lt;p>[X64-Legacy-cxthhhhh] 代表系统为 AMD64 位，支持传统 BIOS 启动，cxthhhhh 定制的系统镜像&lt;/p>
&lt;p>ARM64 代表系统支持 ARM64 位&lt;/p>
&lt;p>UEFI 代表系统支持最新的 UEFI 启动，如甲骨文全部都是这种&lt;/p>
&lt;p>aliyun 代表阿里云专用系统镜像&lt;/p>
&lt;p>cxthhhhh、teddysun、nat.ee 均为三位制作系统镜像的大佬代称&lt;/p>
&lt;p>系统密码会在选择相应序号后提示，请注意记录&lt;/p>
&lt;p>系统安装过程会自动断开 SSH 连接，属于正常现象；等待安装完成后即可进行重连&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/fcurrk/reinstall" target="_blank" rel="noopener"
>一键 DD 脚本 Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://git.beta.gs/" target="_blank" rel="noopener"
>一键 DD 脚本网址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Linux 服务器设置 Swap 分区</title><link>/archives/setswap/</link><pubDate>Fri, 11 Nov 2022 19:15:56 +0800</pubDate><guid>/archives/setswap/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>这两天闲着没事，将手头上闲置的一台 512M 小内存服务器拿出来折腾，编译安装 MariaDB 的时候由于内存不足导致编译失败。由于我是个小白，且一直是使用的 2/4G 服务器，以前从来没有注意过这个；直到现在遇到这样的问题。。。&lt;/p>
&lt;h3 id="swap-分区">Swap 分区&lt;/h3>
&lt;p>别名：交换分区。 Swap 分区在系统的物理内存不够用的时候，把硬盘内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到 Swap 分区中，等到那些程序要运行时，再从 Swap 分区中恢复保存的数据到内存中。&lt;/p>
&lt;hr>
&lt;h2 id="设置步骤">设置步骤&lt;/h2>
&lt;p>一般来说，很多服务器开通的时候就自带了 Swap 分区，在日常使用下并不需要对其进行额外的操作；但是有时候还是要视情况对 Swap 分区进行适当的增减；下面来看看 Swap 分区的设置 (这里我以我 4G 内存服务器作为演示，请根据实际情况修改数据) ：&lt;/p>
&lt;h3 id="查看分区">查看分区&lt;/h3>
&lt;ol>
&lt;li>通过 &lt;code>free -h&lt;/code> 命令查看&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">free -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> total used free shared buff/cache available
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Mem: 3.6Gi 123Mi 3.3Gi 1.0Mi 182Mi 3.3Gi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Swap: 0B 0B 0B
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过以上命令可以看到当前内存及 Swap 分区使用状态，如果 Swap 分区和我这里一样显示 0B 0B 0B 则代表并没有开启 Swap 分区。&lt;/p>
&lt;ol start="2">
&lt;li>通过 &lt;code>swapon --show&lt;/code> 命令查看&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapon --show
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若开启了 Swap 分区，则会显示 Swap 分区状态；若没有开启 Swap 分区，则不会返回数据。&lt;/p>
&lt;h3 id="创建分区">创建分区&lt;/h3>
&lt;h4 id="交换分区的大小分配">交换分区的大小分配&lt;/h4>
&lt;p>查找了一下资料，发现众说纷纭。。。最后决定采用如下方案：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;strong>物理内存&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>建议 Swap 分区大小&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&amp;lt; 4GB&lt;/td>
&lt;td style="text-align:center">2倍内存，不超过4G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">4-8G&lt;/td>
&lt;td style="text-align:center">等于内存大小&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">8-64G&lt;/td>
&lt;td style="text-align:center">8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">64-256G&lt;/td>
&lt;td style="text-align:center">16G&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="创建交换分区">创建交换分区&lt;/h4>
&lt;ol>
&lt;li>使用 &lt;code>fallocate&lt;/code> 命令创建用于交换的文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">fallocate -l 4G /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果报错可以使用 &lt;code>dd&lt;/code> 命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dd &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>/dev/zero &lt;span class="nv">of&lt;/span>&lt;span class="o">=&lt;/span>/swapfile &lt;span class="nv">bs&lt;/span>&lt;span class="o">=&lt;/span>1M &lt;span class="nv">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>设置权限&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>设置交换分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkswap /swapfile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Setting up swapspace version 1, &lt;span class="nv">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">4&lt;/span> GiB &lt;span class="o">(&lt;/span>&lt;span class="m">4294963200&lt;/span> bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">no label, &lt;span class="nv">UUID&lt;/span>&lt;span class="o">=&lt;/span>e3edf2fd-7259-4d00-98be-5afc604c1271
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>成功则返回如上信息。&lt;/p>
&lt;ol start="4">
&lt;li>启用分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapon /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>验证分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapon --show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME TYPE SIZE USED PRIO
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/swapfile file 4G 0B -2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开启成功则返回 Swap 分区状态&lt;/p>
&lt;hr>
&lt;h3 id="开机启动及分配控制">开机启动及分配控制&lt;/h3>
&lt;h4 id="设置开机启动">设置开机启动&lt;/h4>
&lt;ol>
&lt;li>编辑 &lt;strong>/etc/fstab&lt;/strong> 文件添加这一行：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加如下:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/swapfile swap swap defaults &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>或执行如下命令直接写入：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;/swapfile swap swap defaults 0 0&amp;#34;&lt;/span> &amp;gt;&amp;gt;/etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="swap-分区分配控制">Swap 分区分配控制&lt;/h4>
&lt;ul>
&lt;li>Swappiness&lt;/li>
&lt;/ul>
&lt;p>Swappiness 是一个 Linux 内核属性，用于定义系统使用交换空间的频率。 Swappiness 可以具有0到100之间的值。较低的值将使内核尽可能避免交换，而较高的值将使内核更积极地使用交换空间；默认的 swappiness 值为60.可以通过键入以下命令来检查当前的 swappiness 值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat /proc/sys/vm/swappiness
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于桌面端，可以使用60的 swappiness 值；但对于生产服务器，可能需要设置较低的值，比如我设置为10：&lt;/p>
&lt;ol>
&lt;li>临时设置：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sysctl vm.swappiness&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>要使之重启后保持不变，可以附加到 &lt;strong>/etc/sysctl.conf&lt;/strong> 文件：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在最后添加如下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vm.swappiness&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;vm.swappiness=10&amp;#34;&lt;/span> &amp;gt;&amp;gt;/etc/sysctl.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="删除及调整大小">删除及调整大小&lt;/h3>
&lt;p>如果需要对交换分区进行删除，可以按照下列步骤：&lt;/p>
&lt;ol>
&lt;li>停用交换分区&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">swapoff /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>在 &lt;strong>/etc/fstab&lt;/strong> 文件中删除交换文件条目：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除或注释下面一行：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/swapfile swap swap defaults &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>删除 swapfile 文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rm /swapfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若需要修改分区大小，可先停用交换分区，然后直接删除 swapfile 文件并重新创建。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是本篇的全部内容，希望对大家有所帮助。&lt;/p>
&lt;p>对于 Linux，无论是多大内存，还是要设立 Swap 交换分区，这样有利于在内存耗尽时及时启用 Swap 空间。另外，可以视情况对 Swap 分区大小进行临时调整，比如我前文所说用 512M 内存服务器编译安装高版本 MariaDB ，那么我可以先将 Swap 分区临时设置为 2G ，编译安装完成后再调整。&lt;/p></description></item><item><title>Git 多用户及仓库配置</title><link>/archives/git_config/</link><pubDate>Sun, 06 Nov 2022 11:56:29 +0800</pubDate><guid>/archives/git_config/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在之前的 Hugo 博客系列文章有提到过一些基本的 Git 配置和操作，一般来说我们写 Hugo 博客只需要配置全局账号以及单个仓库即可。但凡事皆有例外，如果你需要多个 Git 用户，或者说需要配置多个不同的仓库，那么应该怎么设置呢？现在我们就来看看。&lt;/p>
&lt;hr>
&lt;h2 id="配置设置">配置设置&lt;/h2>
&lt;h3 id="多仓库设置">多仓库设置&lt;/h3>
&lt;p>如果只使用单个 Github/Gitee 账户来管理多个仓库的话，只需要针对每个本地仓库设置远程仓库 Remote 即可。例如，我在 Github 上面有两个项目，一个名为 demo ，另一个名为 example ：&lt;/p>
&lt;ul>
&lt;li>demo 仓库：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir /path/to/demo &lt;span class="c1"># 创建仓库文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /path/to/demo &lt;span class="c1"># 进入该仓库目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init &lt;span class="c1"># 指定 git 仓库并初始化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:user/demo.git &lt;span class="c1"># 添加远程仓库地址&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>example 仓库：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir /path/to/example &lt;span class="c1"># 创建仓库文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /path/to/example &lt;span class="c1"># 进入该仓库目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init &lt;span class="c1"># 指定 git 仓库并初始化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:user/example.git &lt;span class="c1"># 添加远程仓库地址&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>像这样单账户，多仓库的，只需要为每个仓库设置远程仓库 Remote 即可。&lt;/p>
&lt;h3 id="多账户设置">多账户设置&lt;/h3>
&lt;p>如果你需要管理多个 Git 用户，应该怎么操作？继续看：&lt;/p>
&lt;h4 id="创建密钥对">创建密钥对&lt;/h4>
&lt;p>譬如，我有一个 Github 账号，一个 Gitee 账号，它们需要分开操作；首先打开 Git bash 进入 ~/.ssh 目录为它们分别创建密钥对：&lt;/p>
&lt;p>首先创建 Github 密钥对：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/.ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -C &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span> -f &lt;span class="s2">&amp;#34;github&amp;#34;&lt;/span> &lt;span class="c1"># email 更换为你的 Github 邮箱，-f 参数为文件名，可自行设置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat github.pub &lt;span class="c1"># 查看公钥内容&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>复制公钥内容，然后打开 Gituhb 添加刚才生成的公钥到 SSH Key&lt;/p>
&lt;p>接着是 Gitee：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -C &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span> -f &lt;span class="s2">&amp;#34;gitee&amp;#34;&lt;/span> &lt;span class="c1"># email 更换为你的 Gitee 邮箱，-f 参数为文件名，可自行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat gitee.pub &lt;span class="c1"># 查看公钥内容&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同样，复制公钥内容，添加到 Gitee 的 SSH 公钥&lt;/p>
&lt;p>然后添加私钥并进行测试&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-add ~/.ssh/github
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-add ~/.ssh/gitee
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -T git@github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -T git@gitee.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>成功则会返回欢迎你的用户名信息。&lt;/p>
&lt;h4 id="创建配置文件">创建配置文件&lt;/h4>
&lt;p>创建完密钥对后，需要创建一个配置文件来分配私钥以及主机&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim config &lt;span class="c1"># 或者直接用 VS Code 编辑&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>config 配置文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User username &lt;span class="c1"># username改成你的 Github 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/github &lt;span class="c1"># 私钥位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Gitee&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host gitee.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName gitee.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User username &lt;span class="c1"># username改成你的 Gitee 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/gitee &lt;span class="c1"># 私钥位置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="用户及-remote-配置">用户及 Remote 配置&lt;/h4>
&lt;p>由于拥有多个 Git 用户，就不能使用全局配置了；而是应该对仓库进行单独的用户配置，所以要先取消全局用户设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global &lt;span class="nb">unset&lt;/span> user.name username
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global &lt;span class="nb">unset&lt;/span> user.email email
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着对本地仓库分别进行单独配置，假定我 Github 项目的本地仓库文件夹为 github ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /path/to/github &lt;span class="c1"># 进入仓库目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --local user.name username &lt;span class="c1"># 为该仓库设置用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --local user.email email &lt;span class="c1"># 为该仓库设置邮箱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote remove origin &lt;span class="c1"># 移除之前的远程仓库地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:username/repositories.git &lt;span class="c1"># 添加远程仓库地址&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里注意下新的 remote 格式，因为之前设置了 config 文件，所以相对的地址为：git@(config 中的 Host):用户名/仓库名.git 即：&lt;code>git@github.com:uesrname/repositories.git&lt;/code>&lt;/p>
&lt;p>然后按照同样的方法为 Gitee 设置即可。&lt;/p>
&lt;h3 id="扩展配置">扩展配置&lt;/h3>
&lt;p>除了为 Git 分配主机和私钥外，也可以为自己的服务器进行设置，首先为服务器设置密钥登陆，可以参考 &lt;a class="link" href="/archives/setvps/#%e8%ae%be%e7%bd%ae%e7%a7%98%e9%92%a5%e7%99%bb%e5%bd%95" >这里
&lt;/a> ；然后将密钥对下载到本地 ~/.ssh 目录下，然后重命名并编辑 config 文件，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User username &lt;span class="c1"># username改成你的 Github 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/github &lt;span class="c1"># 私钥位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Gitee&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host gitee.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName gitee.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User username &lt;span class="c1"># username改成你的 Github 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/gitee &lt;span class="c1"># 私钥位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Tencent Cloud&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host tencent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName xx.xx.xx.xx &lt;span class="c1"># 服务器 IP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Port &lt;span class="m">22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/tencent &lt;span class="c1"># 私钥位置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后就可以通过 &lt;code>ssh tencent&lt;/code> 进行远程服务器的登陆了。&lt;/p>
&lt;hr>
&lt;h2 id="代理设置">代理设置&lt;/h2>
&lt;p>想要通过代理连接 Github；可以通过以下方式：&lt;/p>
&lt;ol>
&lt;li>通过 &lt;code>git config&lt;/code> 设置：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用Socks5 代理（推荐）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global https.https://github.com.proxy socks5://127.0.0.1:10808
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用 HTTP 代理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global https.https://github.com.proxy https://127.0.0.1:10808
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若不需要使用代理，可以取消之前的设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global --unset https.proxy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>通过 SSH 设置（推荐使用）：&lt;/li>
&lt;/ol>
&lt;p>在 &lt;code>~/.ssh/config&lt;/code> 配置文件中为 Github 添加代理访问。打开 config 文件进行编辑：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ProxyCommand connect -S 127.0.0.1:10808 %h %p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User username
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/github
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>需要注意 &lt;code>ProxyCommand connect -S 127.0.0.1:10808 %h %p&lt;/code> 这行：&lt;/p>
&lt;blockquote>
&lt;p>-S 代表 Socks，-H 代表 HTTP&lt;/p>
&lt;/blockquote>
&lt;p>类 Unix 系统下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Github&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HostName github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ProxyCommand nc -X &lt;span class="m">5&lt;/span> -x 127.0.0.1:10808 %h %p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> User username
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IdentityFile ~/.ssh/github
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是 Git 多用户、仓库配置及使用代理的全部过程啦，希望能给大家带来一定的帮助。有个问题就是我在创建 config 配置文件后无法通过 PS (Power Shell) 进行 SSH 连接；连接就报错 &lt;code>Bad owner or permissions&lt;/code> ；网上也找了解决方案，但是都没有用。现在一直是使用 Terminal 打开 Git bash 进行 SSH 连接，以后有了好的解决方案会和大家进行分享；也希望能有懂的大佬给出一点建设性的意见，十分感谢🙏&lt;/p></description></item><item><title>CentOS7 下 MariaDB 安装失败解决方法</title><link>/archives/centos_sql_error/</link><pubDate>Sat, 05 Nov 2022 17:18:10 +0800</pubDate><guid>/archives/centos_sql_error/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>由于最近腾讯云双11优惠活动，自己购买了一台腾讯云的轻量应用服务器 (老实说还是挺实惠的-。-) 加上自己按捺不住折腾的心，这次一改以前一直使用的 Debian 而选择了 CentOS ；这次的服务器系统我选择的是 CentOS7 ，LNMP 安装方式则是 Oneinstack 和 LNMP 一键安装包都进行了尝试。Debian 下，它们都是完美安装。但是 Centos7 下，在安装过程中 Oneinstack 和 LNMP 一键安装包都碰到了 MariaDB/MySQL 无法安装的情况，由于我是一个 Linux 小白，平常只靠从网上学习，知识量不足；所以在此记录下这次解决过程，以便日后进行查阅。&lt;/p>
&lt;hr>
&lt;h2 id="解决过程">解决过程&lt;/h2>
&lt;h3 id="报错">报错&lt;/h3>
&lt;p>和往常一样，服务器开通后，我通过 &lt;code>yum&lt;/code> 进行了一些基本的 &lt;code>update&lt;/code> 、&lt;code>autoremove&lt;/code> 、&lt;code>clean&lt;/code> 等操作，然后创建 Screen 窗口，输入 LNMP 一键包命令就开始安装了，到最后却发现 &lt;strong>MariaDB&lt;/strong> 安装失败；一开始也不知道啥情况，以为是我选的源码编译方式有问题，后面试了二进制安装依然如此：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/1.png"
width="865"
height="341"
srcset="/archives/centos_sql_error/1_hudbdfc3d5c8c8e6002944dd56df4d9048_207022_480x0_resize_box_3.png 480w, /archives/centos_sql_error/1_hudbdfc3d5c8c8e6002944dd56df4d9048_207022_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 安装失败"
class="gallery-image"
data-flex-grow="253"
data-flex-basis="608px"
>&lt;/p>
&lt;h3 id="尝试">尝试&lt;/h3>
&lt;p>后面我在网上查了很久，他们说是 Centos 自带了 RPM 包下的 MariaDB ；新安装会有冲突，所以要进行卸载，于是我通过 rpm 命令进行卸载：&lt;/p>
&lt;blockquote>
&lt;p>顺带一提，这搜索体验真的是。。。不能说是差强人意吧，也只能说是一言难尽了。。。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rpm -qa&lt;span class="p">|&lt;/span>grep mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rpm -e mariadb-lib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现存在依赖关系，于是加上 &lt;code>nodeps&lt;/code> 参数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rpm -e --nodeps mariadb-lib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着满怀期待的又进行安装，最后还是报错-。-&lt;/p>
&lt;h3 id="错误日志">错误日志&lt;/h3>
&lt;p>还是硬着头皮来看错误日志吧，我将 &lt;strong>/root/lnmp-install.log&lt;/strong> 安装日志下载下来进行查看。虽然说很长，咱也看不太懂。。。最后还是找到了一些破绽。。。发现应该是 &lt;strong>Cmake&lt;/strong> 版本低了：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/2.png"
width="685"
height="459"
srcset="/archives/centos_sql_error/2_hu75d6d2a294a68bd65fd381e6476a6315_30039_480x0_resize_box_3.png 480w, /archives/centos_sql_error/2_hu75d6d2a294a68bd65fd381e6476a6315_30039_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 错误日志"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="358px"
>&lt;/p>
&lt;p>可以看到，这里要求 &lt;strong>3.0.0&lt;/strong> 版本或者更高，而我的版本为 &lt;strong>2.8.12.2&lt;/strong> ，于是我返回 SSH 使用 &lt;code>yum update cmake&lt;/code> 更新之后发现还是 &lt;strong>2.8.12.2&lt;/strong> 版本，于是选择下载最新版本进行编译。&lt;/p>
&lt;h3 id="下载编译-cmake">下载编译 Cmake&lt;/h3>
&lt;p>打开 &lt;del>&lt;a class="link" href="https://cmake.org/files/LatestRelease/Cmake" target="_blank" rel="noopener"
>下载列表
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/del> &lt;a class="link" href="https://github.com/Kitware/CMake/releases/" target="_blank" rel="noopener"
>新下载列表
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 找到最新版本，然后复制链接，回到 SSH&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 卸载Cmake&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum remove -y cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir /opt/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /opt/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 下载压缩包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/Kitware/CMake/releases/download/v3.28.3/cmake-3.28.3.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 解压&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -zxvf cmake-3.28.3.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install -y gcc gcc-c++ openssl-devel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> cmake-3.28.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置编译目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建链接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/cmake/bin/cmake /usr/bin/cmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake -version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加环境变量">添加环境变量&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 &lt;code>~/.bashrc&lt;/code> 文件，在最后添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/cmake/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后刷新一下变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="重新安装数据库">重新安装数据库&lt;/h3>
&lt;p>一通操作下来，Cmake 已经是最新版本了，然后进入到 &lt;strong>~/lnmp1.9&lt;/strong> 也就是 LNMP 一键包解压目录下进行操作：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./install.sh db
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后选择需要安装的数据库及版本，接下来等待安装完成：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/3.png"
width="928"
height="391"
srcset="/archives/centos_sql_error/3_huda4be20eb036038aadd088c6e226da8b_162830_480x0_resize_box_3.png 480w, /archives/centos_sql_error/3_huda4be20eb036038aadd088c6e226da8b_162830_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 安装完成"
class="gallery-image"
data-flex-grow="237"
data-flex-basis="569px"
>&lt;/p>
&lt;p>OK 打开浏览器输入 IP 地址进行访问，还是熟悉的默认页面：&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/4.png"
width="1549"
height="435"
srcset="/archives/centos_sql_error/4_hua19581040bc1ab46bde67107b44071b3_62918_480x0_resize_box_3.png 480w, /archives/centos_sql_error/4_hua19581040bc1ab46bde67107b44071b3_62918_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 登录页面"
class="gallery-image"
data-flex-grow="356"
data-flex-basis="854px"
>&lt;/p>
&lt;p>然后点击 phpMyAdmin 登陆进去，OK 完美！&lt;/p>
&lt;p>&lt;img src="/archives/centos_sql_error/5.png"
width="1217"
height="589"
srcset="/archives/centos_sql_error/5_hu690cf7f1faeba90e99f62d8fe55f0533_123368_480x0_resize_box_3.png 480w, /archives/centos_sql_error/5_hu690cf7f1faeba90e99f62d8fe55f0533_123368_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 软件界面"
class="gallery-image"
data-flex-grow="206"
data-flex-basis="495px"
>&lt;/p>
&lt;h3 id="添加忽略可选">添加忽略（可选）&lt;/h3>
&lt;p>为防止误操作或运行自动化脚本情况导致被覆盖，可以将 cmake 添加忽略，编辑 &lt;code>/etc/yum.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/yum.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在末尾添加上：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">exclude&lt;/span>&lt;span class="o">=&lt;/span>cmake*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外需要注意运行自动化脚本前查看一下是否会对配置文件进行编辑，若存在则需要修改脚本。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是我在使用 CentOS 安装 LNMP 环境时 MariaDB/MySQL 安装失败的情况，咱也不知道是个例还是就我这个小白这样。。。在此进行一个记录。希望能对大家有所帮助。最后顺带提一下，我咋就想到去折腾 CentOS 了；一直在用的Debian 它不香嘛。。。&lt;/p></description></item><item><title>我写博客的方式</title><link>/archives/how_to_write/</link><pubDate>Tue, 01 Nov 2022 13:18:02 +0800</pubDate><guid>/archives/how_to_write/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>一般来说，大家会有一些想法或者突如其来的灵感需要进行记录；那么我们会选择将它们记录在手机便签、文本编辑器或者直接用笔写下来；等最后再梳理成文。正常情况下我们都是在电脑前进行写作，但是有时候不方便在电脑前进行写作；那应该怎么办？今天就来看下我的日常写作方式。&lt;/p>
&lt;p>看过前面文章的应该知道，我自己是将 Hugo 博客源码通过 Git 推送到 Github 远程仓库然后由 Github Actions 自动部署到服务器上面，所以我写文章的流程就是通过 Git 同步远程仓库，写作完成后再推送到远程仓库通过 Github Actions 自动部署就可以了。那么现在就一起来看下这个过程的实现。&lt;/p>
&lt;p>我的话，平常使用的客户端为：家里电脑 (WindowsX2) 、公司电脑 (Windows) 、笔记本 (Linux)、手机 (Android)；简化一点就是 Windows、Linux、Android。一般情况下，我们就是 Win 和 Android 了。要实现在安卓使用 Git 的话，我们就需要安装一款神级软件 &lt;strong>Termux&lt;/strong>&lt;/p>
&lt;hr>
&lt;h2 id="介绍及安装">介绍及安装&lt;/h2>
&lt;h3 id="termux">Termux&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://termux.dev/" target="_blank" rel="noopener"
>Termux 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/termux" target="_blank" rel="noopener"
>Github 项目地址
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Termux 是一款 Android 终端模拟器和 Linux 环境应用程序，无需 root 或设置即可直接运行。 自动安装最小的基本系统 - 可以使用 APT 或其他包管理器。&lt;/p>
&lt;/blockquote>
&lt;p>你可以通过 &lt;a class="link" href="https://f-droid.org/en/packages/com.termux/" target="_blank" rel="noopener"
>F-Droid
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 或者 &lt;a class="link" href="https://github.com/termux/termux-app/releases" target="_blank" rel="noopener"
>Github
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 进行下载，下载完成之后进行更换清华源，安装 Git ，创建目录软链接，安装 Hugo 即可。&lt;/p>
&lt;blockquote>
&lt;p>无法下载或者下载慢可以找国内下载地址。&lt;/p>
&lt;p>Termux 安装使用基于国光大佬的 &lt;a class="link" href="https://www.sqlsec.com/2018/05/termux.html" target="_blank" rel="noopener"
>Termux 高级终端安装使用配置教程
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> ；写的非常全，强烈推荐观看！！！&lt;/p>
&lt;/blockquote>
&lt;h4 id="更换清华源">更换清华源&lt;/h4>
&lt;p>打开 &lt;strong>Termux&lt;/strong> 输入如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&amp;#39;&lt;/span> &lt;span class="nv">$PREFIX&lt;/span>/etc/apt/sources.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&amp;#39;&lt;/span> &lt;span class="nv">$PREFIX&lt;/span>/etc/apt/sources.list.d/game.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&amp;#39;&lt;/span> &lt;span class="nv">$PREFIX&lt;/span>/etc/apt/sources.list.d/science.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pkg update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装基础工具：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pkg update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pkg install -y curl wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装-git">安装 Git&lt;/h4>
&lt;p>进行 Git 安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pkg update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pkg install -y git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="创建目录软链接">创建目录软链接&lt;/h4>
&lt;p>为了方便管理，我们使用文件管理器在手机存储根目录下创建 &lt;strong>termux&lt;/strong> 文件夹，然后进行软链接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">termux-setup-storage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行以上命令，会弹出授权窗口，确认授权后 Termux 就可以访问 SD 卡文件，然后为创建的 termux 目录创建软链接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s /data/data/com.termux/files/home/storage/shared/termux termux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行完上述命令后，就会在 &lt;strong>~&lt;/strong> 目录下创建 termux 快捷方式，此目录是链接到我们刚才创建的 &lt;strong>termux&lt;/strong> 目录，方便进行管理。&lt;/p>
&lt;h4 id="安装-hugo">安装 Hugo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pkg update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pkg install -y hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上述操作都完成后，就可以在 Android 端使用 Hugo 了。&lt;/p>
&lt;hr>
&lt;h2 id="git-配置">Git 配置&lt;/h2>
&lt;h3 id="全局账户配置">全局账户配置&lt;/h3>
&lt;p>在使用 Git 之前需要进行账户配置，让 Github 知道你是谁：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global user.name username &lt;span class="c1"># username为你的 Github 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.email xx@email.com &lt;span class="c1"># XX@email.com为你注册 Github 的邮箱&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>注意，这里是全局设置，也就是说你所有的本地仓库推送时都是使用这个用户和邮箱&lt;/p>
&lt;/blockquote>
&lt;h3 id="添加密钥对">添加密钥对&lt;/h3>
&lt;p>键入如下命令创建密钥对：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t ed25519 -C &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来一路回车即可。&lt;/p>
&lt;h3 id="公钥添加至-github">公钥添加至 Github&lt;/h3>
&lt;p>输入 &lt;code>cat ~/.ssh/id_ed25519.pub&lt;/code> 查看公钥内容，然后复制；打开 Github 点击： &lt;strong>右上角头像 - Settings - SSH and GPG keys - New SSH Key&lt;/strong> 把刚才复制的公钥粘贴到 &lt;strong>Key&lt;/strong> 中，命名随意，然后保存。&lt;/p>
&lt;blockquote>
&lt;p>详细图文过程可以参考 &lt;a class="link" href="/archives/hugo/#%e6%b7%bb%e5%8a%a0%e5%af%86%e9%92%a5" >这里
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="本地仓库配置">本地仓库配置&lt;/h3>
&lt;p>因为我们创建了一个 Termux 软链接，为了方便管理，我将 Hugo 博客仓库放在此目录中，打开 &lt;strong>Termux&lt;/strong> 进入到 &lt;strong>termux&lt;/strong> 目录，创建博客目录，并设置为 Git 项目仓库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> termux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p hugo/blog&lt;span class="o">(&lt;/span>项目名，我以 blog 为例&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这时候打开文件管理器，进入 termux 目录，可以看到里面已经创建了 hugo/blog 目录，这就是我们的 Hugo 博客仓库了。&lt;/p>
&lt;p>由于 Github 现在默认的分支是 main 所以我也设置本地分支为 main：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git branch -m main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个时候可能会提示添加到安全仓库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Initialized empty Git repository in /storage/emulated/0/termux/hugo/blog/.git/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">➜ blog git branch -m main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fatal: detected dubious ownership in repository at &lt;span class="s1">&amp;#39;/storage/emulated/0/termux/hugo/blog/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To add an exception &lt;span class="k">for&lt;/span> this directory, call:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git config --global --add safe.directory /storage/emulated/0/termux/hugo/blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>按照提示输入命令添加到安全仓库即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global --add safe.directory /storage/emulated/0/termux/hugo/blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加完成后再更换分支名：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git branch -m main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加远程仓库">添加远程仓库&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:username/repositories.git &lt;span class="c1"># username换成你的github用户名，repositories更换为你的仓库名&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="拉取远程仓库">拉取远程仓库&lt;/h3>
&lt;p>输入下面命令将远程仓库的代码拉取到本地：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git pull origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>拉取完成之后，还需要将我们添加的主题 clone 下来，因为之前时通过 &lt;code>git submodule&lt;/code> 进行链接的；比如我在用的 &lt;strong>zzo&lt;/strong> 主题：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/zzossig/hugo-theme-zzo.git themes/zzo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成之后，我们就可以通过 Android 端进行写作了。&lt;/p>
&lt;hr>
&lt;h2 id="本地预览及推送">本地预览及推送&lt;/h2>
&lt;h3 id="本地预览">本地预览&lt;/h3>
&lt;p>在 Android 端写作完成后，我们也可以通过 &lt;code>hugo server&lt;/code> 命令进行本地预览，但是在 termux 下不太一样，直接运行 &lt;code>hugo server&lt;/code> 会报错，所以要加上一个 &lt;code>noBuildLock&lt;/code> 参数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server --noBuildLock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上述命令，即可在 Android 端通过 &lt;strong>localhost:1313&lt;/strong> 进行本地预览，同理，如果你要通过 &lt;code>hugo&lt;/code> 生成静态文件，也是需要添加 &lt;code>noBuildLock&lt;/code> 参数。&lt;/p>
&lt;h3 id="推送">推送&lt;/h3>
&lt;p>在写作完成及预览无误后，就可以进行推送到远程仓库了。与桌面端一样，通过 &lt;code>push&lt;/code> 进行推送：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;xxxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>推送完成后，等待 Github Actions 自动部署完成后，即可进行访问。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是我在不同客户端通过 Git 进行同步数据、写作的过程了，希望能给大家提供一个参考。需要注意的是：一定要记得，在不同的客户端下，第一件事是通过 &lt;code>git pull&lt;/code> 将远程仓库拉取同步到本地仓库，然后再进行写作&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.sqlsec.com/2018/05/termux.html" target="_blank" rel="noopener"
>Termux 高级终端安装使用配置教程
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh" target="_blank" rel="noopener"
>通过 SSH 连接到 GitHub
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Waline 服务端独立部署方案</title><link>/archives/waline_deploy/</link><pubDate>Thu, 20 Oct 2022 10:50:47 +0800</pubDate><guid>/archives/waline_deploy/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>之前讲了通过 Vercel 来进行 Waline 服务端的部署，这是最简单，也是完全免费的方法；但是对于拥有自己服务器的人来说，可能更想要将 Waline 直接部署到自己的服务器上；毕竟服务器摆在那，不用也是浪费，何不将 Waline 服务端也部署自己的服务器上以方便进行管理呢？其实 Waline 提供了很多的部署方案，可以看 &lt;a class="link" href="https://waline.js.org/advanced/intro.html" target="_blank" rel="noopener"
>这里
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> ；因为我一直使用的 Caddy 所以我就用 Caddy+MariaDB/MySQL 的方式来搭建，这里记录一下踩坑过程；当然你使用 Nginx/Apache 加上其他数据库的组合也是可以的。&lt;/p>
&lt;h2 id="部署过程">部署过程&lt;/h2>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>域名解析这块就不多讲了，提前绑定到你的服务器 IP ；服务器基本配置与优化可以参考 &lt;a class="link" href="/archives/setvps" >这里
&lt;/a> ；至于 Web 服务这块，如果你使用 Nginx/Apache+MariaDB/MySQL 可以看 &lt;a class="link" href="/archives/oneinstack" >这里
&lt;/a> 搭建好 Web 服务与数据库。&lt;/p>
&lt;p>如果你想和我一样使用 Caddy Server 那么你可以参考 &lt;a class="link" href="/archives/caddy" >这里
&lt;/a> 先搭建 Caddy Server ；然后来安装数据库，我这里以 MariaDB/MySQL 为例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install mariadb-server -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完 MariaDB 后，键入以下命令来进行初始化：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql_secure_installation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后根据下面提示进行操作：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql_secure_installation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter current password &lt;span class="k">for&lt;/span> root &lt;span class="o">(&lt;/span>enter &lt;span class="k">for&lt;/span> none&lt;span class="o">)&lt;/span>: &lt;span class="c1"># 输入数据库密码，由于并未设置，所以直接回车&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Set root password? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y &lt;span class="c1"># 是否设置数据库 root 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">New password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Re-enter new password: &lt;span class="c1"># 输入两次数据库 root 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Remove anonymous users? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y &lt;span class="c1"># 是否移除匿名用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disallow root login remotely? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y &lt;span class="c1"># 是否禁用 root 远程登陆&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Remove &lt;span class="nb">test&lt;/span> database and access to it? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y &lt;span class="c1"># 是否移除测试数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reload privilege tables now? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y &lt;span class="c1"># 是否初始化数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">All &lt;span class="k">done&lt;/span>! If you&lt;span class="err">&amp;#39;&lt;/span>ve completed all of the above steps, your MariaDB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">installation should now be secure.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Thanks &lt;span class="k">for&lt;/span> using MariaDB!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你需要用软件进行远程管理数据库，那么就不要禁用远程登陆，并且需要通过防火墙来开放 &lt;code>3306&lt;/code> 端口&lt;/p>
&lt;hr>
&lt;h3 id="安装-nodejs">安装 Nodejs&lt;/h3>
&lt;p>这里要注意，不要直接使用 &lt;code>apt install&lt;/code> 进行安装，会导致后面报错，具体原因我也不知道。所以我们可以通过包管理器、二进制文件或者源码编译进行安装。&lt;/p>
&lt;h4 id="包管理器安装">包管理器安装&lt;/h4>
&lt;p>输入以下命令进行安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get install -y ca-certificates curl gnupg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /etc/apt/keyrings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key &lt;span class="p">|&lt;/span> gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NODE_MAJOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_&lt;/span>&lt;span class="nv">$NODE_MAJOR&lt;/span>&lt;span class="s2">.x nodistro main&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> tee /etc/apt/sources.list.d/nodesource.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get install nodejs -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>NODE_MAJOR=16&lt;/code> 可以自行选择版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NODE_MAJOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NODE_MAJOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">18&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NODE_MAJOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NODE_MAJOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">21&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后可通过 &lt;code>node-v&lt;/code> 、&lt;code>nmp version&lt;/code>、&lt;code>npx -v&lt;/code> 检验安装&lt;/p>
&lt;p>卸载：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get purge nodejs &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>rm -r /etc/apt/sources.list.d/nodesource.list &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>rm -r /etc/apt/keyrings/nodesource.gpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="二进制安装">二进制安装&lt;/h4>
&lt;p>从 &lt;a class="link" href="https://nodejs.org/" target="_blank" rel="noopener"
>Nodejs官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 下载二进制包，通过创建软链接至系统用户应用程序目录来使用。&lt;/p>
&lt;p>打开 Nodejs 官网，点击 Downloads 然后右键复制 Linux Binaries (x64) 的下载链接：&lt;/p>
&lt;p>&lt;img src="/archives/waline_deploy/1.png"
width="1152"
height="628"
srcset="/archives/waline_deploy/1_hu3bc2a4e0dda50b86813c98baa00fba1d_67223_480x0_resize_box_3.png 480w, /archives/waline_deploy/1_hu3bc2a4e0dda50b86813c98baa00fba1d_67223_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 二进制文件下载"
class="gallery-image"
data-flex-grow="183"
data-flex-basis="440px"
>&lt;/p>
&lt;p>然后回到 SSH 软件，使用 &lt;code>wget&lt;/code> 命令，下载到任意位置并进行解压然后删除压缩包；我这里以 &lt;strong>/usr/local/src&lt;/strong> 为例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src &lt;span class="c1"># 进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://nodejs.org/dist/v16.18.0/node-v16.18.0-linux-x64.tar.xz &lt;span class="c1"># 下载二进制包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -Jxvf node-v16.18.0-linux-x64.tar.xz &lt;span class="c1"># 解压&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv node-v16.18.0-linux-x64 node &lt;span class="c1"># 重命名文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编辑 &lt;code>~/.bashrc&lt;/code> 设置环境变量，加入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/src/node/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/src/node/include:&lt;span class="nv">$CPATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/src/node/lib:&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>刷新变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成后可通过 &lt;code>node -v&lt;/code> 、 &lt;code>npm version&lt;/code> 、 &lt;code>npx -v&lt;/code> 进行验证，返回版本号则表示成功。&lt;/p>
&lt;h4 id="源码编译安装">源码编译安装&lt;/h4>
&lt;p>首先安装依赖：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get install python3 g++ make python3-pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;a class="link" href="https://nodejs.org/" target="_blank" rel="noopener"
>Nodejs官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> ，复制 &lt;code>Source Code&lt;/code> 源码下载地址，接着进行操作：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://nodejs.org/dist/v20.10.0/node-v20.10.0.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxvf node-v20.10.0.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv node-v20.10.0 node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local/node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">screen -S node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成之后为软件设置环境变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在最后添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/node/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/node/include:&lt;span class="nv">$CPATH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/node/lib:&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以为软件设置个软链接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s /usr/local/node/bin/node /usr/bin/node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/node/bin/npm /usr/bin/npm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /usr/local/node/bin/npx /usr/bin/npx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>刷新变量环境：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>源码编译安装比较费时，具体时间视机器配置而定，可酌情选择安装方式。&lt;/p>
&lt;hr>
&lt;h3 id="安装-waline">安装 Waline&lt;/h3>
&lt;p>按照官方给出的独立部署中直接运行的方案，进入你想要安装的位置，安装好模块后直接运行模块内的 vanilla.js 文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/local/node/lib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install -g @waline/vercel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>国内服务器请先将 &lt;strong>npm&lt;/strong> 设置为国内镜像！！！&lt;/p>
&lt;h4 id="更换镜像">更换镜像&lt;/h4>
&lt;ol>
&lt;li>临时更换&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm --registry https://registry.npmmirror.com install -g @waline/vercel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>永久更换&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm config &lt;span class="nb">set&lt;/span> registry https://registry.npmmirror.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>还原 npm 镜像&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm config &lt;span class="nb">set&lt;/span> registry https://registry.npmjs.org/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载完成后，可以试着运行一下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">node node_modules/@waline/vercel/vanilla.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>成功的话可以看到提示：&lt;/p>
&lt;p>&lt;img src="/archives/waline_deploy/2.png"
width="600"
height="89"
srcset="/archives/waline_deploy/2_hu6e1486747a399baf803f1c14f13ca2b8_44276_480x0_resize_box_3.png 480w, /archives/waline_deploy/2_hu6e1486747a399baf803f1c14f13ca2b8_44276_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 运行状态"
class="gallery-image"
data-flex-grow="674"
data-flex-basis="1617px"
>&lt;/p>
&lt;p>此时你可以通过 &lt;strong>IP:8360&lt;/strong> 进行访问；不要着急，按捺下你的小激动，按下 &lt;kbd>&lt;kbd>CTRL&lt;/kbd>+&lt;kbd>C&lt;/kbd>&lt;/kbd> 关闭，然后跟着我继续进行配置。&lt;/p>
&lt;hr>
&lt;h3 id="配置数据库">配置数据库&lt;/h3>
&lt;p>到官方文档的 &lt;a class="link" href="https://waline.js.org/guide/server/databases.html" target="_blank" rel="noopener"
>多数据库服务支持
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 下载我们对应数据库的数据文件，我这里用的 MariaDB(MySQL) 所以下载 &lt;a class="link" href="https://github.com/walinejs/waline/blob/main/assets/waline.sql" target="_blank" rel="noopener"
>waline.sql
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 然后进行导入数据：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>注意&lt;/strong>：将源代码直接复制然后自己进行编辑上传，不要直接使用 &lt;code>wget&lt;/code> 进行下载。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql -uroot -p &lt;span class="c1"># 登陆数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter password: &lt;span class="c1"># 输入密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CREATE DATABASE waline&lt;span class="p">;&lt;/span> &lt;span class="c1"># 创建 waline 数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">USE waline&lt;span class="p">;&lt;/span> &lt;span class="c1"># 指定数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> /path/waline.sql &lt;span class="c1"># 导入文件，/path改为你的路径&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">quit &lt;span class="c1"># 退出数据库&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建用户名，密码并赋予 waline 数据库的权限(可选)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mysql -uroot -p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CREATE USER &lt;span class="s1">&amp;#39;waline&amp;#39;&lt;/span>@&lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span> IDENTIFIED BY &lt;span class="s1">&amp;#39;密码&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GRANT ALL PRIVILEGES ON waline.* TO &lt;span class="s1">&amp;#39;waline&amp;#39;&lt;/span>@&lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">flush privileges&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">quit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="配置-systemd-服务">配置 systemd 服务&lt;/h3>
&lt;p>为了方便 Waline 的正常运行与管理，我使用的是 systemd 服务进行管理，创建文件并进行编辑(拿不准的可以在本地新建文件，编辑之后上传)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /usr/lib/systemd/system/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim waline.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>模板如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-systemd" data-lang="systemd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Waline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">[/path/to/node] [path/to/node_modules]/@waline/vercel/vanilla.js&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">PATH=/usr/bin:/usr/local/bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">NODE_ENV=production&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">MYSQL_DB=数据库名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">MYSQL_USER=用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">MYSQL_PASSWORD=密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">[/path/to/node_modules]/@waline/vercel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，占位符内容如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>[/path/to/node]：node 可执行文件绝对路径
[path/to/node_modules]：通过 npm 安装模块位置
&lt;/code>&lt;/pre>&lt;p>我的配置如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-systemd" data-lang="systemd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Waline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/bin/node /usr/local/node/lib/node_modules/@waline/vercel/vanilla.js&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">PATH=/usr/bin:/usr/local/bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">NODE_ENV=production&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">MYSQL_DB=数据库名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">MYSQL_USER=用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">MYSQL_PASSWORD=密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/usr/local/node/lib/node_modules//@waline/vercel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你之前按照我的步骤来安装 &lt;strong>Node&lt;/strong> 和 &lt;strong>Waline&lt;/strong> 那么直接将脚本复制然后修改参数即可，如果你的位置和我不一样，那么就需要将 &lt;strong>ExecStart&lt;/strong> 和 &lt;strong>WorkingDirectory&lt;/strong> 项中的路径换成你自己的。不确定可以使用命令查一下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">where is node &lt;span class="c1"># node 位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm root -g &lt;span class="c1"># npm 全局安装位置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;code>[Service]&lt;/code> 项中，你可以通过 &lt;code>Environment&lt;/code> 直接添加 Waline 插件的环境变量&lt;/p>
&lt;p>保存/上传完毕后，让 systemd 重新载入单元文件，并启动 Waline ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start waline
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时再访问 http://IP:8360 ，你就能看到评论页面了。&lt;/p>
&lt;p>一些常用的命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl stop waline &lt;span class="c1"># 停止服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart waline &lt;span class="c1"># 重启服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl status waline &lt;span class="c1"># 服务状态&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> waline &lt;span class="c1"># 添加开机自启动&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="反向代理设置">反向代理设置&lt;/h3>
&lt;p>如果你不想通过 IP:8360 进行访问，那么就需要设置反向代理来通过域名进行访问了这里提供两个配置：&lt;/p>
&lt;h4 id="caddy">Caddy&lt;/h4>
&lt;p>我使用的是 Caddy ， Caddy 反代需要修改 &lt;strong>/etc/caddy/Caddyfile&lt;/strong> 文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">reverse_proxy&lt;/span> &lt;span class="n">127.0.0.1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8360&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="se">{host}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="se">{remote}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">header_up&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="s">https&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">user@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="nginx">Nginx&lt;/h4>
&lt;p>Nginx 反向代理如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:8360&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Real-IP&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-For&lt;/span> &lt;span class="nv">$proxy_add_x_forwarded_for&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">X-Forwarded-Proto&lt;/span> &lt;span class="nv">$scheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">REMOTE-HOST&lt;/span> &lt;span class="nv">$remote_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">add_header&lt;/span> &lt;span class="s">X-Cache&lt;/span> &lt;span class="nv">$upstream_cache_status&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># cache
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kn">add_header&lt;/span> &lt;span class="s">Cache-Control&lt;/span> &lt;span class="s">no-cache&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">expires&lt;/span> &lt;span class="s">12h&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是我通过 Caddy+MariaDB 独立部署 Waline 的过程，希望能给大家带来帮助。后期如果需要设置邮件通知等功能可以在 waline.service 文件中的 &lt;strong>[Service]&lt;/strong> 项下直接添加 Environment= 然后根据官方给出的环境变量进行设置即可。&lt;/p>
&lt;p>若 Waline 后台发现有更新提示，可通过 &lt;code>npm&lt;/code> 对 Waline 进行更新：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm update @waline/vercel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="参考资料">参考资料&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://waline.js.org" target="_blank" rel="noopener"
>Waline 官方文档
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/nodesource/distributions/blob/master/README.md" target="_blank" rel="noopener"
>NodeSource - Node.js 官方二进制发行版
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/nodejs/help/wiki/Installation" target="_blank" rel="noopener"
>通过二进制文件安装 Node.js
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.ruanyifeng.com/blog/2016/03/node-systemd-tutorial.html" target="_blank" rel="noopener"
>Node 应用的 Systemd 启动
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>为 Hugo 博客开启评论系统</title><link>/archives/hugo_comment/</link><pubDate>Sat, 15 Oct 2022 10:50:47 +0800</pubDate><guid>/archives/hugo_comment/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>我的博客作为自己记录的地方，没有去做 SEO 也没有去进行优化；可以说完全没有必要去开启评论，但是为什么又添加了评论呢？我觉得万一有人看到了我博客中的一些内容，有什么没有了解的地方，或者说有什么地方需要进行交流，需要进行简单的评论该怎么办？为了这一两句话不可能去到邮箱里跟你进行深度交流，于是最后还是决定开启评论功能，并再此进行一个分享。&lt;/p>
&lt;h3 id="评论系统选择">评论系统选择&lt;/h3>
&lt;p>对于评论系统，我的感觉是一定要便捷，填上昵称，邮件等就可以进行评论，不需要进行注册等繁琐操作； Hugo 中也有许多自带的评论系统，但是大多数都是海外的，使用起来很不方便。最终决定使用基于 Valine 的 Waline ；下面就来讲一下我自己配置的过程。&lt;/p>
&lt;hr>
&lt;h2 id="通用配置">通用配置&lt;/h2>
&lt;h3 id="注册-leancloud">注册 LeanCloud&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://leancloud.app" target="_blank" rel="noopener"
>LeanCloud 国际版
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>推荐使用国际版，国内版的话需要绑定已备案域名，比较麻烦。。。首先 &lt;a class="link" href="https://console.leancloud.app/login" target="_blank" rel="noopener"
>登陆
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 或 &lt;a class="link" href="https://console.leancloud.app/register" target="_blank" rel="noopener"
>注册
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> &lt;strong>LeanCloud国际版&lt;/strong> 并进入 &lt;a class="link" href="https://console.leancloud.app/apps" target="_blank" rel="noopener"
>控制台
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;p>进入控制台后，点击创建应用，输入你喜欢的应用名称，选择开发版，然后点击创建：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_comment/1.png"
width="1356"
height="651"
srcset="/archives/hugo_comment/1_hu0053b852f29d033712973e6338b1d12a_42681_480x0_resize_box_3.png 480w, /archives/hugo_comment/1_hu0053b852f29d033712973e6338b1d12a_42681_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 创建应用"
class="gallery-image"
data-flex-grow="208"
data-flex-basis="499px"
>&lt;/p>
&lt;p>进入应用，选择左下角的 &lt;strong>设置 &amp;gt; 应用凭证&lt;/strong> 。你可以看到你的各种凭证，先放在这里，后面会用上：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_comment/2.png"
width="1107"
height="766"
srcset="/archives/hugo_comment/2_hu2bf2bd5f17c732278b663374181046d9_69067_480x0_resize_box_3.png 480w, /archives/hugo_comment/2_hu2bf2bd5f17c732278b663374181046d9_69067_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 应用凭证"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="346px"
>&lt;/p>
&lt;hr>
&lt;h2 id="评论系统配置">评论系统配置&lt;/h2>
&lt;h3 id="valine-配置">Valine 配置&lt;/h3>
&lt;p>一般来说 Valine 是 Hugo 主题里自带集成的，去稍微配置下就可以使用了；以我正在使用的 Zzo 主题演示。打开博客根目录，找到 &lt;strong>config/_default&lt;/strong> 打开 &lt;strong>params.toml&lt;/strong> 配置文件，然后按照下面注释进行修改：&lt;/p>
&lt;p>有的主题就是在根目录的 &lt;strong>config.toml&lt;/strong> ，需要自己去查看；所有修改应该基于博客根目录，不要去动主题中的文件；渲染时会对主题目录的配置进行覆盖，即：将主题中需要修改的文件复制到博客根目录对应位置，再修改博客根目录文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># comment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">enableComment&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="c"># 开启评论&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">disqus_shortname&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">commento&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Valine.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># You can get your appid and appkey from https://leancloud.cn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># more info please open https://valine.js.org&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">valine&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">enable&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="c"># 开启 Valine&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appId&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c"># AppID 为 你在 LeanCloud 应用凭证中的 AppLD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appKey&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c"># AppKey 为 你在 LeanCloud 应用凭证中的 AppKey&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">notify&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span> &lt;span class="c"># &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">verify&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span> &lt;span class="c"># &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">avatar&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;mp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">placeholder&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;说点什么吧...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">visitor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>配置项及参数参考： &lt;a class="link" href="https://valine.js.org/configuration.htmlValine" target="_blank" rel="noopener"
>配置项
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>一般来说，主题的 Valine 评论系统，直接在主题配置文件中设置相应的参数开启即可。如果不是自带的可以往下看 Waline 的操作。&lt;/p>
&lt;hr>
&lt;h3 id="waline-配置">Waline 配置&lt;/h3>
&lt;h4 id="通过-vercel-部署服务端">通过 Vercel 部署服务端&lt;/h4>
&lt;ul>
&lt;li>这一部分可以直接看官方给出的教程 &lt;a class="link" href="https://waline.js.org/guide/get-started.html#vercel-%e9%83%a8%e7%bd%b2-%e6%9c%8d%e5%8a%a1%e7%ab%afVercel" target="_blank" rel="noopener"
>部署 ( 服务端 )
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="引入-waline-及配置">引入 Waline 及配置&lt;/h4>
&lt;p>我正在用的 Zzo 主题是不自带 Waline 的，所以我就要进行引入；Zzo 主题关于评论系统的文件夹与文件分别为：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>~/themes/zzo/layouts/partials/comments&lt;/li>
&lt;li>~/themes/zzo/layouts/partials/comments/comments.html&lt;/li>
&lt;li>~/config/_default/params.toml&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>和上文一样，修改主题的原则是将主题目录中的文件复制到你博客所在根目录的相同位置进行修改，不要对主题文件夹中的文件进行直接修改；这样做的好处是以后更新主题时，你所做的修改不会被覆盖。&lt;/p>
&lt;p>首先打开主题文件夹的 &lt;strong>layouts/partials/comments&lt;/strong> 找到 &lt;strong>comments.html&lt;/strong> 和 &lt;strong>valine.html&lt;/strong> 将其复制到博客根目录对应位置，先打开 &lt;strong>comment.html&lt;/strong> 进行编辑，按照相同的格式，加上 Waline：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">{{ if $.Param &amp;#34;enableComment&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ if $.Param &amp;#34;disqus_shortname&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/disqus.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;commento&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/commento.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;valine.enable&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/valine.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;changyan.changyanAppid&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/changyan.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;livere.livereUID&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/livere.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;gitment.owner&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/gitment.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;gitalk.owner&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/gitalk.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;utterances.owner&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/utterances.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;isso.enable&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/isso.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ else if $.Param &amp;#34;telegram.enable&amp;#34; }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ partial &amp;#34;comments/telegram.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ {{ else if $.Param &amp;#34;waline.enable&amp;#34; }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ {{ partial &amp;#34;comments/waline.html&amp;#34; . }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> {{ end }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后再打开 &lt;strong>waline.html&lt;/strong> ，按照官方给出的 &lt;a class="link" href="https://waline.js.org/migration/valine.html" target="_blank" rel="noopener"
>从 Valine 迁移
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 进行引入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">&lt;span class="gd">-&amp;lt;script src=&amp;#39;//unpkg.com/valine/dist/Valine.min.js&amp;#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+&amp;lt;script src=&amp;#39;//unpkg.com/@waline/client@v2/dist/waline.js&amp;#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+&amp;lt;link href=&amp;#39;//unpkg.com/@waline/client@v2/dist/waline.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; /&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> &amp;lt;script&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- new Valine({
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+ Waline.init({
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> el: &amp;#39;#vcomments&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- appId: &amp;#39;Your appId&amp;#39;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- appKey: &amp;#39;Your appKey&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+ serverURL: &amp;#39;YOUR SERVER URL&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本的引入完成后，打开 &lt;strong>config/_default/params.toml&lt;/strong> 添加 Waline 并设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">waline&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">enable&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ServerURL&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c"># 服务端网址是你给 Vercel 服务端绑定的域名&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你想进行一些个性化的设置，可以参考以下官网。下面是我自己的一个简单的配置：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>~/config/_default/params.tomlparams.toml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">waline&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">enable&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ServerURL&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;https://domain.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Lang&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;zh-CN&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Meta&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;nick&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;mail&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;link&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">RequiredMeta&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;nick&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Login&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;disable&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">PageSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;10&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">HighLighter&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>~/layouts/partials/comments/waline.html&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;vcomments&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;//unpkg.com/@waline/client@v2/dist/waline.js&amp;#39;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;//unpkg.com/@waline/client@v2/dist/waline.css&amp;#39;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;stylesheet&amp;#39;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Waline&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">init&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;#vcomments&amp;#39;&lt;/span> &lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">locale&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">placeholder&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;请注意评论礼仪，发布攻击性、无意义内容将会视为垃圾评论进行删除处理。&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nick&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;昵称*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">serverURL&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;{{ .Site.Params.waline.ServerURL }}&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">emoji&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;//unpkg.com/@waline/emojis@1.1.0/alus&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;//unpkg.com/@waline/emojis@1.1.0/tieba&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">lang&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;{{ .Site.Params.waline.Lang }}&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">meta&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nx">Site&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">waline&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Meta&lt;/span> &lt;span class="p">}},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">requiredMeta&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nx">Site&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">waline&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RequiredMeta&lt;/span> &lt;span class="p">}},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">login&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;{{ .Site.Params.waline.Login }}&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pageSize&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;{{ .Site.Params.waline.PageSize }}&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">highlighter&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nx">Site&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">waline&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Highlighter&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>配置完成之后你就可以在运行 &lt;code>hugo server&lt;/code> 在本地进行评论测试了:&lt;/p>
&lt;p>&lt;img src="/archives/hugo_comment/3.png"
width="1019"
height="610"
srcset="/archives/hugo_comment/3_hu5eb5debdfb377ae4be91a9535e096deb_40768_480x0_resize_box_3.png 480w, /archives/hugo_comment/3_hu5eb5debdfb377ae4be91a9535e096deb_40768_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 本地测试"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="400px"
>&lt;/p>
&lt;hr>
&lt;h3 id="评论管理">评论管理&lt;/h3>
&lt;p>Waline 带有后台，可以实现对评论的管理。部署完成后访问 &lt;code>&amp;lt;serverURL&amp;gt;/ui/register&lt;/code> 进行注册，第一个注册的账户会被设定成管理员。&lt;/p>
&lt;p>登录成功后就可以看到评论管理的界面了。在这里可以修改、标记或删除评论。在评论的时候，如果选择登陆账户后进行评论，你的评论昵称后面会显示「博主」字样。如果没有登陆后台评论，一样是不会显示的。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是 Hugo 博客添加评论系统的过程，希望能给大家做一个参考；至于使用什么评论系统也是看自己的喜好和选择了。没有什么是最好的，只有最适合你自己的。到此 Hugo 搭建博客的一个入门流程也算是结束了，以后自己折腾多了，有时间了；也会进行更进一步的发掘和分享。&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://leancloud.app" target="_blank" rel="noopener"
>LeanCloud 国际版
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://valine.js.org" target="_blank" rel="noopener"
>Valine 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://vercel.com" target="_blank" rel="noopener"
>Vrecel 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://waline.js.org" target="_blank" rel="noopener"
>Waline 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Hugo 博客部署至托管服务提升访问体验</title><link>/archives/hugo_deploy/</link><pubDate>Sun, 18 Sep 2022 14:02:55 +0800</pubDate><guid>/archives/hugo_deploy/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>之前在 &lt;a class="link" href="/archives/hugo-actions/" >《使用 Github Actions 自动化部署 Hugo 博客》
&lt;/a> 一文中我讲了通过 Github Actions 自动部署 Hugo 博客到 Github Pages ； Github Pages 免费而且无需考虑成本及维护；但是 Github 毕竟是在海外，访问有问题，还时常抽风；访问体验算不上差强人意吧，也只能说是大失所望了。那怎样简单又低成本解决这个问题呢？ (毕竟白嫖才是硬道理) 现在就来看一下今天的主角：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://vercel.com" target="_blank" rel="noopener"
>Vercel 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Vercel 提供创新者在灵感瞬间创造所需的速度和可靠性 - 来自官方主页。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://netlify.com" target="_blank" rel="noopener"
>Netlify 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>用你喜欢的工具，轻松地在全球范围内自动化构建你的网站 - 来自官方主页。&lt;/p>
&lt;/blockquote>
&lt;p>Vercel 和 Netlify 都属于页面托管服务，不需要进行复杂的配置；可以一键部署与构建你的网站。Vercel 和 Netlify 主要面向的是 Web 端的开发者，用于帮助他们快速搭建自己的 Web 端业务，可以完全实现前端业务的独立运维。它们都拥有以下优点：&lt;/p>
&lt;ul>
&lt;li>免运维：不需要管理服务器主机或者服务器进程。&lt;/li>
&lt;li>弹性伸缩：根据负载进行自动规模伸缩与自动配置。&lt;/li>
&lt;li>按需付费：根据使用情况决定实际成本。&lt;/li>
&lt;li>高可用：具备隐含的高可用性。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="使用与部属">使用与部属&lt;/h2>
&lt;p>这里我以 Vercel 为例，因为他们两家操作都差不多，首先打开 Vercel 官网，点击右上角 &lt;strong>Sign Up - Continue with GitHub&lt;/strong> 使用 Github 进行登陆：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/1.png"
width="1162"
height="800"
srcset="/archives/hugo_deploy/1_hu520ac7caffc7e939e47a7c64a30cc591_96479_480x0_resize_box_3.png 480w, /archives/hugo_deploy/1_hu520ac7caffc7e939e47a7c64a30cc591_96479_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 登陆"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="348px"
>&lt;/p>
&lt;p>之后让你进行授权，点击确认授权即可：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/2.png"
width="716"
height="743"
srcset="/archives/hugo_deploy/2_hucd5b0362bf39e53c3fd2d1985f5e38ce_37450_480x0_resize_box_3.png 480w, /archives/hugo_deploy/2_hucd5b0362bf39e53c3fd2d1985f5e38ce_37450_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 授权"
class="gallery-image"
data-flex-grow="96"
data-flex-basis="231px"
>&lt;/p>
&lt;p>进入管理面板后，点击 &lt;strong>Create a New Project&lt;/strong> 来创建新项目，然后选择 &lt;strong>Countinue with GitHub&lt;/strong> 导入 Github 的仓库：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/3.png"
width="1304"
height="757"
srcset="/archives/hugo_deploy/3_hu35d92acd4d857a75d14331dc1b4ccd74_153817_480x0_resize_box_3.png 480w, /archives/hugo_deploy/3_hu35d92acd4d857a75d14331dc1b4ccd74_153817_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 导入 Github"
class="gallery-image"
data-flex-grow="172"
data-flex-basis="413px"
>&lt;/p>
&lt;p>到这会让你选择仓库，你可以选择读取所有仓库，或者指定读取某一个仓库 (这里我就选择读取我 Hugo 博客的仓库) ，然后 Install：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/4.png"
width="821"
height="779"
srcset="/archives/hugo_deploy/4_hu3b8e077e0d652f00a1c95c7f92ebea08_47584_480x0_resize_box_3.png 480w, /archives/hugo_deploy/4_hu3b8e077e0d652f00a1c95c7f92ebea08_47584_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 选择仓库"
class="gallery-image"
data-flex-grow="105"
data-flex-basis="252px"
>&lt;/p>
&lt;p>之后会回到管理面板，点击 &lt;strong>Improt&lt;/strong> 导入你刚才选择的仓库；然后就会进入部署配置页面，一般来讲是会自动识别你仓库的程序，然后自动选择好部署配置。如果没有的话可以自己设置；记得在环境变量添加一个 &lt;strong>HUGO_VERSION&lt;/strong> 记录值为 Hugo 最新版本号，以防有的主题对版本有要求从而导致部署失败；设置完后就可以直接点击 &lt;strong>Deploy&lt;/strong> 进行部署了：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/5.png"
width="1125"
height="890"
srcset="/archives/hugo_deploy/5_hu382b33a8fea63f80566ee0c317ec3269_55335_480x0_resize_box_3.png 480w, /archives/hugo_deploy/5_hu382b33a8fea63f80566ee0c317ec3269_55335_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 部署参数"
class="gallery-image"
data-flex-grow="126"
data-flex-basis="303px"
>&lt;/p>
&lt;p>等待部署，看到完结撒花就代表已经部署完成了：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/6.png"
width="1367"
height="839"
srcset="/archives/hugo_deploy/6_huf3b975515da8073a73fe2b1d47416f91_120000_480x0_resize_box_3.png 480w, /archives/hugo_deploy/6_huf3b975515da8073a73fe2b1d47416f91_120000_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 部署完毕"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="391px"
>&lt;/p>
&lt;p>然后点击 &lt;strong>Continue to Dashboard&lt;/strong> 进入管理面板，再点击 &lt;strong>Settings - Domains&lt;/strong> 为你的网站添加一个域名；输入你自己的域名后点击 &lt;strong>Add&lt;/strong> 即可添加：&lt;/p>
&lt;blockquote>
&lt;p>因为 Vercel 分配的二级域名是被 DNS 污染了的，所以通过二级 Vercel 分配的域名是访问不了的&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="/archives/hugo_deploy/7.png"
width="1383"
height="712"
srcset="/archives/hugo_deploy/7_hu213e8a820c8920687704529670824379_38769_480x0_resize_box_3.png 480w, /archives/hugo_deploy/7_hu213e8a820c8920687704529670824379_38769_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 绑定域名"
class="gallery-image"
data-flex-grow="194"
data-flex-basis="466px"
>&lt;/p>
&lt;p>在添加域名之后会提示你设置 &lt;strong>CNAME&lt;/strong> 解析至 &lt;strong>cname.vercel-dns.com&lt;/strong> ，这时候到你域名的管理商或者 DNS 提供商处添加 &lt;strong>CNAME&lt;/strong> 解析即可：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/8.png"
width="1053"
height="344"
srcset="/archives/hugo_deploy/8_hu8747a23c42b5d3e7c2c312525db0de2c_19853_480x0_resize_box_3.png 480w, /archives/hugo_deploy/8_hu8747a23c42b5d3e7c2c312525db0de2c_19853_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 域名解析"
class="gallery-image"
data-flex-grow="306"
data-flex-basis="734px"
>&lt;/p>
&lt;p>设置完成后等待域名解析， Vercel 会自动添加 SSL 证书，并且设置 HTTPS 访问。&lt;/p>
&lt;p>至于托管到 Netlify 的部署过程和 Vercel 是大同小异的，看你怎么选择，区别就只在于 Vercel 的二级域名不能进行访问，需要添加自己的域名而已。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>至此 Hugo 博客托管到 Vercel/Netlify 进行自动部署完成；通过测试，可以看到访问速度对比 Github Pages 还是拥有不小的提升的 (左边为 Vercel 右边为 Github Pages)：&lt;/p>
&lt;p>&lt;img src="/archives/hugo_deploy/9.png"
width="1196"
height="550"
srcset="/archives/hugo_deploy/9_hu8e4198a331490e8b93693d76f9955d15_94208_480x0_resize_box_3.png 480w, /archives/hugo_deploy/9_hu8e4198a331490e8b93693d76f9955d15_94208_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 速度对比"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="521px"
>&lt;/p>
&lt;p>在 Github 仓库导入到 Vercel/Netlify 之后，你每一次提交代码到 Hugo 博客仓库，这边都会自动进行部署及发布，相当于 Github Actions 自动部署并发布到 Github Pages 是一样的，不需要进行额外操作，非常方便。&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://vercel.com" target="_blank" rel="noopener"
>Vercel 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://netlify.com" target="_blank" rel="noopener"
>Netlify 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://gohugo.io/hosting-and-deployment/hosting-on-netlify" target="_blank" rel="noopener"
>Hugo 官方文档 - Host On Netlify
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>使用 Github Actions 自动化部署 Hugo 博客</title><link>/archives/hugo_actions/</link><pubDate>Sat, 16 Jul 2022 13:25:48 +0800</pubDate><guid>/archives/hugo_actions/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>之前在 &lt;a class="link" href="/archives/hugo/" >《使用 Hugo 搭建个人博客及部署》
&lt;/a> 一文中, 我讲了通过 Hugo 来搭建个人博客, 并部署到 Github Pages 来实现一个在线访问.但是这样手动部署一开始还觉得比较新奇有趣, 时间一长的话难免会觉得有些麻烦, 一有什么改动就要全部重新部署, 那么本文就将讲一下通过 &lt;code>Github Actions&lt;/code> 来实现将我们的 Hugo 博客自动部署到 Github Pages 或者我们自己的云服务器上, 现在就一起来看一下.&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>: 本文所有操作的前提条件是在 &lt;a class="link" href="/archives/hugo/" >《使用 Hugo 搭建个人博客及部署》
&lt;/a> 一文的基础上, 可以先行查阅.&lt;/p>
&lt;hr>
&lt;h2 id="介绍与准备">介绍与准备&lt;/h2>
&lt;h3 id="github-actions-是什么">Github Actions 是什么&lt;/h3>
&lt;p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台, 可用于自动执行生成、测试和部署管道.你可以创建工作流来构建和测试存储库的每个拉取请求, 或将合并的拉取请求部署到生产环境.
GitHub 提供 Linux、Windows 和 macOS 虚拟机来运行你的工作流程, 或者你可以在自己的数据中心或云基础架构中托管自己的自托管运行器.&lt;/p>
&lt;h3 id="准备工作">准备工作&lt;/h3>
&lt;p>以本文描述所说, 通过 Github 提供的 Actions 服务将 Hugo 博客自动部署到Github Pages 和云服务器, 那就需要以下准备:&lt;/p>
&lt;ol>
&lt;li>存放 Hugo 博客项目的仓库, 该仓库拥有用于生成博客的 Markdown 文件, 生成静态博客的配置文件、主题等等; 也就是相当于我们本地博客的根目录, 该仓库可以设为私有.&lt;/li>
&lt;li>存放 Hugo 博客生成的静态文件仓库, 用于 Github Pages 进行访问; 仓库名为 &lt;code>username.github.io&lt;/code> , 该仓库为开源.&lt;/li>
&lt;li>服务器或者虚拟主机, 是你自己购买的, 同样用于存放 Hugo 博客生成的静态文件.&lt;/li>
&lt;/ol>
&lt;p>下面一步步来进行操作.&lt;/p>
&lt;hr>
&lt;h2 id="配置-github-actions">配置 Github Actions&lt;/h2>
&lt;h3 id="创建配置文件">创建配置文件&lt;/h3>
&lt;p>首先, 在本地博客仓库根目录下, 创建 &lt;code>.github/workflows/depoly.yaml&lt;/code> 文件名 depoly 随意, 这个就是 Github Actions 配置文件, 然后打开 VS Code 进行编辑; 复制下面的内容, 粘贴进去, 然后根据注释进行修改; 操作完成后删除注释并保存:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 触发条件, 在 push 到 main 分支后&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">workflow_dispatch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 触发条件, 在 Github 仓库 Action 工具手动调用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 任务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-and-deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定虚拟机环境为 Ubuntu 新版&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 拉取代码&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用其他用户配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 包含子模块,也就是链接的主题&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 安装 Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用其他用户配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">latest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Hugo 版本选择&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build Hugo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 生成博客静态文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy GhPages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 部署到 Github Pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用其他用户配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">personal_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.PERSONAL_TOKEN }}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Personal Token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">username/username.github.io&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Github Pages 仓库名, username 换成你的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">commit_message&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.event.head_commit.message }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy To VPS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 部署到个人服务器&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cross-the-world/scp-pipeline@master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DC_HOST }}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Actions Secrets Token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DC_USER }}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Actions Secrets Token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pass&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DC_PASS }}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Actions Secrets Token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DC_PORT }}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Actions Secrets Token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">connect_timeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">10s&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">local&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;./public/*&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/www/html/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 网站根目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>如果你不需要部署到个人服务器，可以将最后一个 &lt;code>Action&lt;/code> (部署到个人服务器) 删除&lt;/p>
&lt;/blockquote>
&lt;p>人看麻了? 没关系, 我们只要明白少数几个地方即可, 我来慢慢梳理:&lt;/p>
&lt;ul>
&lt;li>&lt;code>on&lt;/code> 字段指定触发工作流的条件, 通常是某些事件, 如：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">push&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定 push 事件可以触发&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>jobs&lt;/code>字段表示需要执行的任务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>steps&lt;/code> 字段表示任务流程, 我们这个配置流程为:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Depoly GhPages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Depoly TO VPS&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>steps&lt;/code> 字段下的 &lt;code>name&lt;/code> , &lt;code>use&lt;/code> , &lt;code>with&lt;/code> 加起来就是一个 Action&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>name&lt;/code> 表示一个 Action 的名称&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>use&lt;/code> 表示使用某个别人写好的插件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>with&lt;/code> 表示传递给插件的参数&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="创建-token">创建 Token&lt;/h3>
&lt;p>重点来了, 现在配置文件已经编辑好了, 我们需要创建相对应的 Token 来给 Actions 使用&lt;/p>
&lt;h4 id="personal-token">Personal Token&lt;/h4>
&lt;p>打开 Github 点击 &lt;code>右上角头像 - Settings - Developer setting - Personal access tokens - Generate new token&lt;/code> 创建一个 Token, 记得要勾选 &lt;code>repo&lt;/code> 和 &lt;code>workflow&lt;/code> 权限:&lt;/p>
&lt;p>&lt;img src="/archives/hugo_actions/1.png"
width="922"
height="747"
srcset="/archives/hugo_actions/1_hu3522c9be6b2dad825089e416752b4a96_59902_480x0_resize_box_3.png 480w, /archives/hugo_actions/1_hu3522c9be6b2dad825089e416752b4a96_59902_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 创建Token"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="296px"
>&lt;/p>
&lt;p>生成后复制 Token &lt;strong>注意: Token 只会出现一次&lt;/strong>&lt;/p>
&lt;p>&lt;img src="/archives/hugo_actions/2.png"
width="867"
height="317"
srcset="/archives/hugo_actions/2_hu8fd7383f66fad8c9a9876d2a4e51ea72_20800_480x0_resize_box_3.png 480w, /archives/hugo_actions/2_hu8fd7383f66fad8c9a9876d2a4e51ea72_20800_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ Token展示"
class="gallery-image"
data-flex-grow="273"
data-flex-basis="656px"
>&lt;/p>
&lt;p>复制后打开存放 Hugo 博客的仓库, 点击 &lt;code>Settings - Secrets - Actions - New repository secret&lt;/code> 输入刚才复制的 &lt;code>Token&lt;/code> , 名字为 &lt;code>PERSONAL_TOKEN&lt;/code>&lt;/p>
&lt;p>&lt;img src="/archives/hugo_actions/3.png"
width="1007"
height="555"
srcset="/archives/hugo_actions/3_huc13b2c964835fd1c93006ef2ced365b3_16813_480x0_resize_box_3.png 480w, /archives/hugo_actions/3_huc13b2c964835fd1c93006ef2ced365b3_16813_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 创建 Secret"
class="gallery-image"
data-flex-grow="181"
data-flex-basis="435px"
>&lt;/p>
&lt;p>如果你不需要将博客静态文件部署到个人服务器, 那么到这里就结束了. 下面来讲下部署到个人服务器的设置&lt;/p>
&lt;h4 id="actions-secrets-token">Actions Secrets Token&lt;/h4>
&lt;p>在 Actions 配置文件中, 最后一个流程是部署到个人服务器, 那么这里有几个选项也是需要创建 Token 的, 分别为：&lt;/p>
&lt;ul>
&lt;li>&lt;code>host&lt;/code> 你的服务器 IP&lt;/li>
&lt;li>&lt;code>user&lt;/code> 登陆用户名&lt;/li>
&lt;li>&lt;code>pass&lt;/code> 登陆密码&lt;/li>
&lt;li>&lt;code>port&lt;/code> SSH 端口，默认为 22, 如果修改了端口，或者供应商有指定端口，填入指定端口即可&lt;/li>
&lt;/ul>
&lt;p>以 &lt;code>host&lt;/code> 为例, 在存放 Hugo 博客的仓库, 点击 &lt;code>Settings - Secrets - Actions - New repository secret&lt;/code> 输入 Token Name 为 &lt;code>DC_HOST&lt;/code> , Secret 为你的服务器 IP 地址, 对应配置文件中的 &lt;code>${{ secrets.DC_HOST }}&lt;/code> 项&lt;/p>
&lt;p>&lt;img src="/archives/hugo_actions/4.png"
width="996"
height="579"
srcset="/archives/hugo_actions/4_huf4571d29c961448e5cb85460feb31d56_20417_480x0_resize_box_3.png 480w, /archives/hugo_actions/4_huf4571d29c961448e5cb85460feb31d56_20417_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 创建 Secret"
class="gallery-image"
data-flex-grow="172"
data-flex-basis="412px"
>&lt;/p>
&lt;p>之后分别创建相对应的 Token ,然后修改最后一行 &lt;code>remote&lt;/code> 网站根目录即可。&lt;/p>
&lt;hr>
&lt;h2 id="推送及更新">推送及更新&lt;/h2>
&lt;p>全部配置完成之后, 我们就可以将配置文件进行推送了, 将我们的本地博客仓库推送到创建好的私密仓库中:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git init &lt;span class="c1"># 初始化仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git branch -M main &lt;span class="c1"># 设置分支为main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add . &lt;span class="c1"># 添加全部文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;Hugo 博客仓库第一次提交&amp;#34;&lt;/span> &lt;span class="c1"># 添加提交信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:username/name.git &lt;span class="c1"># 添加远程仓库, 格式为: 用户名/仓库名 .git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin main &lt;span class="c1"># 推送&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>推送完成后，等待一会然后打开 Hugo 仓库的 Actions 我们就可以看到工作流已经完成:&lt;/p>
&lt;p>&lt;img src="/archives/hugo_actions/5.png"
width="1161"
height="682"
srcset="/archives/hugo_actions/5_huc21d97b91565e9272aafaedea766acc8_54304_480x0_resize_box_3.png 480w, /archives/hugo_actions/5_huc21d97b91565e9272aafaedea766acc8_54304_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 工作流状态"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="408px"
>&lt;/p>
&lt;p>再打开存放静态文件的仓库, 可以看到静态文件已经自动部署完毕并且生成 Github Pages 了:&lt;/p>
&lt;p>&lt;img src="/archives/hugo_actions/6.png"
width="1288"
height="830"
srcset="/archives/hugo_actions/6_hue00c9a32992b36571c003f698c72598d_123373_480x0_resize_box_3.png 480w, /archives/hugo_actions/6_hue00c9a32992b36571c003f698c72598d_123373_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 部署完成"
class="gallery-image"
data-flex-grow="155"
data-flex-basis="372px"
>&lt;/p>
&lt;hr>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a class="link" href="https://docs.github.com/cn/actions/GithubGithub" target="_blank" rel="noopener"
>Actions 官方文档
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.htmlGithub" target="_blank" rel="noopener"
>Actions 入门教程
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/marketplace?type=actionsGithub" target="_blank" rel="noopener"
>Actions 插件市场
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是通过 Github Actions 实现的 Hugo 博客自动部署系统, 以后只需要在本地写好文章, 然后 Push 到 Github 的 Hugo 博客仓库中就可以自动进行静态文件生成和部署啦,可以说是方便又好用. 最重要它还是免费的, 这样写博客的方式是否够优雅呢?&lt;/p></description></item><item><title>使用 Hugo 搭建个人博客及部署</title><link>/archives/hugo/</link><pubDate>Tue, 03 May 2022 10:50:47 +0800</pubDate><guid>/archives/hugo/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>很早开始就接触到个人博客这块了，一开始是到处泛滥的 YH 、 BY 分销；各种免费主机，再到后来自己买虚拟主机、VPS 进行个人博客的使用；由于我懒得备案，于是一直用的是海外的服务器；但是海外服务器也有问题，就是访问体验相较于国内还是比较差的。 WordPress 的话，对我个人而言感觉比较臃肿，所以后面又用了 Typecho ；到最后工作、生活等诸多琐事导致没有太多的时间去进行打理，而且服务器的长期维护也是一笔不小的开支。&lt;/p>
&lt;p>到后面我发现了 Hugo + GitHub Pages 这一方案，既可以进行托管，节省了许多维护心力，又能随时进行写作；虽然在部署与搭建上需要进行一些配置，但是后续更新和维护还是比较方便的。因此，在这里将博客系统搭建及部署进行记录，希望对大家有所帮助。&lt;/p>
&lt;h3 id="博客程序选择">博客程序选择&lt;/h3>
&lt;p>目前已经有很多比较成熟的博客平台，如前文所提到的 WordPress，虽然功能强大，但对于个人博客站点来说有些太臃肿了，我认为个人博客就是自己在上面写一些东西，进行一个分享与记录；轻巧一点会比较好。而 Typecho 等轻量级博客程序就挺符合我的口味，但是如前文所说，我并没有太多的时间去进行打理和维护；经过一段时间的寻找与调研，我最终选择了 Hugo 这个高效的静态网站生成器。&lt;/p>
&lt;h3 id="关于-hugo">关于 Hugo&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gohugo.io" target="_blank" rel="noopener"
>Hugo 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Hugo - 世界上最快的网站构建框架，Hugo 是最流行的开源静态站点生成器之一。 凭借其惊人的速度和灵活性，Hugo 让构建网站再次变得有趣。（来自官网介绍）&lt;/p>
&lt;p>Hugo 是用 Golang 编写的网站构建程序，采用 Markdown 进行文章编辑，自动生成静态站点文件，支持丰富的主题配置，也可以通过 js 嵌入像是评论系统等插件，高度定制化。除了 Hugo 外， 还有 Jekyll、Hexo、VuePress、Gitbook、Docsify 等选择，实现和使用都差不多，可以根据自己的偏好进行选择。&lt;/p>
&lt;hr>
&lt;h2 id="安装与部属">安装与部属&lt;/h2>
&lt;h3 id="安装-hugo-及相关程序">安装 Hugo 及相关程序&lt;/h3>
&lt;h4 id="安装-hugo">安装 Hugo&lt;/h4>
&lt;p>Windows 用户使用 Chocolatey 安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">choco install hugo -confirm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不想使用 Chocolatey 管理包的话也可以直接到官网下载程序到本地目录，然后添加环境变量&lt;/p>
&lt;p>MacOS 用户使用 Homebrew 安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后通过 &lt;code>hugo version&lt;/code> 进行验证安装&lt;/p>
&lt;h4 id="安装-git">安装 Git&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://git-scm.com" target="_blank" rel="noopener"
>Git 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>下载完成后按照默认配置，一路下一步即可完成安装。&lt;/p>
&lt;h4 id="安装-vs-code">安装 VS Code&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://code.visualstudio.com" target="_blank" rel="noopener"
>VS Code 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>下载适合自己系统的版本，然后一路默认配置安装即可。&lt;/p>
&lt;p>VS Code 插件推荐：&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>Markdown All in One&lt;/code> Markdown 写作利器&lt;/p>
&lt;p>&lt;code>Chinese Language Pack for Visual Studio Code&lt;/code> VS Code 汉化插件&lt;/p>
&lt;p>&lt;code>Auto Rename Tag&lt;/code> 涉及修改代码时很好用&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="创建-hugo-网站及配置">创建 Hugo 网站及配置&lt;/h3>
&lt;h4 id="创建网站">创建网站&lt;/h4>
&lt;p>我这里的操作均在 Windows 系统下，其他系统步骤都一样。&lt;/p>
&lt;p>打开 Git Bash 进入到需要放置网站的目录，即可通过 &lt;code>hugo new site&lt;/code> 命令进行创建网站了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /e &lt;span class="c1"># 进入E盘&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir hugo &lt;span class="c1"># 创建 hugo 文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> hugo &lt;span class="c1"># 进入hugo文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo new site name &lt;span class="c1"># 创建新网站，name可以自行设置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/hugo/hugo1.png"
width="499"
height="217"
srcset="/archives/hugo/hugo1_hu1593209fc24c3f241eae20b192d7df07_80052_480x0_resize_box_3.png 480w, /archives/hugo/hugo1_hu1593209fc24c3f241eae20b192d7df07_80052_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 创建站点"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="551px"
>&lt;/p>
&lt;h4 id="配置主题">配置主题&lt;/h4>
&lt;p>当通过上文命令创建我们的站点后，需要进行主题配置，Hugo 拥有丰富的主题，可以通过官网 &lt;code>Themes&lt;/code> 菜单选择自己喜欢的风格，查看预览效果，选择后可以进入主题项目仓库，一般都会有很详细的安装及配置说明。下面我就以 &lt;code>m10c&lt;/code> 这个主题为例，演示一下配置流程。&lt;/p>
&lt;h5 id="关联主题仓库">关联主题仓库&lt;/h5>
&lt;p>我们可以将主题仓库直接 &lt;code>git clone&lt;/code> 下来进行使用，但这种方式有一些弊端，当之后自己对主题进行修改后，可能会与原主题产生一些冲突，不方便版本管理与后续更新。我采用的是 &lt;code>git submodule&lt;/code> 方式进行仓库链接，这样后续可以对主题的修改进行单独维护。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/vaga/hugo-theme-m10c.git themes/m10c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/hugo/hugo2.png"
width="743"
height="293"
srcset="/archives/hugo/hugo2_hu8b1c95630b8d6c2d2b4d5013a4a28dcc_147285_480x0_resize_box_3.png 480w, /archives/hugo/hugo2_hu8b1c95630b8d6c2d2b4d5013a4a28dcc_147285_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 添加主题"
class="gallery-image"
data-flex-grow="253"
data-flex-basis="608px"
>&lt;/p>
&lt;h5 id="更新主题">更新主题&lt;/h5>
&lt;p>如果需要同步主题仓库的最新修改，运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git submodule update --remote
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="初始化主题配置">初始化主题配置&lt;/h5>
&lt;p>每个主题一般都会提供一些实例配置与初始页面，开始使用主题时可以将其 &lt;code>exampleSite/&lt;/code> 演示站点目录下的文件复制到站点目录下，在此基础上进行调整配置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp -rf themes/m10c/exampleSite/* ./
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>初始化主题基础配置后，我们可以在 &lt;code>config.toml&lt;/code> 文件中进行站点细节配置，将博客站点配置文件中的 &lt;code>baseURL&lt;/code> 改为自己的域名，或者直接设置为 &lt;code>/&lt;/code> ；其余具体配置项参考各主题说明文档，或者作者主题仓库中的详细说明。&lt;/p>
&lt;h5 id="调试主题">调试主题&lt;/h5>
&lt;p>完成一些基本的站点配置后，我们就可以通过 &lt;code>hugo server&lt;/code> 命令进行本地实时预览：&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo3.png"
width="848"
height="413"
srcset="/archives/hugo/hugo3_hu195d9af53c49c1daaf661459675c35ad_151057_480x0_resize_box_3.png 480w, /archives/hugo/hugo3_hu195d9af53c49c1daaf661459675c35ad_151057_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 预览命令"
class="gallery-image"
data-flex-grow="205"
data-flex-basis="492px"
>&lt;/p>
&lt;p>运行服务后，我们可以通过浏览器 http://localhost:1313 地址访问我们的本地预览网页：&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo4.png"
width="859"
height="597"
srcset="/archives/hugo/hugo4_hu91f764b6575d40954d329e961623aeb3_50888_480x0_resize_box_3.png 480w, /archives/hugo/hugo4_hu91f764b6575d40954d329e961623aeb3_50888_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 本地预览"
class="gallery-image"
data-flex-grow="143"
data-flex-basis="345px"
>&lt;/p>
&lt;h4 id="发布新文章">发布新文章&lt;/h4>
&lt;p>上述操作都完成后，就可以进行新文章的发布了，通过 &lt;code>hugo new&lt;/code> 命令即可进行发布新文章&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new posts/start.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发布新文章后，我们就可以通过 VS Code 进行编辑了。&lt;/p>
&lt;hr>
&lt;h3 id="部署网站">部署网站&lt;/h3>
&lt;h4 id="git-pages-设置">Git Pages 设置&lt;/h4>
&lt;h5 id="开通-github-pages-仓库">开通 Github Pages 仓库&lt;/h5>
&lt;p>Github Pages 项目仓库需要符合 &lt;code>username.github.io&lt;/code> 的特殊命名格式，这样博客站点才能正常访问 GitHub Pages 生成的网站服务。&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo5.png"
width="880"
height="890"
srcset="/archives/hugo/hugo5_hua8df7804fcb6582fb128f2d3cde579e3_68194_480x0_resize_box_3.png 480w, /archives/hugo/hugo5_hua8df7804fcb6582fb128f2d3cde579e3_68194_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 新建仓库"
class="gallery-image"
data-flex-grow="98"
data-flex-basis="237px"
>&lt;/p>
&lt;h5 id="生成静态文件">生成静态文件&lt;/h5>
&lt;p>配置完主题，并发布新文章之后，就可以通过 &lt;code>hugo&lt;/code> 命令来生成静态网页文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/hugo/hugo6.png"
width="846"
height="263"
srcset="/archives/hugo/hugo6_hua556ab7ea8094a1bb562d04c6605473b_80122_480x0_resize_box_3.png 480w, /archives/hugo/hugo6_hua556ab7ea8094a1bb562d04c6605473b_80122_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 生成静态文件"
class="gallery-image"
data-flex-grow="321"
data-flex-basis="772px"
>&lt;/p>
&lt;h5 id="发布站点">发布站点&lt;/h5>
&lt;p>Hugo 默认会将生成的静态网页文件存放在 public 目录下，我们可以通过将 public 目录初始化为本地仓库，并关联我们的 Github 远程仓库来推送我们的网页静态文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git branch -M main &lt;span class="c1"># 好像现在官方默认是main分支&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;博客第一次提交&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/hugo/hugo7.png"
width="730"
height="544"
srcset="/archives/hugo/hugo7_hue6bbc362e6251bab546bb4b96f164b3e_233735_480x0_resize_box_3.png 480w, /archives/hugo/hugo7_hue6bbc362e6251bab546bb4b96f164b3e_233735_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 提交至本地仓库"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="322px"
>&lt;/p>
&lt;p>提交到本地仓库后，就可以开始推送到 Github 远程仓库了；在此之前要先进行一些设置：&lt;/p>
&lt;h6 id="添加密钥">添加密钥&lt;/h6>
&lt;p>这个密钥是用来安全连接 Github 远程仓库的，使用 Https 方式连接可能会出现各种问题，输入下面命令生成密钥，然后按下几次回车即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t ed25519 -C &lt;span class="s2">&amp;#34;你的Github邮箱&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/hugo/hugo8.png"
width="543"
height="345"
srcset="/archives/hugo/hugo8_hue8529ca85d5514b15728b2b3eecf7f9f_17168_480x0_resize_box_3.png 480w, /archives/hugo/hugo8_hue8529ca85d5514b15728b2b3eecf7f9f_17168_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 生成密钥"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="377px"
>&lt;/p>
&lt;p>生成完毕后输入 &lt;code>cat ~/.ssh/id_ed25519.pub&lt;/code> 查看公钥内容：&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo9.png"
width="741"
height="44"
srcset="/archives/hugo/hugo9_hu244e421d83d6064b29d90c59875d06c8_19752_480x0_resize_box_3.png 480w, /archives/hugo/hugo9_hu244e421d83d6064b29d90c59875d06c8_19752_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 查看公钥"
class="gallery-image"
data-flex-grow="1684"
data-flex-basis="4041px"
>&lt;/p>
&lt;p>复制展示出来的公钥，然后打开 Github 点击 &lt;code>右上角头像 - Settings - SSH and GPG keys - New SSH Key&lt;/code> 把刚才复制的公钥粘贴到 &lt;code>Key&lt;/code> 中，命名随意，然后保存：&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo10.png"
width="1164"
height="628"
srcset="/archives/hugo/hugo10_hu92918c3a83d40ad27e27b2d8bf7e9e88_45493_480x0_resize_box_3.png 480w, /archives/hugo/hugo10_hu92918c3a83d40ad27e27b2d8bf7e9e88_45493_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 上传公钥"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="444px"
>&lt;/p>
&lt;p>然后回到 &lt;code>Git Bash&lt;/code> 添加远程仓库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:username/username.github.io.git &lt;span class="c1"># username换成你的github用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后会提示你是否将 &lt;code>github.com&lt;/code> 添加到主机列表，输入 yes 回车即可&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo11.png"
width="580"
height="101"
srcset="/archives/hugo/hugo11_huc499c9330fd25cbc89511e4f67450492_24572_480x0_resize_box_3.png 480w, /archives/hugo/hugo11_huc499c9330fd25cbc89511e4f67450492_24572_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 推送至远程仓库"
class="gallery-image"
data-flex-grow="574"
data-flex-basis="1378px"
>&lt;/p>
&lt;p>推送完成后，稍等几分钟即可通过 Github Pages 域名 &lt;code>username.github.io&lt;/code> 来访问我们的博客站点了。&lt;/p>
&lt;hr>
&lt;h2 id="绑定域名">绑定域名&lt;/h2>
&lt;p>推送完毕后就可以绑定自己的域名了，绑定域名前，先到你的域名服务商或者 DNS 提供商处添加 &lt;code>CNAME&lt;/code> 记录解析到 &lt;code>username.github.io&lt;/code> 也就是你的 Github Pages 仓库名 (我这里是 CloudFlare ) ：&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo12.png"
width="1157"
height="534"
srcset="/archives/hugo/hugo12_hu5943c29bd7368fd339cc60f8beabdb7c_35882_480x0_resize_box_3.png 480w, /archives/hugo/hugo12_hu5943c29bd7368fd339cc60f8beabdb7c_35882_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 绑定域名"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="520px"
>&lt;/p>
&lt;p>进入 Github Pages 仓库，点击 &lt;code>Settings - Pages&lt;/code> 找到 Custom domain 输入你自己的域名，等待验证 DNS 后开启 HTTPS ：&lt;/p>
&lt;p>&lt;img src="/archives/hugo/hugo13.png"
width="1169"
height="851"
srcset="/archives/hugo/hugo13_hu52f39e40f75c2ee40fc82424e6fd1dfc_97307_480x0_resize_box_3.png 480w, /archives/hugo/hugo13_hu52f39e40f75c2ee40fc82424e6fd1dfc_97307_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 开启HTTPS"
class="gallery-image"
data-flex-grow="137"
data-flex-basis="329px"
>&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是使用 Hugo 与 Github Pages 搭建个人博客的一个简单过程；后续还会进行更加详细的解读与说明，希望能够对大家有所帮助。&lt;/p></description></item><item><title>SSL 证书安装部署</title><link>/archives/own_ssl/</link><pubDate>Sat, 02 Apr 2022 10:17:55 +0800</pubDate><guid>/archives/own_ssl/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在之前的文章中讲了在添加网站时通过 Oneinstack（LNMP 一键安装包）的 acme.sh/Caddy 来自动安装部署免费证书，当然你也可以使用自己的证书替代免费证书来进安装部署；现在来看下如何进行操作。&lt;/p>
&lt;h3 id="场景与前提">场景与前提&lt;/h3>
&lt;p>由于我使用的是 Oneintack 安装的 Nginx 和 Caddy 服务，所以本文以 Nginx/Caddy 视角进行操作。我的域名是在腾讯云下，并使用他们提供的为期1年免费 Trust Asia 证书，所以我以这些前提为演示；使用其他的也是完全可以的。&lt;/p>
&lt;h2 id="操作步骤">操作步骤&lt;/h2>
&lt;h3 id="下载并上传证书">下载并上传证书&lt;/h3>
&lt;p>首先登陆到域名控制面板，申请好你所需要的证书，然后下载到本地；如我在腾讯云下载的 Nginx 类型证书：&lt;/p>
&lt;ul>
&lt;li>文件内容：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>domain.com_nginx.zip
├ domain.com_nginx
│ ├ domain.com.scr
│ ├ domain.com.key
│ ├ domain.com_bundle.crt
│ ├ domain.com_bundle.pem
&lt;/code>&lt;/pre>&lt;p>将其解压出来，并全部命名为 &lt;code>domian.com.xxx&lt;/code> ；然后将 &lt;code>domain.com.scr&lt;/code> 、&lt;code>domian.com.key&lt;/code> 和 &lt;code>domian.com.crt&lt;/code> 上传至 SSL 存放位置。&lt;/p>
&lt;p>通过 Oneinistack 安装的位置位于 &lt;code>/usr/local/nginx/conf/ssl&lt;/code>&lt;/p>
&lt;h3 id="添加网站">添加网站&lt;/h3>
&lt;p>上传完成后，即可使用 Oneinstack 通过自有证书模式添加网站：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">~/oneinstack/vhost.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输入 &lt;code>2&lt;/code> 选择自有 SSL ，然后完成添加即可。&lt;/p>
&lt;p>添加完成后可通过 &lt;code>nginx -t&lt;/code> 进行测试，无误后即可通过 &lt;code>nginx -s reload&lt;/code> 重载 Nginx：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nginx -t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nginx: configuration file /usr/local/nginx/conf/nginx.conf &lt;span class="nb">test&lt;/span> is successful
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nginx -s reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用已有网站">使用已有网站&lt;/h3>
&lt;p>若需要将证书部署至已有网站，则修改对应的配置文件即可，配置文件位于 &lt;code>/usr/local/nginx/conf/vhost/domian.com.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /usr/local/nginx/conf/vhost/domian.com.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>按照备注位置修改证书路径：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="s">[::]:80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="mi">443&lt;/span> &lt;span class="s">ssl&lt;/span> &lt;span class="s">http2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="s">[::]:443&lt;/span> &lt;span class="s">ssl&lt;/span> &lt;span class="s">http2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 证书文件的相对路径或绝对路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kn">ssl_certificate&lt;/span> &lt;span class="s">/usr/local/nginx/conf/ssl/domain.com.crt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 私钥文件的相对路径或绝对路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kn">ssl_certificate_key&lt;/span> &lt;span class="s">/usr/local/nginx/conf/ssl/domain.com.key&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_protocols&lt;/span> &lt;span class="s">TLSv1.2&lt;/span> &lt;span class="s">TLSv1.3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_ecdh_curve&lt;/span> &lt;span class="s">X25519:prime256v1:secp384r1:secp521r1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_ciphers&lt;/span> &lt;span class="s">ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_conf_command&lt;/span> &lt;span class="s">Ciphersuites&lt;/span> &lt;span class="s">TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_conf_command&lt;/span> &lt;span class="s">Options&lt;/span> &lt;span class="s">PrioritizeChaCha&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_prefer_server_ciphers&lt;/span> &lt;span class="no">on&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_session_timeout&lt;/span> &lt;span class="mi">10m&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_session_cache&lt;/span> &lt;span class="s">shared:SSL:10m&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_buffer_size&lt;/span> &lt;span class="mi">2k&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">add_header&lt;/span> &lt;span class="s">Strict-Transport-Security&lt;/span> &lt;span class="s">max-age=15768000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_stapling&lt;/span> &lt;span class="no">on&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">ssl_stapling_verify&lt;/span> &lt;span class="no">on&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改完成后可通过 &lt;code>nginx -t&lt;/code> 进行测试，无误后即可通过 &lt;code>nginx -s reload&lt;/code> 重载 Nginx：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nginx -t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nginx: configuration file /usr/local/nginx/conf/nginx.conf &lt;span class="nb">test&lt;/span> is successful
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nginx -s reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="caddy-操作">Caddy 操作&lt;/h3>
&lt;p>同样将 &lt;code>domian.com.key&lt;/code> 和 &lt;code>domian.com.crt&lt;/code> 上传至服务器，比如我上传到 &lt;code>/var/caddy/ssl&lt;/code> 目录下，然后对 &lt;code>Caddyfile&lt;/code> 进行修改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>按照下面进行更改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">log&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">output&lt;/span> &lt;span class="s">file&lt;/span> &lt;span class="s">/var/log/caddy/domain.com.log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">level&lt;/span> &lt;span class="s">error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/domain.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">handle_errors&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">rewrite&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="se">{err.status_code}&lt;/span>&lt;span class="s">.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">php_fastcgi&lt;/span> &lt;span class="s">unix//dev/shm/php-cgi.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 证书和密钥的 PEM 格式的文件绝对路径，注意中间空格
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">tls&lt;/span> &lt;span class="s">/path/to/domain.com.pem&lt;/span> &lt;span class="s">/path/to/domain.com.key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置完毕后，通过以下命令进行测试：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">caddy adapt --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>确认无误后重载配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">caddy reload --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若出现 &lt;code>ERR_SSL_PROTOCOL_ERROR&lt;/code>，可重载 Caddy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>以上就是 Nginx/Caddy 服务下安装部署 SSL 证书的详细过程，希望能对大家有所帮助。&lt;/p>
&lt;h3 id="参考资料">参考资料&lt;/h3>
&lt;ol>
&lt;li>&lt;a class="link" href="https://cloud.tencent.com/document/product/400/35244" target="_blank" rel="noopener"
>Nginx 服务器 SSL 证书安装部署
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>指定签发 SSL CA 机构</title><link>/archives/setca/</link><pubDate>Sun, 20 Mar 2022 09:32:18 +0800</pubDate><guid>/archives/setca/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前几天使用 Oneinstack 添加网站进行临时测试，在自动签发 SSL 时发现证书签发失败；找了很久尝试了很多解决方法，但是并没有作用。。。然后想有没有可能是因为在同一 IP 多次申请 SSL 证书然后被限制了；但是我并没有进行多次申请。。。不管怎么样还是更换一下 CA 机构看看能不能解决，没想竟然成功了；虽然没有找到问题的原因，但最终还是解决了。遂在此进行一个记录。&lt;/p>
&lt;h2 id="指定-ca-机构">指定 CA 机构&lt;/h2>
&lt;h3 id="服务器环境">服务器环境&lt;/h3>
&lt;p>我的服务器使用的是 Debian 10/11 ，Web 服务使用的是 Nginx/Caddy ；LNMP 环境由 Oneinstack 自动安装&lt;/p>
&lt;h3 id="nginx">Nginx&lt;/h3>
&lt;p>由于 Oneinstack 集成了 acme.sh ，所以直接更换 acme.sh 的默认 CA 即可（我之前的是 Let&amp;rsquo;s Encrypt ，现在换成 ZeroSSL ）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/.acme.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">acme.sh --set-default-ca --server zerossl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CA 机构：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">CA 机构&lt;/th>
&lt;th style="text-align:center">有效期&lt;/th>
&lt;th style="text-align:center">ECC&lt;/th>
&lt;th style="text-align:center">域名数&lt;/th>
&lt;th style="text-align:center">通配符&lt;/th>
&lt;th style="text-align:center">IPV4&lt;/th>
&lt;th style="text-align:center">IPV6&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">Let&amp;rsquo;s Encrypt&lt;/td>
&lt;td style="text-align:center">90&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">100&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">ZeroSSL&lt;/td>
&lt;td style="text-align:center">90&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">100&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Google&lt;/td>
&lt;td style="text-align:center">90&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">100&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Buypass&lt;/td>
&lt;td style="text-align:center">180&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">5&lt;/td>
&lt;td style="text-align:center">Paid&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">SSL.com&lt;/td>
&lt;td style="text-align:center">90&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">2&lt;/td>
&lt;td style="text-align:center">Paid&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;td style="text-align:center">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">HiCA&lt;/td>
&lt;td style="text-align:center">180&lt;/td>
&lt;td style="text-align:center">Paid&lt;/td>
&lt;td style="text-align:center">10 (1通配符)&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;td style="text-align:center">Yes&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>LNMP 一键安装包的话，可以使用上述方式指定默认 CA ，也可以在添加网站时手动选择 CA&lt;/p>
&lt;h3 id="caddy">Caddy&lt;/h3>
&lt;p>Caddy 比较简单，由于它是自动开启 HTTPS 的。在编辑 &lt;strong>Caddyfile&lt;/strong> 添加网站时，只需要填上域名，它就会自动签发证书：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者你也可以设置 &lt;code>tls&lt;/code> 邮箱，Caddy 会在签发证书遇到问题时自动更换 CA：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">your@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你需要指定 CA 机构为 ZeroSSL，你可以进行全局设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">acme_ca&lt;/span> &lt;span class="s">https://acme.zerossl.com/v2/DV90&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">email&lt;/span> &lt;span class="s">your@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者单独对某个网站进行设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">your@email.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">ca&lt;/span> &lt;span class="s">https://acme.zerossl.com/v2/DV90&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果要指定 CA 为 Let’s Encrypt，只需要将 &lt;code>https://acme.zerossl.com/v2/DV90&lt;/code> 更换为 &lt;code>https://acme-v02.api.letsencrypt.org/directory&lt;/code> 即可&lt;/p></description></item><item><title>使用 Caddy + MariaDB + PHP 架设 LCMP</title><link>/archives/lcmp/</link><pubDate>Sat, 05 Mar 2022 17:14:41 +0800</pubDate><guid>/archives/lcmp/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>以前一直使用的是 Hugo + Github + Vercel；即上传本地网站项目到 Github 然后通过 Vercel 进行自动部署以及发布网站。一开始还好，但是到后面就感觉比较麻烦了；每次更新文章或者后期文章有修改的话就需要重新上传部署；所以后面就改成了 Typecho。而最近又开始折腾起了 Caddy，需要搭建 LCMP 环境，所以在这里进行一个记录，避免以后踩坑。&lt;/p>
&lt;hr>
&lt;h2 id="安装及配置">安装及配置&lt;/h2>
&lt;h3 id="安装caddy">安装Caddy&lt;/h3>
&lt;p>我使用的是 Debian 10 系统&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install -y debian-keyring debian-archive-keyring apt-transport-https
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -1sLf &lt;span class="s1">&amp;#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -1sLf &lt;span class="s1">&amp;#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> tee /etc/apt/sources.list.d/caddy-stable.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装-mariadb">安装 MariaDB&lt;/h3>
&lt;p>可以使用 Oneinstack 自动安装，参考：&lt;a class="link" href="/archives/oneinstack" >一键安装 LNMP 及开设站点
&lt;/a>&lt;/p>
&lt;p>这里主要讲讲通过 &lt;code>apt&lt;/code> 包管理器安装&lt;/p>
&lt;p>首先安装 MariaDB：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y mariadb-server mariadb-common mariadb-client
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>MySQL&lt;/strong> 或者 &lt;strong>MariaDB&lt;/strong> 都行，看个人选择进行安装，两个差别不大&lt;/p>
&lt;/blockquote>
&lt;p>按照下面简单修改下配置，文件位于 &lt;code>/etc/mysql/mariadb.conf.d/50-server.cnf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>client&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default-character-set &lt;span class="o">=&lt;/span> utf8mb4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>mysqld&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">innodb_buffer_pool_size&lt;/span> &lt;span class="o">=&lt;/span> 64M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">max_allowed_packet&lt;/span> &lt;span class="o">=&lt;/span> 500M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">net_read_timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3600&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">net_write_timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">3600&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>mariadb&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">character-set-server &lt;span class="o">=&lt;/span> utf8mb4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>client-mariadb&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default-character-set &lt;span class="o">=&lt;/span> utf8mb4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动 MariaDB 并进行安全设置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl start mariadb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysql_secure_installation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>过程如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输入初始密码，回车即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter current password &lt;span class="k">for&lt;/span> root &lt;span class="o">(&lt;/span>enter &lt;span class="k">for&lt;/span> none&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OK, successfully used password, moving on...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Set root password? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">New password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Re-enter new password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password updated successfully!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reloading privilege tables..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... Success!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 移除匿名用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Remove anonymous users? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... Success!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 是否禁止非本地登录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disallow root login remotely? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> n
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... skipping.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 是否移除测试数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Remove &lt;span class="nb">test&lt;/span> database and access to it? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Dropping &lt;span class="nb">test&lt;/span> database...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... Success!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Removing privileges on &lt;span class="nb">test&lt;/span> database...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... Success!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 是否重新刷新权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reload privilege tables now? &lt;span class="o">[&lt;/span>Y/n&lt;span class="o">]&lt;/span> y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ... Success!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cleaning up...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Thanks &lt;span class="k">for&lt;/span> using MariaDB!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装-php">安装 PHP&lt;/h3>
&lt;p>通过 &lt;code>apt list php*&lt;/code> 可以看到 Debian10 下 PHP 版本为 7.3，然后来安装 PHP 及其组件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y php7.3 php7.3-bcmath php7.3-bz2 php7.3-cgi php7.3-cli php7.3-common php7.3-curl php7.3-dba php7.3-enchant php7.3-fpm php7.3-gd php7.3-gmp php7.3-imap php7.3-interbase php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-odbc php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-readline php7.3-recode php7.3-snmp php7.3-soap php7.3-sqlite3 php7.3-sybase php7.3-tidy php7.3-xml php7.3-xmlrpc php7.3-xsl php7.3-zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>按照下面简单修改下配置文件，位于 &lt;code>/etc/php/7.3/fpm/pool.d/www.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">user&lt;/span> &lt;span class="o">=&lt;/span> caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">group&lt;/span> &lt;span class="o">=&lt;/span> caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listen.owner &lt;span class="o">=&lt;/span> caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listen.group &lt;span class="o">=&lt;/span> caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listen.acl_users &lt;span class="o">=&lt;/span> caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listen.allowed_clients &lt;span class="o">=&lt;/span> 127.0.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_children &lt;span class="o">=&lt;/span> &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.start_servers &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.min_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pm.max_spare_servers &lt;span class="o">=&lt;/span> &lt;span class="m">35&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">slowlog&lt;/span> &lt;span class="o">=&lt;/span> /var/log/www-slow.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">php_admin_value&lt;span class="o">[&lt;/span>error_log&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> /var/log/www-error.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">php_admin_flag&lt;span class="o">[&lt;/span>log_errors&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最后添加如下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">php_value&lt;span class="o">[&lt;/span>session.save_handler&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">php_value&lt;span class="o">[&lt;/span>session.save_path&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> /var/lib/php/session
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">php_value&lt;span class="o">[&lt;/span>soap.wsdl_cache_dir&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> /var/lib/php/wsdlcache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">php_value&lt;span class="o">[&lt;/span>opcache.file_cache&lt;span class="o">]&lt;/span> &lt;span class="o">=&lt;/span> /var/lib/php/opcache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后按照下面简单修改下 &lt;code>php.ini&lt;/code>，位于 &lt;code>/etc/php/7.3/fpm/php.ini&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">disable_functions&lt;/span> &lt;span class="o">=&lt;/span> passthru,exec,shell_exec,system,chroot,chgrp,chown,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">max_execution_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">max_input_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">post_max_size&lt;/span> &lt;span class="o">=&lt;/span> 128M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">upload_max_filesize&lt;/span> &lt;span class="o">=&lt;/span> 128M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">expose_php&lt;/span> &lt;span class="o">=&lt;/span> Off
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">short_open_tag&lt;/span> &lt;span class="o">=&lt;/span> On
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mysqli.default_socket &lt;span class="o">=&lt;/span> /run/mysqld/mysqld.sock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pdo_mysql.default_socket &lt;span class="o">=&lt;/span> /run/mysqld/mysqld.sock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置下权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chown caddy:caddy /var/lib/php/session
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown caddy:caddy /var/lib/php/wsdlcache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown caddy:caddy /var/lib/php/opcache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="caddy-配置">Caddy 配置&lt;/h3>
&lt;p>修改 Caddyfile 配置，拿不准的可以下载下来进行编辑，然后再上传，文件路径为 &lt;strong>/etc/caddy/Caddyfile&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我的配置如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddy" data-lang="caddy">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">example.com&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 网站根目录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/xx&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # Typecho 伪静态，建议安装完程序后写入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nd">@key1&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">not&lt;/span> &lt;span class="k">file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">path_regexp&lt;/span> &lt;span class="s">key1&lt;/span> &lt;span class="s">&amp;#39;(.*)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">rewrite&lt;/span> &lt;span class="nd">@key1&lt;/span> &lt;span class="s">/index.php&lt;/span>&lt;span class="se">{re.key1.1}&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 开启 gzip
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 错误页面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">handle_errors&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">rewrite&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="se">{err.status_code}&lt;/span>&lt;span class="s">.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 使用 unix socket 通信
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">php_fastcgi&lt;/span> &lt;span class="nd">/run/php/php7.3-fpm.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 设置 TLS
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">tls&lt;/span> &lt;span class="s">mail@example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>若使用 Oneinstack 自动安装方式，php_fastcgi 设置为 &lt;code>unix//dev/shm/php-cgi.sock&lt;/code>
伪静态可以在网上查找对应程序的伪静态规则，然后通过 &lt;a class="link" href="https://www.toolnb.com/tools/rewriteTools.html" target="_blank" rel="noopener"
>伪静态转换工具
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a> 进行转换，伪静态规则建议等上传并安装完程序后再写入到配置中&lt;/p>
&lt;/blockquote>
&lt;p>配置完成后使用 &lt;code>caddy adapt&lt;/code> 命令进行检查：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">caddy adapt --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>确认无报错后，重载 Caddyfile ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">caddy reload --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启 Caddy 并添加自启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>注意！网站根目录权限应遵循：&lt;/p>
&lt;p>文件 644 文件夹 755 权限用户和用户组 caddy ，其余文档 777 权限是不正常的
如出现文件权限问题时，请执行下面 3 条命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chown -R caddy:caddy /data/www/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find /data/www/ -type d -exec chmod &lt;span class="m">755&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="se">\;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find /data/www/ -type f -exec chmod &lt;span class="m">644&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="se">\;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>LNMP 一键安装包开设网站</title><link>/archives/lnmporg/</link><pubDate>Fri, 25 Feb 2022 17:14:41 +0800</pubDate><guid>/archives/lnmporg/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;ul>
&lt;li>LNMP一键安装包是什么&lt;/li>
&lt;/ul>
&lt;p>LNMP一键安装包是一个用 Linux Shell 编写的可以为 Linux VPS 或独立主机安装 LNMP(Nginx/MySQL/PHP)、LNMPA(Nginx/MySQL/PHP/Apache)、LAMP(Apache/MySQL/PHP) 生产环境的 Shell 程序。&lt;/p>
&lt;ul>
&lt;li>我们为什么需要它?&lt;/li>
&lt;/ul>
&lt;p>编译安装需要输入大量的命令，如果是配置生产环境需要耗费大量的时间。
不会 Linux 的站长或 Linux 新手想使用 Linux 作为生产环境……&lt;/p>
&lt;ul>
&lt;li>它有什么优势和功能?&lt;/li>
&lt;/ul>
&lt;p>无需一个一个的输入命令，无需值守，编译安装优化编译参数，提高性能，解决不必要的软件间依赖，特别针对配置自动优化。&lt;/p>
&lt;hr>
&lt;h2 id="安装教程">安装教程&lt;/h2>
&lt;h3 id="说明">说明&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://lnmp.org" target="_blank" rel="noopener"
>LNMP 一键安装包官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注意事项&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>需要 5GB 以上可用空间，MySQL 5.7,MariaDB 10 至少 9GB 剩余空间, MySQL8.0 最新版至少 25GB 以上.&lt;/p>
&lt;p>需要 128MB 以上内存( 128MB 小内存 VPS , Xen 需有 SWAP,OpenVZ 至少要有 128MB 以上的 vSWAP 或突发内存)，注意小内存请勿使用 64 位系统！&lt;/p>
&lt;p>&lt;strong>安装 MySQL 5.6 或 5.7 及 MariaDB 10 必须 1G 以上内存，更高版本至少要 2G 内存!。&lt;/strong>
&lt;strong>安装 PHP 7 及以上版本必须 1G 以上内存!。&lt;/strong>&lt;/p>
&lt;p>不要在非常新的 Linux 发行版上安装旧的 PHP/MySQL 版本，同理不要在旧的 Linux 发行版上安装非常新的PHP/MySQL 版本。&lt;/p>
&lt;p>CentOS 6、8 请用 lnmp 1.9+ 版本进行安装！&lt;/p>
&lt;p>Ubuntu 18+,Debian 9+,Mint 19+,Deepin 15.7+ 及所有新的 Linux 发行版只能使用 1.7+ 进行安装！&lt;/p>
&lt;p>PHP 7.1.* 以下版本不支持 Ubuntu 19+、Debian 10+ 等等非常新的 Linux 发行版！&lt;/p>
&lt;p>阿里云 Ubuntu 14.04 系统模版有问题不要用！！！&lt;/p>
&lt;p>PHP 7.4 升级或安装必须 CentOS 7+,Debian 8+,Ubuntu 16.04+ 且必须使用 1.7+ ！！！&lt;/p>
&lt;p>MySQL 8.0.23 以下版本升级或安装必须 CentOS 8+,Debian 9+,Ubuntu 16.04+ 且必须使用 1.7+ ！！！&lt;/p>
&lt;p>MySQL 8.0.24 以上版本升级或安装必须 Debian 11+,Ubuntu 20.04+,Fedora 33+ 且必须使用 1.8+ ！！！&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="安装步骤">安装步骤&lt;/h3>
&lt;ol>
&lt;li>使用 SSH 工具登录 VPS 或服务器&lt;/li>
&lt;/ol>
&lt;p>为防止本地网络变化等不确定因素导致安装终止，先键入命令创建一个作业窗口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">screen -S lnmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果提示 &lt;code>screen: command not found&lt;/code> 命令不存在可以执行： &lt;code>yum install screen&lt;/code> 或 &lt;code>apt-get install screen&lt;/code> 安装&lt;/p>
&lt;hr>
&lt;ol start="2">
&lt;li>下载并安装 LNMP 一键安装包&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget http://soft.vpser.net/lnmp/lnmp1.9.tar.gz -cO lnmp1.9.tar.gz &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> tar zxf lnmp1.9.tar.gz &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> lnmp1.9 &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ./install.sh lnmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>如需要安装 LNMPA 或 LAMP ，将 &lt;code>./install.sh&lt;/code> 后面的参数 &lt;code>lnmp&lt;/code> 替换为 &lt;code>lnmpa&lt;/code> 或 &lt;code>lamp&lt;/code> 即可。同时也支持单独安装 Nginx 或数据库，命令为 &lt;code> ./install.sh nginx&lt;/code> 或 &lt;code>./install.sh db&lt;/code>
如需更改网站和数据库目录、自定义 Nginx 参数、 PHP 参数模块是否安装、开启 lua 等需在运行 &lt;code> ./install.sh&lt;/code> 命令前修改安装包目录下的 lnmp.conf 文件，详细可以查看 lnmp.conf 文件参数说明。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;ol start="3">
&lt;li>安装步骤&lt;/li>
&lt;/ol>
&lt;p>运行上述命令后即可开始安装，目前提供了较多的 MySQL、MariaDB 版本和不安装数据库的选项，&lt;strong>需要注意的是 MySQL 5.6,5.7 及 MariaDB 10 必须在 1G 以上内存的更高配置上才能选择！&lt;/strong>&lt;/p>
&lt;p>输入对应 MySQL 或 MariaDB 版本前面的序号，回车进入下一步：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/1.png"
width="681"
height="442"
srcset="/archives/lnmporg/1_hu53c5b26ac56c1988f48e53cd584b8bad_47139_480x0_resize_box_3.png 480w, /archives/lnmporg/1_hu53c5b26ac56c1988f48e53cd584b8bad_47139_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 数据库版本选择"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="369px"
>&lt;/p>
&lt;blockquote>
&lt;p>如果选择 MySQL 5.7、8.0 且是 x86 或 x86_64 架构会提示： &lt;code>Using Generic Binaries [y/n]&lt;/code> 这一步是提示是否使用二进制安装，输入 y 为使用二进制安装，输入 n 为使用源码编译安装。&lt;/p>
&lt;/blockquote>
&lt;p>设置 MySQL 的 root 密码（直接回车将会设置为 lnmp.org#随机数字）如果输入有错误需要删除时，可以按住 Ctrl 再按 Backspace 键进行删除(个别情况下是只需按 Backspace 键)。输入后回车进入下一步，如图：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/2.png"
width="547"
height="146"
srcset="/archives/lnmporg/2_hu74c055bd132385d9deaf85d27d86d554_13291_480x0_resize_box_3.png 480w, /archives/lnmporg/2_hu74c055bd132385d9deaf85d27d86d554_13291_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 设置数据库密码"
class="gallery-image"
data-flex-grow="374"
data-flex-basis="899px"
>&lt;/p>
&lt;blockquote>
&lt;p>询问是否需要启用 MySQL InnoDB，InnoDB 引擎默认为开启，一般建议开启，直接回车或输入 y ，如果确定确实不需要该引擎可以输入 n&lt;/p>
&lt;/blockquote>
&lt;p>输入要选择的 PHP 版本的序号，回车进入下一步，&lt;strong>注意：选择 PHP 7+ 版本时需要自行确认 PHP 版本是否与自己的程序兼容&lt;/strong>：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/3.png"
width="576"
height="430"
srcset="/archives/lnmporg/3_hue4971f2403331b1e7613c097c65437da_39755_480x0_resize_box_3.png 480w, /archives/lnmporg/3_hue4971f2403331b1e7613c097c65437da_39755_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 选择 PHP 版本"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="321px"
>&lt;/p>
&lt;blockquote>
&lt;p>选择是否安装内存优化：可以选择不安装、 Jemalloc 或 TCmalloc ，输入对应序号回车，直接回车为默认为不安装。&lt;/p>
&lt;/blockquote>
&lt;p>进行完上述操作后，会提示 &lt;code>Press any key to install...or Press Ctrl+c to cancel&lt;/code> ，按回车键确认开始安装；LNMP 脚本就会自动安装编译 Nginx、MySQL、PHP、phpMyAdmin 等软件及相关的组件。&lt;/p>
&lt;p>安装时间可能会几十分钟到几个小时不等，主要是机器的配置网速等原因会造成影响。&lt;/p>
&lt;ul>
&lt;li>LNMP 一键安装包编译过程需要大量的时间，所以需要耐心等待。如果网络掉线，可以重新连接 SSH，再执行 &lt;code>screen -r lnmp&lt;/code> 就会看到你的 lnmp 安装进程；如果没恢复窗口，可以输入 &lt;code>screen -ls&lt;/code> 列出窗口进程，然后输入 &lt;code>screen -D -r XX(进程编号)&lt;/code> 进行恢复：&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="/archives/lnmporg/4.png"
width="546"
height="98"
srcset="/archives/lnmporg/4_hub14abd7083affe68c41e65d640365434_9873_480x0_resize_box_3.png 480w, /archives/lnmporg/4_hub14abd7083affe68c41e65d640365434_9873_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 窗口恢复"
class="gallery-image"
data-flex-grow="557"
data-flex-basis="1337px"
>&lt;/p>
&lt;hr>
&lt;ol>
&lt;li>完成安装&lt;/li>
&lt;/ol>
&lt;p>完成安装后，会显示如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">==============================&lt;/span> Check &lt;span class="nv">install&lt;/span> &lt;span class="o">==============================&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Checking ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Nginx: OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MySQL: OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PHP: OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PHP-FPM: OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Clean Web Server src directory...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/lnmporg/5.png"
width="935"
height="925"
srcset="/archives/lnmporg/5_hu551a874f02a57c843724fad6a73d62df_101114_480x0_resize_box_3.png 480w, /archives/lnmporg/5_hu551a874f02a57c843724fad6a73d62df_101114_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 安装完成"
class="gallery-image"
data-flex-grow="101"
data-flex-basis="242px"
>&lt;/p>
&lt;blockquote>
&lt;p>Nginx、MySQL、PHP 都是 running，80和3306端口都存在，并提示安装使用的时间及 Install lnmp V1.9 completed! enjoy it. 的话，说明已经安装成功。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;ol>
&lt;li>安装 PHP 组件&lt;/li>
&lt;/ol>
&lt;p>安装完 LNMP 后可以按自己的需求安装 eAccelerator、xcache、memcached、imageMagick、ionCube、redis、opcache。这几个 PHP 缓存、加速类的扩展不一定对每个人都能用，自己按需要安装，不用装多个同类的扩展，可能会导致出错。&lt;/p>
&lt;p>这些扩展和组件均采用 &lt;code>./addons.sh&lt;/code> 进行安装；基本用法说明：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./addons.sh &lt;span class="o">{&lt;/span>install&lt;span class="p">|&lt;/span>uninstall&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>eaccelerator&lt;span class="p">|&lt;/span>xcache&lt;span class="p">|&lt;/span>memcached&lt;span class="p">|&lt;/span>opcache&lt;span class="p">|&lt;/span>redis&lt;span class="p">|&lt;/span>imagemagick&lt;span class="p">|&lt;/span>ioncube&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如安装常用的 Memcached、Redis、imageMagick 命令如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./addons.sh install memcached &lt;span class="c1"># 安装 Memcached&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./addons.sh install redis &lt;span class="c1"># 安装 Redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./addons.sh install imagemagick &lt;span class="c1"># 安装 imageMagick&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以安装 Memcached 为例，演示如下：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/6.png"
width="604"
height="277"
srcset="/archives/lnmporg/6_hu2f0ad3f599b0276e3a330b318a342112_22154_480x0_resize_box_3.png 480w, /archives/lnmporg/6_hu2f0ad3f599b0276e3a330b318a342112_22154_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 组件安装"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="523px"
>&lt;/p>
&lt;p>安装完成提示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Starting Memcached...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Starting memcached: &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">======&lt;/span> Memcached install &lt;span class="nv">completed&lt;/span> &lt;span class="o">======&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Memcached installed successfully, enjoy it!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="网站管理">网站管理&lt;/h2>
&lt;h3 id="添加删除网站虚拟主机">添加/删除网站(虚拟主机)&lt;/h3>
&lt;p>虚拟主机管理基本命令介绍：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">lnmp vhost add &lt;span class="c1"># 添加网站&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lnmp vhost list &lt;span class="c1"># 网站列表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lnmp vhost del &lt;span class="c1"># 删除网站&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行：&lt;code>lnmp vhost add&lt;/code> 并按照下面操作添加网站（点击放大）：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/7.png"
width="973"
height="738"
srcset="/archives/lnmporg/7_hu66e42baf4437361e061814b69d78de49_157767_480x0_resize_box_3.png 480w, /archives/lnmporg/7_hu66e42baf4437361e061814b69d78de49_157767_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 添加网站"
class="gallery-image"
data-flex-grow="131"
data-flex-basis="316px"
>&lt;/p>
&lt;p>最后按下任意键，即可开始添加网站了，添加完成后提示如下：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/8.png"
width="637"
height="331"
srcset="/archives/lnmporg/8_hub60c3d595f8e17131ac4747ae5d188c5_47635_480x0_resize_box_3.png 480w, /archives/lnmporg/8_hub60c3d595f8e17131ac4747ae5d188c5_47635_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 完成提示"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;p>网站架设完成&lt;/p>
&lt;hr>
&lt;h3 id="上传程序">上传程序&lt;/h3>
&lt;p>直接使用 SFTP 软件登陆 root 账户进行上传，上传完成后设置相关权限即可。&lt;/p>
&lt;blockquote>
&lt;p>上传网站后建议执行：&lt;code>chown www:www -R /path/to/dir&lt;/code> 对网站目录进行权限设置，&lt;code>/path/to/dir&lt;/code> 替换为你网站目录。&lt;/p>
&lt;/blockquote>
&lt;p>如果需要单独的 FTP 账户进行上传，那么就安装 FTP 服务器，并创建 FTP 用户进行上传&lt;/p>
&lt;h4 id="安装-pureftpd">安装 pureftpd&lt;/h4>
&lt;p>进入 LNMP 解压缩后的文件夹，输入 &lt;code>./pureftpd.sh&lt;/code> 会提示按任意键安装：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/9.png"
width="505"
height="208"
srcset="/archives/lnmporg/9_hu15bb82c3688b4cf18e15bc88837efd64_12663_480x0_resize_box_3.png 480w, /archives/lnmporg/9_hu15bb82c3688b4cf18e15bc88837efd64_12663_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 安装 FTP"
class="gallery-image"
data-flex-grow="242"
data-flex-basis="582px"
>&lt;/p>
&lt;p>按下任意键，等待安装完成，出现如下提示：&lt;/p>
&lt;p>&lt;img src="/archives/lnmporg/10.png"
width="593"
height="143"
srcset="/archives/lnmporg/10_hu0fae7493f4875ba5df3815f8a1d0aa10_11824_480x0_resize_box_3.png 480w, /archives/lnmporg/10_hu0fae7493f4875ba5df3815f8a1d0aa10_11824_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 完成提示"
class="gallery-image"
data-flex-grow="414"
data-flex-basis="995px"
>&lt;/p>
&lt;ul>
&lt;li>FTP命令&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">lnmp ftp add &lt;span class="c1"># 添加FTP用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lnmp ftp del &lt;span class="c1"># 删除FTP用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lnmp ftp edit &lt;span class="c1"># 编辑FTP用户&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>LNMP 一键安装包和 Oneinstack之间大差不差，只是一些细节之间的不同；可以按照自己的喜好进行选择，但它们都更适合有一定 Linux 使用基础的人，新手的话还是更建议使用可视化面板。&lt;/p>
&lt;p>最后贴上 LNMP 一键安装包详细的使用说明：&lt;a class="link" href="https://lnmp.org/category/faq/" target="_blank" rel="noopener"
>LNMP 一键安装包常见问题
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p></description></item><item><title>Oneinstack 一键安装 LNMP 及开设站点</title><link>/archives/oneinstack/</link><pubDate>Wed, 23 Feb 2022 17:14:41 +0800</pubDate><guid>/archives/oneinstack/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;h3 id="什么是-lnmp">什么是 LNMP&lt;/h3>
&lt;p>LNMP代表的就是：Linux 系统下 Nginx+MySQL+PHP 这种网站服务器架构。
Linux 是一类 Unix 计算机操作系统的统称，是目前最流行的免费操作系统。代表版本有：debian、centos、ubuntu、fedora、gentoo 等。
Nginx 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。
Mysql 是一个小型关系型数据库管理系统。
PHP 是一种在服务器端执行的嵌入 HTML 文档的脚本语言。
这四种软件均为免费开源软件，组合到一起，成为一个免费、高效、扩展性强的网站服务系统。&lt;/p>
&lt;hr>
&lt;h2 id="安装">安装&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://oneinstack.com" target="_blank" rel="noopener"
>Oneinstack 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>OneinStack包含以下组合：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>lnmp（Linux + Nginx+ MySQL/MongoDB+ PHP）&lt;/li>
&lt;li>lamp（Linux + Apache+ MySQL/MongoDB+ PHP）&lt;/li>
&lt;li>lnmpa（Linux + Nginx+ MySQL/MongoDB+ PHP+ Apache）：Nginx 处理静态，Apache 处理动态 PHP&lt;/li>
&lt;li>lnmt（Linux + Nginx+ MySQL/MongoDB+ Tomcat）：Nginx 处理静态，Tomcat（JDK）处理 JAVA&lt;/li>
&lt;li>lnpp（Linux + Nginx+ PostgreSQL+ PHP）&lt;/li>
&lt;li>lapp（Linux + Apache+ PostgreSQL+ PHP）&lt;/li>
&lt;li>lnmh（Linux + Nginx+ MySQL+ HHVM）&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>安装说明&lt;/li>
&lt;/ul>
&lt;p>点击链接进入 OneinStack 官网，点击自动安装；然后选择自己所需要的组合，并视情况选择组件，然后就会生成相应的一键安装命令：&lt;/p>
&lt;p>&lt;img src="/archives/oneinstack/instack1.jpg"
width="1256"
height="862"
srcset="/archives/oneinstack/instack1_hu035da576ecc982c8349711e160f8805b_140951_480x0_resize_q75_box.jpg 480w, /archives/oneinstack/instack1_hu035da576ecc982c8349711e160f8805b_140951_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="◎ 选择stack"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="349px"
>&lt;/p>
&lt;p>为防止本地网络变化等不确定因素导致安装终止，先键入命令创建一个作业窗口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">screen -S lnmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>若报错先安装 &lt;code>screen&lt;/code> ：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get install -y screen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后复制 OneinStack 一键安装命令粘贴至终端，接下来就是耐心等待，安装时间视你所选组件的多少以及服务器配置而定。&lt;/p>
&lt;p>安装完成后提示安装时长和组件路径：&lt;/p>
&lt;p>&lt;img src="/archives/oneinstack/instack2.jpg"
width="467"
height="361"
srcset="/archives/oneinstack/instack2_hue16e9cd24bcc9ecbb5a7cc89073af203_198249_480x0_resize_q75_box.jpg 480w, /archives/oneinstack/instack2_hue16e9cd24bcc9ecbb5a7cc89073af203_198249_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="◎ 完成提示"
class="gallery-image"
data-flex-grow="129"
data-flex-basis="310px"
>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">####################Congratulations########################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total OneinStack Install Time: &lt;span class="m">28&lt;/span> minutes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Nginx install dir: /usr/local/nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database install dir: /usr/local/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database data dir: /data/mysql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database user: root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Database password: oneinstack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PHP install dir: /usr/local/php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Opcache Control Panel URL: http://192.168.0.160/ocp.php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Pure-FTPd install dir: /usr/local/pureftpd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create FTP virtual script: ./pureftpd_vhost.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">phpMyAdmin dir: /data/wwwroot/default/phpMyAdmin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">phpMyAdmin Control Panel URL: http://192.168.0.160/phpMyAdmin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis install dir: /usr/local/redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memcached install dir: /usr/local/memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Index URL: http://192.168.0.160/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时键入 &lt;code>reboot&lt;/code> 命令，重启 VPS。&lt;/p>
&lt;p>至此 LNMP 环境安装完成。&lt;/p>
&lt;hr>
&lt;h2 id="开设站点">开设站点&lt;/h2>
&lt;h3 id="安装检查">安装检查&lt;/h3>
&lt;p>首先打开浏览器，进入 Oneinstack 的默认首页，即服务器 &lt;code>IP&lt;/code> 地址，就可以看到默认页面：&lt;/p>
&lt;p>&lt;img src="/archives/oneinstack/instack3.jpg"
width="854"
height="588"
srcset="/archives/oneinstack/instack3_huad7be3b27b9d88991502e22e6533f71c_79881_480x0_resize_q75_box.jpg 480w, /archives/oneinstack/instack3_huad7be3b27b9d88991502e22e6533f71c_79881_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="◎ 默认页面"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="348px"
>&lt;/p>
&lt;p>到这说明已经成功搭建 Lnmp&lt;/p>
&lt;hr>
&lt;h3 id="创建虚拟主机">创建虚拟主机&lt;/h3>
&lt;p>键入下面命令，添加虚拟主机并绑定域名。&lt;/p>
&lt;blockquote>
&lt;p>注意域名应该提前解析至你的主机IP&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /root/oneinstack/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./vhost.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>流程如下：&lt;/p>
&lt;p>&lt;img src="/archives/oneinstack/instack4.png"
width="1608"
height="2844"
srcset="/archives/oneinstack/instack4_hu6dce73c6561079d23c31967f0c5803d2_388325_480x0_resize_box_3.png 480w, /archives/oneinstack/instack4_hu6dce73c6561079d23c31967f0c5803d2_388325_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 添加网站"
class="gallery-image"
data-flex-grow="56"
data-flex-basis="135px"
>&lt;/p>
&lt;hr>
&lt;h3 id="创建mysql数据库">创建MySQL数据库&lt;/h3>
&lt;p>Oneinstack 提供 phpMyAdmin 在线管理 Mysql；打开浏览器，输入 &lt;code>ip/phpMyAdmin&lt;/code> 登录到 phpMyAdmin：&lt;/p>
&lt;p>&lt;img src="/archives/oneinstack/instack5.jpg"
width="776"
height="462"
srcset="/archives/oneinstack/instack5_hu9b9c6984803e3756aac3b523d6219af1_55110_480x0_resize_q75_box.jpg 480w, /archives/oneinstack/instack5_hu9b9c6984803e3756aac3b523d6219af1_55110_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="◎ phpMyAdmin"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="403px"
>&lt;/p>
&lt;p>然后点击账户 &amp;gt; 新建用户账户，新增数据库与用户，并确认执行：&lt;/p>
&lt;p>&lt;img src="/archives/oneinstack/instack6.jpg"
width="676"
height="592"
srcset="/archives/oneinstack/instack6_hud8ca3252d9bb6917c3e1fbcb0c2feb2a_73628_480x0_resize_q75_box.jpg 480w, /archives/oneinstack/instack6_hud8ca3252d9bb6917c3e1fbcb0c2feb2a_73628_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="◎ 创建用户与数据库"
class="gallery-image"
data-flex-grow="114"
data-flex-basis="274px"
>&lt;/p>
&lt;p>创建完虚拟主机以及数据库后就可以上传程序并进行安装了&lt;/p>
&lt;hr>
&lt;h2 id="扩展配置">扩展配置&lt;/h2>
&lt;h3 id="添加附加组件">添加附加组件&lt;/h3>
&lt;p>如果之前没有安装组件，后续补充安装，统一入口为 &lt;code>./install.sh&lt;/code> ，详细如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#######################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># OneinStack for CentOS/RedHat 7+ Debian 9+ and Ubuntu 16+ #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For more information please visit https://oneinstack.com #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#######################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">version: 2.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">updated date: 2022-09-03
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Usage: ./install.sh &lt;span class="nb">command&lt;/span> ...&lt;span class="o">[&lt;/span>parameters&lt;span class="o">]&lt;/span>....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --help, -h Show this &lt;span class="nb">help&lt;/span> message, More: https://oneinstack.com/auto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --version, -v Show version info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --nginx_option &lt;span class="o">[&lt;/span>1-3&lt;span class="o">]&lt;/span> Install Nginx server version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --apache Install Apache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --apache_mode_option &lt;span class="o">[&lt;/span>1-2&lt;span class="o">]&lt;/span> Apache2.4 mode, 1&lt;span class="o">(&lt;/span>default&lt;span class="o">)&lt;/span>: php-fpm, 2: mod_php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --apache_mpm_option &lt;span class="o">[&lt;/span>1-3&lt;span class="o">]&lt;/span> Apache2.4 MPM, 1&lt;span class="o">(&lt;/span>default&lt;span class="o">)&lt;/span>: event, 2: prefork, 3: worker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --php_option &lt;span class="o">[&lt;/span>1-11&lt;span class="o">]&lt;/span> Install PHP version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --mphp_ver &lt;span class="o">[&lt;/span>53~81&lt;span class="o">]&lt;/span> Install another PHP version &lt;span class="o">(&lt;/span>PATH: /usr/local/php&lt;span class="si">${&lt;/span>&lt;span class="nv">mphp_ver&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --mphp_addons Only install another PHP addons
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --phpcache_option &lt;span class="o">[&lt;/span>1-4&lt;span class="o">]&lt;/span> Install PHP opcode cache, default: &lt;span class="m">1&lt;/span> opcache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --php_extensions &lt;span class="o">[&lt;/span>ext name&lt;span class="o">]&lt;/span> Install PHP extensions, include zendguardloader,ioncube,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sourceguardian,imagick,gmagick,fileinfo,imap,ldap,calendar,phalcon,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> yaf,yar,redis,memcached,memcache,mongodb,swoole,xdebug
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --nodejs Install Nodejs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --tomcat_option &lt;span class="o">[&lt;/span>1-4&lt;span class="o">]&lt;/span> Install Tomcat version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --jdk_option &lt;span class="o">[&lt;/span>1-2&lt;span class="o">]&lt;/span> Install JDK version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --db_option &lt;span class="o">[&lt;/span>1-14&lt;span class="o">]&lt;/span> Install DB version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --dbinstallmethod &lt;span class="o">[&lt;/span>1-2&lt;span class="o">]&lt;/span> DB install method, default: &lt;span class="m">1&lt;/span> binary install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --dbrootpwd &lt;span class="o">[&lt;/span>password&lt;span class="o">]&lt;/span> DB super password
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --pureftpd Install Pure-Ftpd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --redis Install Redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --memcached Install Memcached
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --phpmyadmin Install phpMyAdmin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --python Install Python &lt;span class="o">(&lt;/span>PATH: /usr/local/python&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --ssh_port &lt;span class="o">[&lt;/span>No.&lt;span class="o">]&lt;/span> SSH port
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --iptables Enable iptables
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --reboot Restart the server after installation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>如之前没有安装 &lt;code>php redis&lt;/code> 以及 &lt;code>imagick&lt;/code> 扩展，补充安装命令：
&lt;code>./install.sh --php_extensions redis,imagick&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="删除虚拟主机">删除虚拟主机&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /root/oneinstack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./vhost.sh --del
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/oneinstack/instack7.png"
width="1608"
height="1345"
srcset="/archives/oneinstack/instack7_hu62aa251923d55e408fa479b2b147caf2_180032_480x0_resize_box_3.png 480w, /archives/oneinstack/instack7_hu62aa251923d55e408fa479b2b147caf2_180032_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 删除网站"
class="gallery-image"
data-flex-grow="119"
data-flex-basis="286px"
>&lt;/p>
&lt;hr>
&lt;h3 id="管理-ftp-账号">管理 FTP 账号&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /root/oneinstack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./pureftpd_vhost.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/oneinstack/instack8.png"
width="1560"
height="2325"
srcset="/archives/oneinstack/instack8_hud678b1f709aa631f8f69f32817cdee12_134303_480x0_resize_box_3.png 480w, /archives/oneinstack/instack8_hud678b1f709aa631f8f69f32817cdee12_134303_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ FTP 管理"
class="gallery-image"
data-flex-grow="67"
data-flex-basis="161px"
>&lt;/p>
&lt;hr>
&lt;h3 id="备份管理">备份管理&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /root/oneinstack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./backup_setup.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/archives/oneinstack/instack9.png"
width="1934"
height="1586"
srcset="/archives/oneinstack/instack9_hu5eed4b3f76dde9b5faf7ee7451870f38_121215_480x0_resize_box_3.png 480w, /archives/oneinstack/instack9_hu5eed4b3f76dde9b5faf7ee7451870f38_121215_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 备份管理"
class="gallery-image"
data-flex-grow="121"
data-flex-basis="292px"
>&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>Oneinstack 是国内优秀的 LNMP 和 LAMP 生产环境的 Shell 程序，Oneinstack 最大的问题就是需要懂得一点Linux 知识，Oneinstack 自带了很多常用的静态规则，但碰到一些需要自定义的规则时就麻烦了。&lt;/p>
&lt;p>最后贴上一些基本使用手册： &lt;a class="link" href="https://oneinstack.com/install/" target="_blank" rel="noopener"
>Oneinstack基本使用手册
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p></description></item><item><title>用 Caddy2 搭建静态页面站点</title><link>/archives/caddy/</link><pubDate>Sun, 20 Feb 2022 16:30:17 +0800</pubDate><guid>/archives/caddy/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Caddy服务器（或称 Caddy Web）是一个开源的，使用 Golang 编写，支持 HTTP/2 的 Web 服务端，它使用 Golang 标准库提供 HTTP 功能。Caddy 一个显著的特性是默认启用 HTTPS，它是第一个无需额外配置即可提供 HTTPS 特性的 Web 服务器。Caddy 可以提供各种网站技术，它也可以作为反向代理和负载均衡器。Caddy 的大部分功能都以中间件的形式实现，并通过 Caddyfile 中的指令（用于配置 Caddy 的文本文件）进行控制。&lt;/p>
&lt;blockquote>
&lt;p>简单来说就是开箱即用&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a class="link" href="https://caddyserver.com" target="_blank" rel="noopener"
>Caddy 官网
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>打开 &lt;strong>Caddy&lt;/strong> 官网，点击下载源文件，或者按照官方教程中的安装方式进行安装，我服务器是 &lt;strong>Debian&lt;/strong>，就使用命令行进行安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install -y debian-keyring debian-archive-keyring apt-transport-https
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -1sLf &lt;span class="s1">&amp;#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -1sLf &lt;span class="s1">&amp;#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> tee /etc/apt/sources.list.d/caddy-stable.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后可输入 &lt;code>caddy version&lt;/code> 或者 &lt;code>which caddy&lt;/code> 看是否安装成功。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：这里默认安装的是 Caddy2&lt;/p>
&lt;hr>
&lt;h2 id="配置">配置&lt;/h2>
&lt;p>安装完成后在浏览器输入服务器 IP 就可以看到 Caddy 已经开始运行了，并且生成了一个默认页面：&lt;/p>
&lt;p>&lt;img src="/archives/caddy/1.png"
width="700"
height="500"
srcset="/archives/caddy/1_hu5cc3cb5db54b606449e77ebac198a0cc_104229_480x0_resize_box_3.png 480w, /archives/caddy/1_hu5cc3cb5db54b606449e77ebac198a0cc_104229_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="默认页面"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="336px"
>&lt;/p>
&lt;p>这个时候我们创建好网站目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p /var/www/xx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后我们可以对 Caddy 进行配置了，用 &lt;code>vim&lt;/code> 命令对配置文件进行编辑，拿不准的可以下载下来编辑文件路径为 &lt;strong>/etc/caddy/Caddyfile&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Caddy 的配置比较简单，第一行输入绑定好的域名，这样就会自动开启80和443端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">xx.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后是网站根目录设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">xx.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/xx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样一个简单的站点就已经配置完成了，然后添加一些自己需要的功能，并且开启静态文件浏览：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">xx.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/xx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">XX@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果要开设多个站点，那么直接另起一行，进行其他站点的配置就行了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">xx.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/xx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">XX@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">www.xx.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/yy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">xx@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者将子域名重定向到主域名：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">xx.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/xx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">tls&lt;/span> &lt;span class="s">XX@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">www.xx.com&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">redir&lt;/span> &lt;span class="s">https://xx.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我的设置参考：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-caddyfile" data-lang="caddyfile">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 域名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="gh">domain.com&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置日志文件位置，等级为 error
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">log&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">output&lt;/span> &lt;span class="s">file&lt;/span> &lt;span class="s">/var/log/caddy/xx.log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">level&lt;/span> &lt;span class="s">error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 网站根目录
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">root&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/var/www/xx&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 开启 gzip
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">encode&lt;/span> &lt;span class="s">gzip&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 错误页面
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">handle_errors&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">rewrite&lt;/span> &lt;span class="nd">*&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="se">{err.status_code}&lt;/span>&lt;span class="s">.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">file_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # PHP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">php_fastcgi&lt;/span> &lt;span class="s">unix//run/php/php7-fpm.sock&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # 静态文件服务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">file_server&lt;/span>&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"> # TLS设置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">tls&lt;/span> &lt;span class="s">xx@email.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置完成后输入以下命令检查配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">caddy adapt --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如未报错，则表示配置无误。&lt;/p>
&lt;p>重载 Caddy 配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">caddy reload --config /etc/caddy/Caddyfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启 Caddy 并添加自启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart caddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> caddy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一些基本的 Caddy 配置就是这么多了，详细内容可以到官方文档进行查阅：&lt;a class="link" href="https://caddyserver.com/docs/" target="_blank" rel="noopener"
>Caddy 官方文档
&lt;span style="white-space: nowrap;">&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="上传文件">上传文件&lt;/h2>
&lt;p>最后我们将自己的静态文件页面上传至 &lt;strong>/var/www/xxx&lt;/strong> 也就是你的网站根目录下即可进行访问啦！&lt;/p></description></item><item><title>VPS 的一些基本配置及优化</title><link>/archives/setvps/</link><pubDate>Fri, 18 Feb 2022 17:14:41 +0800</pubDate><guid>/archives/setvps/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>由于最近在使用 VPS 时，发现 SSH 一直在被人暴力扫描，虽然说没有被破解，但是老是被人盯着总感觉不太舒服。其实要保证安全登录，最简单的方法就是修改默认的 22 端口；最彻底的方法，是禁用密码登录，改用密钥登录，只要保证密钥安全，服务器也没有人能进入了。而且现在手中的 VPS 越来越多，每次都要进行一些基本配置。所以对这些配置进行一下记录，方便以后查看。&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;h3 id="修改登录密码">修改登录密码&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>输入密码是不会显示的，按照提示输入新密码回车两次即可&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="更新安装基本软件">更新、安装基本软件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt dist-upgrade -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt autoremove -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt autoclean
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install -y wget curl vim screen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="修改ssh端口">修改SSH端口&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>这里我使用 vim 编辑，拿不准可以直接下载到本地编辑&lt;/p>
&lt;/blockquote>
&lt;p>找到默认 &lt;strong>22&lt;/strong> 端口，将光标移动到该位置，输入 &lt;code>i&lt;/code> 进行编辑；去掉前面的注释，并且添加一个端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">1234&lt;/span> &lt;span class="c1"># 以 1234 端口为例&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编辑完成后按下 &lt;code>ESC&lt;/code> 然后输入 &lt;code>:wq&lt;/code> 保存退出，并重启 &lt;code>ssh&lt;/code> 服务进程：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置完毕后需要开放新端口，并开启防火墙；如果 VPS 管理面板自带防火墙可以通过管理面板开放端口；没有的话，我一般用 &lt;code>ufw&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install -y ufw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ufw allow &lt;span class="m">1234&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ufw &lt;span class="nb">enable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>开启防火墙后记得通过 &lt;code>ufw allow xx&lt;/code> 开放常用端口&lt;/p>
&lt;/blockquote>
&lt;p>设置完成后，通过新端口进行 SSH 登录，测试是否成功，并且将默认的端口关闭：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vim /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将默认端口一行注释掉：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#Port 22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Port &lt;span class="m">1234&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="设置秘钥登录">设置秘钥登录&lt;/h3>
&lt;p>修改端口虽然可以提升安全性，但是还是会被扫出端口，所以我们可以设置秘钥登录，并关闭密码登录。&lt;/p>
&lt;ul>
&lt;li>通过命令行生成公钥与私钥&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>提示如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Generating public/private rsa key pair.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter file in which to save the key &lt;span class="o">(&lt;/span>/root/.ssh/id_rsa&lt;span class="o">)&lt;/span>: &lt;span class="c1"># 输入存储位置，建议回车使用默认位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter passphrase &lt;span class="o">(&lt;/span>empty &lt;span class="k">for&lt;/span> no passphrase&lt;span class="o">)&lt;/span>: &lt;span class="c1"># 输入密码(留空则直接回车)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter same passphrase again: &lt;span class="c1"># 重复输入密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your identification has been saved in /root/.ssh/id_rsa.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public key has been saved in /root/.ssh/id_rsa.pub. &lt;span class="c1"># 公钥与私钥存储位置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>生成的秘钥文件位于 &lt;code>~/.ssh&lt;/code> 目录下&lt;/p>
&lt;/blockquote>
&lt;p>也可以通过 &lt;code>XShell&lt;/code> 或者 &lt;code>PuTTy Gen&lt;/code> 软件进行生成秘钥文件，但是要注意它们生成的私钥并不通用，需要通过 &lt;code>PuTTy Gen&lt;/code> 进行转换。&lt;/p>
&lt;ul>
&lt;li>上传/配置公钥文件&lt;/li>
&lt;/ul>
&lt;p>如果是使用命令行在 VPS 生成的秘钥文件，则将私钥文件下载并导入 SSH 软件即可。若是软件生成，则将 &lt;code>id_rsa.pub&lt;/code> 文件上传至 &lt;code>~/.ssh&lt;/code> 目录下，完成上述操作后执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mv id_rsa.pub authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后修改 &lt;code>sshd_config&lt;/code> 找到并修改成下面个配置 ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">PubkeyAuthentication yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保存退出，并重启服务进程：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 SSH 软件测试是否可以通过秘钥文件进行登录。&lt;/p>
&lt;ul>
&lt;li>禁止密码登录&lt;/li>
&lt;/ul>
&lt;p>确认可以通过秘钥文件进行登录后，就可以禁止密码登录了，修改 &lt;code>etc/ssh/sshd_config&lt;/code> 文件，找到并修改成如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">PasswordAuthentication no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启 &lt;code>ssh&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="开启加速服务">开启加速服务&lt;/h3>
&lt;p>复制下面命令，粘贴回车：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget -N --no-check-certificate &lt;span class="s2">&amp;#34;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x tcp.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./tcp.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>面板如下：&lt;/p>
&lt;p>&lt;img src="/archives/setvps/1.png"
width="700"
height="350"
srcset="/archives/setvps/1_hu94e41dce69550f3ce8ef0aa12afc1238_130680_480x0_resize_box_3.png 480w, /archives/setvps/1_hu94e41dce69550f3ce8ef0aa12afc1238_130680_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 操作面板"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="480px"
>&lt;/p>
&lt;p>操作方法：先安装内核，重启 VPS 让内核生效，再启动对应的加速即可。数字 1 的 BBR/BBR 魔改内核对应数字 4、5、6 的 BBR 加速、BBR 魔改加速和暴力 BBR 魔改版加速。数字 2 的 BBRplus 内核对应数字 7 的 BBRplus 加速。数字 3 的锐速加速内核对应数字 8 的锐速加速。&lt;/p>
&lt;p>先安装内核，等待提示重启后输入 &lt;code>y&lt;/code> 进行重启：&lt;/p>
&lt;p>&lt;img src="/archives/setvps/2.png"
width="700"
height="500"
srcset="/archives/setvps/2_hu95b0bd781b4f3488105adc50efb4203d_247003_480x0_resize_box_3.png 480w, /archives/setvps/2_hu95b0bd781b4f3488105adc50efb4203d_247003_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 重启提示"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="336px"
>&lt;/p>
&lt;p>如果安装内核过程中，出现以下情况，选择否即可：&lt;/p>
&lt;p>&lt;img src="/archives/setvps/3.png"
width="905"
height="360"
srcset="/archives/setvps/3_hud49bf6abde7ecb7140857e7670f57d84_18388_480x0_resize_box_3.png 480w, /archives/setvps/3_hud49bf6abde7ecb7140857e7670f57d84_18388_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="◎ 特殊情况"
class="gallery-image"
data-flex-grow="251"
data-flex-basis="603px"
>&lt;/p>
&lt;p>重启完成后，输入 &lt;code>./tcp.sh&lt;/code> 进入加速面板，选择对应内核的加速并输入对应数字开启加速。看到提示加速成功后，再次输入 &lt;code>./tcp.sh&lt;/code> 检查是否成功开启&lt;/p>
&lt;p>如果想换一个加速，输入 &lt;code>./tcp.sh&lt;/code> 进入面板，并输入数字9进行卸载加速，然后进行同样的操作，安装内核再安装对应内核的加速即可。&lt;/p>
&lt;hr>
&lt;p>至此 VPS 的一些基本配置与优化结束&lt;/p>
&lt;hr></description></item></channel></rss>